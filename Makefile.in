# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# 
#   Copyright (C) 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012
#   Free Software Foundation, Inc.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
# 

# 
#   Copyright (C) 2010 Free Software Foundation, Inc.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
# 

# 
# Copyright (C) 2005, 2006, 2007, 2008, 2009, 2010,
#               2011 Free Software Foundation, Inc.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
# 

# 
#   Copyright (C) 2005, 2006, 2007, 2008, 2009, 2010, 2011. 2012
#   Free Software Foundation, Inc.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
# 

# 
#   Copyright (C) 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012
#   Free Software Foundation, Inc.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
# 

# Build a Debian/Ubuntu .deb GNU/Linux package

# 
#   Copyright (C) 2005, 2006, 2007, 2008, 2009, 2010 Free Software Foundation, Inc.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
# 

#
# Build a Debian Familiar .ipk GNU/Linux package. These are always
# cross compiled, typically for the ARM or XScale.
#

# 
#   Copyright (C) 2005, 2006, 2007, 2008, 2009, 2010 Free Software Foundation, Inc.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
# 

# 
#   Copyright (C) 2005, 2006, 2007, 2008, 2009, 2010 Free Software Foundation, Inc.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
# 

#
# BSD package building
#

VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@

# Only build all devices on Linux, as Input Events are
# primarily a Linux only thing.
@LINUX_TRUE@am__append_1 = --enable-device=all
DIST_COMMON = README $(am__configure_deps) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(srcdir)/gnash.pc.in \
	$(srcdir)/gnashconfig.h.in $(srcdir)/packaging/alp.am \
	$(srcdir)/packaging/bsd.am $(srcdir)/packaging/deb.am \
	$(srcdir)/packaging/ipkg.am $(srcdir)/packaging/rpm.am \
	$(srcdir)/packaging/snapshot.am $(srcdir)/pch.am \
	$(top_srcdir)/configure ABOUT-NLS AUTHORS COPYING ChangeLog \
	INSTALL NEWS TODO compile config.guess config.rpath config.sub \
	depcomp install-sh ltmain.sh missing mkinstalldirs

#
# PCH is precompiled headers, which can spead up builds.
# 
@ENABLE_PCH_TRUE@am__append_2 = all-includes.h.gch
@ENABLE_PCH_TRUE@am__append_3 = all-includes.h.gch
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/macros/agg.m4 \
	$(top_srcdir)/macros/boost.m4 $(top_srcdir)/macros/curl.m4 \
	$(top_srcdir)/macros/dbus.m4 $(top_srcdir)/macros/docbook.m4 \
	$(top_srcdir)/macros/ffmpeg.m4 $(top_srcdir)/macros/firefox.m4 \
	$(top_srcdir)/macros/freetype.m4 \
	$(top_srcdir)/macros/gconf-2.m4 \
	$(top_srcdir)/macros/gettext.m4 $(top_srcdir)/macros/gles.m4 \
	$(top_srcdir)/macros/glib.m4 \
	$(top_srcdir)/macros/gnashpkgtool.m4 \
	$(top_srcdir)/macros/gtk2.m4 $(top_srcdir)/macros/gtkglext.m4 \
	$(top_srcdir)/macros/haxe.m4 $(top_srcdir)/macros/iconv.m4 \
	$(top_srcdir)/macros/kde3.m4 $(top_srcdir)/macros/kde4.m4 \
	$(top_srcdir)/macros/lib-ld.m4 \
	$(top_srcdir)/macros/lib-link.m4 \
	$(top_srcdir)/macros/lib-prefix.m4 \
	$(top_srcdir)/macros/libtool.m4 \
	$(top_srcdir)/macros/ltoptions.m4 \
	$(top_srcdir)/macros/ltsugar.m4 \
	$(top_srcdir)/macros/ltversion.m4 \
	$(top_srcdir)/macros/lt~obsolete.m4 \
	$(top_srcdir)/macros/ming.m4 $(top_srcdir)/macros/mtasc.m4 \
	$(top_srcdir)/macros/mysql.m4 $(top_srcdir)/macros/nls.m4 \
	$(top_srcdir)/macros/npapi.m4 $(top_srcdir)/macros/opengl.m4 \
	$(top_srcdir)/macros/openvg.m4 $(top_srcdir)/macros/pango.m4 \
	$(top_srcdir)/macros/pkg.m4 $(top_srcdir)/macros/po.m4 \
	$(top_srcdir)/macros/progtest.m4 \
	$(top_srcdir)/macros/pthreads.m4 \
	$(top_srcdir)/macros/python.m4 $(top_srcdir)/macros/qt3.m4 \
	$(top_srcdir)/macros/qt4.m4 $(top_srcdir)/macros/sdl.m4 \
	$(top_srcdir)/macros/swfmill.m4 $(top_srcdir)/macros/x11.m4 \
	$(top_srcdir)/cygnal/acinclude.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = gnashconfig.h
CONFIG_CLEAN_FILES = gnash.pc
CONFIG_CLEAN_VPATH_FILES =
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
SOURCES =
DIST_SOURCES =
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(pkgconfigdir)"
DATA = $(pkgconfig_DATA)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \
	$(RECURSIVE_CLEAN_TARGETS:-recursive=) tags TAGS ctags CTAGS \
	distdir dist dist-all distcheck
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = desktop libdevice libbase libmedia libsound libcore \
	librender gui plugin cygnal utilities extensions doc po \
	testsuite
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  { test ! -d "$(distdir)" \
    || { find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr "$(distdir)"; }; }
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
distuninstallcheck_listfiles = find . -type f -print
distcleancheck_listfiles = find . -type f -print
ACLOCAL = @ACLOCAL@
AGG_CFLAGS = @AGG_CFLAGS@
AGG_LIBS = @AGG_LIBS@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
ANDROID_NDK = @ANDROID_NDK@
AR = @AR@
AS = @AS@
AS3COMPILE = @AS3COMPILE@
ATK_CFLAGS = @ATK_CFLAGS@
ATK_CONFIG = @ATK_CONFIG@
ATK_LIBS = @ATK_LIBS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AUTOTRACE = @AUTOTRACE@
AWK = @AWK@
BOOST_CFLAGS = @BOOST_CFLAGS@
BOOST_CYGNAL_LIBS = @BOOST_CYGNAL_LIBS@
BOOST_LIBS = @BOOST_LIBS@
BUILDDATE = @BUILDDATE@
BZ2_LIBS = @BZ2_LIBS@
CAIRO_CFLAGS = @CAIRO_CFLAGS@
CAIRO_CONFIG = @CAIRO_CONFIG@
CAIRO_LIBS = @CAIRO_LIBS@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CSOUND = @CSOUND@
CURL_CFLAGS = @CURL_CFLAGS@
CURL_LIBS = @CURL_LIBS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DB2X_MAN = @DB2X_MAN@
DB2X_MANXML = @DB2X_MANXML@
DB2X_PDF = @DB2X_PDF@
DB2X_TEXI = @DB2X_TEXI@
DB2X_TEXIXML = @DB2X_TEXIXML@
DB2X_VERSION = @DB2X_VERSION@
DB2X_XSLTPROC = @DB2X_XSLTPROC@
DBUS_CFLAGS = @DBUS_CFLAGS@
DBUS_LIBS = @DBUS_LIBS@
DEFAULT_FLASH_MAJOR_VERSION = @DEFAULT_FLASH_MAJOR_VERSION@
DEFAULT_FLASH_MINOR_VERSION = @DEFAULT_FLASH_MINOR_VERSION@
DEFAULT_FLASH_PLATFORM_ID = @DEFAULT_FLASH_PLATFORM_ID@
DEFAULT_FLASH_REV_NUMBER = @DEFAULT_FLASH_REV_NUMBER@
DEFAULT_FLASH_SYSTEM_OS = @DEFAULT_FLASH_SYSTEM_OS@
DEFAULT_SOL_SAFEDIR = @DEFAULT_SOL_SAFEDIR@
DEFAULT_STREAMS_TIMEOUT = @DEFAULT_STREAMS_TIMEOUT@
DEFS = @DEFS@
DEJAGNU = @DEJAGNU@
DEJAGNU_CFLAGS = @DEJAGNU_CFLAGS@
DEJAGNU_CONFIG = @DEJAGNU_CONFIG@
DEPDIR = @DEPDIR@
DIRECTFB_CFLAGS = @DIRECTFB_CFLAGS@
DIRECTFB_CONFIG = @DIRECTFB_CONFIG@
DIRECTFB_LIBS = @DIRECTFB_LIBS@
DLLTOOL = @DLLTOOL@
DLOPEN = @DLOPEN@
DLPREOPEN = @DLPREOPEN@
DOXYGEN = @DOXYGEN@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGL_CFLAGS = @EGL_CFLAGS@
EGL_CONFIG = @EGL_CONFIG@
EGL_LIBS = @EGL_LIBS@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
EXPAT_CFLAGS = @EXPAT_CFLAGS@
EXPAT_CONFIG = @EXPAT_CONFIG@
EXPAT_LIBS = @EXPAT_LIBS@
EXTENSIONS_LIST = @EXTENSIONS_LIST@
EXTRA_EGL_LIBS = @EXTRA_EGL_LIBS@
FAKEFB = @FAKEFB@
FC_MATCH = @FC_MATCH@
FFMPEG_CFLAGS = @FFMPEG_CFLAGS@
FFMPEG_LIBS = @FFMPEG_LIBS@
FGREP = @FGREP@
FIREFOX_PLUGINS = @FIREFOX_PLUGINS@
FLTK2_CFLAGS = @FLTK2_CFLAGS@
FLTK2_CONFIG = @FLTK2_CONFIG@
FLTK2_LIBS = @FLTK2_LIBS@
FONTCONFIG_CFLAGS = @FONTCONFIG_CFLAGS@
FONTCONFIG_CONFIG = @FONTCONFIG_CONFIG@
FONTCONFIG_LIBS = @FONTCONFIG_LIBS@
FOP = @FOP@
FREETYPE2_CFLAGS = @FREETYPE2_CFLAGS@
FREETYPE2_LIBS = @FREETYPE2_LIBS@
GCONFTOOL = @GCONFTOOL@
GCONF_CFLAGS = @GCONF_CFLAGS@
GCONF_LIBS = @GCONF_LIBS@
GCONF_SCHEMA_CONFIG_SOURCE = @GCONF_SCHEMA_CONFIG_SOURCE@
GCONF_SCHEMA_FILE_DIR = @GCONF_SCHEMA_FILE_DIR@
GETTEXT_MACRO_VERSION = @GETTEXT_MACRO_VERSION@
GIF_CFLAGS = @GIF_CFLAGS@
GIF_CONFIG = @GIF_CONFIG@
GIF_LIBS = @GIF_LIBS@
GIT = @GIT@
GLES1_CFLAGS = @GLES1_CFLAGS@
GLES1_LIBS = @GLES1_LIBS@
GLES2_CFLAGS = @GLES2_CFLAGS@
GLES2_LIBS = @GLES2_LIBS@
GLEXT_CFLAGS = @GLEXT_CFLAGS@
GLEXT_LIBS = @GLEXT_LIBS@
GLIB_CFLAGS = @GLIB_CFLAGS@
GLIB_LIBS = @GLIB_LIBS@
GMSGFMT = @GMSGFMT@
GMSGFMT_015 = @GMSGFMT_015@
GREP = @GREP@
GSTREAMER_APP_CFLAGS = @GSTREAMER_APP_CFLAGS@
GSTREAMER_APP_CONFIG = @GSTREAMER_APP_CONFIG@
GSTREAMER_APP_LIBS = @GSTREAMER_APP_LIBS@
GSTREAMER_CFLAGS = @GSTREAMER_CFLAGS@
GSTREAMER_CONFIG = @GSTREAMER_CONFIG@
GSTREAMER_LIBS = @GSTREAMER_LIBS@
GSTREAMER_PBUTILS_CFLAGS = @GSTREAMER_PBUTILS_CFLAGS@
GSTREAMER_PBUTILS_CONFIG = @GSTREAMER_PBUTILS_CONFIG@
GSTREAMER_PBUTILS_LIBS = @GSTREAMER_PBUTILS_LIBS@
GSTREAMER_PLUGINS_BASE_CFLAGS = @GSTREAMER_PLUGINS_BASE_CFLAGS@
GSTREAMER_PLUGINS_BASE_CONFIG = @GSTREAMER_PLUGINS_BASE_CONFIG@
GSTREAMER_PLUGINS_BASE_LIBS = @GSTREAMER_PLUGINS_BASE_LIBS@
GST_INSPECT = @GST_INSPECT@
GTK2_CFLAGS = @GTK2_CFLAGS@
GTK2_LIBS = @GTK2_LIBS@
HAIKU_LIBS = @HAIKU_LIBS@
HAXE = @HAXE@
HAXE_CLASSPATH = @HAXE_CLASSPATH@
HTTP_TESTSUITE = @HTTP_TESTSUITE@
HWACCEL_CONFIG = @HWACCEL_CONFIG@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_INFO = @INSTALL_INFO@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
INTLLIBS = @INTLLIBS@
INTL_MACOSX_LIBS = @INTL_MACOSX_LIBS@
JAVA = @JAVA@
JPEG_CFLAGS = @JPEG_CFLAGS@
JPEG_CONFIG = @JPEG_CONFIG@
JPEG_LIBS = @JPEG_LIBS@
KDE3_APPSDATADIR = @KDE3_APPSDATADIR@
KDE3_CFLAGS = @KDE3_CFLAGS@
KDE3_CONFIG = @KDE3_CONFIG@
KDE3_CONFIGDIR = @KDE3_CONFIGDIR@
KDE3_LIBS = @KDE3_LIBS@
KDE3_PLUGINDIR = @KDE3_PLUGINDIR@
KDE3_SERVICESDIR = @KDE3_SERVICESDIR@
KDE4_APPSDATADIR = @KDE4_APPSDATADIR@
KDE4_CFLAGS = @KDE4_CFLAGS@
KDE4_CONFIG = @KDE4_CONFIG@
KDE4_CONFIGDIR = @KDE4_CONFIGDIR@
KDE4_LIBS = @KDE4_LIBS@
KDE4_PLUGINDIR = @KDE4_PLUGINDIR@
KDE4_SERVICESDIR = @KDE4_SERVICESDIR@
KLASH_PLUGIN = @KLASH_PLUGIN@
LC_KEY = @LC_KEY@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBAVCODEC_IDENT = @LIBAVCODEC_IDENT@
LIBICONV = @LIBICONV@
LIBINTL = @LIBINTL@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIBTOOL_DEPS = @LIBTOOL_DEPS@
LIBVA_CFLAGS = @LIBVA_CFLAGS@
LIBVA_CONFIG = @LIBVA_CONFIG@
LIBVA_GLX_CFLAGS = @LIBVA_GLX_CFLAGS@
LIBVA_GLX_CONFIG = @LIBVA_GLX_CONFIG@
LIBVA_GLX_LIBS = @LIBVA_GLX_LIBS@
LIBVA_LIBS = @LIBVA_LIBS@
LIBVA_X11_CFLAGS = @LIBVA_X11_CFLAGS@
LIBVA_X11_CONFIG = @LIBVA_X11_CONFIG@
LIBVA_X11_LIBS = @LIBVA_X11_LIBS@
LIPO = @LIPO@
LN_S = @LN_S@
LTDL_CFLAGS = @LTDL_CFLAGS@
LTDL_CONFIG = @LTDL_CONFIG@
LTDL_LIBS = @LTDL_LIBS@
LTLIBICONV = @LTLIBICONV@
LTLIBINTL = @LTLIBINTL@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MAKESWF = @MAKESWF@
MANIFEST_TOOL = @MANIFEST_TOOL@
MEDIA_CONFIG = @MEDIA_CONFIG@
MING_CFLAGS = @MING_CFLAGS@
MING_CONFIG = @MING_CONFIG@
MING_LIBS = @MING_LIBS@
MING_VERSION = @MING_VERSION@
MING_VERSION_CODE = @MING_VERSION_CODE@
MKDIR_P = @MKDIR_P@
MOC3 = @MOC3@
MOC4 = @MOC4@
MSGFMT = @MSGFMT@
MSGFMT_015 = @MSGFMT_015@
MSGMERGE = @MSGMERGE@
MTASC = @MTASC@
MTASC_CLASSPATH = @MTASC_CLASSPATH@
MYSQL_CFLAGS = @MYSQL_CFLAGS@
MYSQL_LIBS = @MYSQL_LIBS@
NETCAT = @NETCAT@
NM = @NM@
NMEDIT = @NMEDIT@
NPAPI_CFLAGS = @NPAPI_CFLAGS@
NSPR_CFLAGS = @NSPR_CFLAGS@
NSPR_CONFIG = @NSPR_CONFIG@
NSPR_LIBS = @NSPR_LIBS@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OPENGL_CFLAGS = @OPENGL_CFLAGS@
OPENGL_LIBS = @OPENGL_LIBS@
OPENVG_CFLAGS = @OPENVG_CFLAGS@
OPENVG_LIBS = @OPENVG_LIBS@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PANGO_CFLAGS = @PANGO_CFLAGS@
PANGO_LIBS = @PANGO_LIBS@
PATH_SEPARATOR = @PATH_SEPARATOR@
PCH_FLAGS = @PCH_FLAGS@
PDFXMLTEX = @PDFXMLTEX@
PERL = @PERL@
PKG_CONFIG = @PKG_CONFIG@
PNG_CFLAGS = @PNG_CFLAGS@
PNG_CONFIG = @PNG_CONFIG@
PNG_LIBS = @PNG_LIBS@
POSUB = @POSUB@
PTHREAD_CC = @PTHREAD_CC@
PTHREAD_CFLAGS = @PTHREAD_CFLAGS@
PTHREAD_CXX = @PTHREAD_CXX@
PTHREAD_LIBS = @PTHREAD_LIBS@
PYGOBJECT_CODEGEN = @PYGOBJECT_CODEGEN@
PYGTK_CFLAGS = @PYGTK_CFLAGS@
PYGTK_CODEGEN = @PYGTK_CODEGEN@
PYGTK_DEFSDIR = @PYGTK_DEFSDIR@
PYGTK_LIBS = @PYGTK_LIBS@
PYTHON = @PYTHON@
PYTHON_CFLAGS = @PYTHON_CFLAGS@
PYTHON_EXEC_PREFIX = @PYTHON_EXEC_PREFIX@
PYTHON_LIBS = @PYTHON_LIBS@
PYTHON_PLATFORM = @PYTHON_PLATFORM@
PYTHON_PREFIX = @PYTHON_PREFIX@
PYTHON_VERSION = @PYTHON_VERSION@
QT3_CFLAGS = @QT3_CFLAGS@
QT3_LIBS = @QT3_LIBS@
QT4_CFLAGS = @QT4_CFLAGS@
QT4_LIBS = @QT4_LIBS@
RANLIB = @RANLIB@
RED5_HOST = @RED5_HOST@
RENDERER_CONFIG = @RENDERER_CONFIG@
RENDERER_LIBS = @RENDERER_LIBS@
RTMPY_HOST = @RTMPY_HOST@
SCROLLINSTALL = @SCROLLINSTALL@
SCROLLKEEPER = @SCROLLKEEPER@
SCROLLUPDATE = @SCROLLUPDATE@
SDL_CFLAGS = @SDL_CFLAGS@
SDL_CONFIG = @SDL_CONFIG@
SDL_LIBS = @SDL_LIBS@
SECURITY_LIST = @SECURITY_LIST@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SOLDIR = @SOLDIR@
SPEEXDSP_CFLAGS = @SPEEXDSP_CFLAGS@
SPEEXDSP_CONFIG = @SPEEXDSP_CONFIG@
SPEEXDSP_LIBS = @SPEEXDSP_LIBS@
SPEEX_CFLAGS = @SPEEX_CFLAGS@
SPEEX_CONFIG = @SPEEX_CONFIG@
SPEEX_LIBS = @SPEEX_LIBS@
SSH_CFLAGS = @SSH_CFLAGS@
SSH_CONFIG = @SSH_CONFIG@
SSH_LIBS = @SSH_LIBS@
SSL_CFLAGS = @SSL_CFLAGS@
SSL_CONFIG = @SSL_CONFIG@
SSL_LIBS = @SSL_LIBS@
STATISTICS_LIST = @STATISTICS_LIST@
STRIP = @STRIP@
SUPPORTED_GUIS = @SUPPORTED_GUIS@
SWFC = @SWFC@
SWFDEC_TESTSUITE = @SWFDEC_TESTSUITE@
SWFMILL = @SWFMILL@
SWFMILL_VERSION = @SWFMILL_VERSION@
TS_CFLAGS = @TS_CFLAGS@
TS_CONFIG = @TS_CONFIG@
TS_LIBS = @TS_LIBS@
UIC4 = @UIC4@
UNGIF_CFLAGS = @UNGIF_CFLAGS@
UNGIF_CONFIG = @UNGIF_CONFIG@
UNGIF_LIBS = @UNGIF_LIBS@
USE_NLS = @USE_NLS@
VERSION = @VERSION@
WGET = @WGET@
WINDRES = @WINDRES@
X11_CFLAGS = @X11_CFLAGS@
X11_LIBS = @X11_LIBS@
XFT_CFLAGS = @XFT_CFLAGS@
XFT_CONFIG = @XFT_CONFIG@
XFT_LIBS = @XFT_LIBS@
XGETTEXT = @XGETTEXT@
XGETTEXT_015 = @XGETTEXT_015@
XGETTEXT_EXTRA_OPTIONS = @XGETTEXT_EXTRA_OPTIONS@
XSLTPROC = @XSLTPROC@
Z_CFLAGS = @Z_CFLAGS@
Z_CONFIG = @Z_CONFIG@
Z_LIBS = @Z_LIBS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
curlconfig = @curlconfig@
datadir = @datadir@
datarootdir = @datarootdir@
docbook_styles = @docbook_styles@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mconfig = @mconfig@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
pkgpyexecdir = @pkgpyexecdir@
pkgpythondir = @pkgpythondir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
pth_config = @pth_config@
pthread_config = @pthread_config@
pyexecdir = @pyexecdir@
pythonconfig = @pythonconfig@
pythondir = @pythondir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@

# no-portability allows us to use GNU make variable assignments
# without automake complaining.
AUTOMAKE_OPTIONS = 1.6.0 -Wno-portability
ACLOCAL_AMFLAGS = -I macros -I cygnal
noinst_SCRIPT = autogen.sh
DISTCHECK_CONFIGURE_FLAGS = --with-plugins-install=prefix \
	--enable-extensions=all --enable-gui=all --enable-device=all \
	--enable-renderer=all --enable-python --enable-cygnal \
	$(am__append_1)
@CYGNAL_TRUE@CYGNAL_DIR = cygnal
@BUILD_DEVICES_TRUE@DEVICES_DIR = libdevice
@TESTSUITE_TRUE@TEST_DIR = testsuite
@BUILD_EXTENSIONS_TRUE@EXT_DIR = extensions
SUBDIRS = \
	desktop \
	$(DEVICES_DIR) \
	libbase \
	libmedia \
	libsound \
	libcore \
	librender \
	gui \
	plugin \
	$(CYGNAL_DIR) \
	utilities \
	$(EXT_DIR) \
	doc \
	po \
	$(TEST_DIR) \
	$(NULL)


# man_MANS = doc/gnash.1 doc/gprocessor.1 doc/dumpshm.1 soldumper.1
EXTRA_DIST = \
	README \
	README.git \
	autogen.sh \
	config.rpath \
	base-attempter.sh \
	macros/incllist macros/libslist \
	doc/changelogs/ChangeLog-0.8.0 \
	doc/changelogs/ChangeLog-0.8.1 \
	doc/changelogs/ChangeLog-0.8.2 \
	doc/changelogs/ChangeLog-0.8.3 \
	doc/changelogs/ChangeLog-0.8.4 \
	doc/changelogs/ChangeLog-0.8.5 \
	doc/changelogs/ChangeLog-0.8.6 \
	doc/changelogs/ChangeLog-0.8.7 \
	doc/changelogs/ChangeLog-0.8.8 \
	packaging/deb.am \
	packaging/snapshot.am \
	packaging/alp.am \
	packaging/ipkg.am \
	packaging/bsd.am \
	packaging/rpm.am \
	packaging/gnash.xpm \
	packaging/klash.xpm \
	revno.h


# dist-hook:
# 	@test -d "$(distdir)/packaging" || $(mkinstalldirs) "$(distdir)/packaging"
# 	cp -p $(srcdir)/*.am $(top_distdir)/packaging/

# these files are created when building packages
CLEANFILES = .configline $(am__append_3) ipkg-* alp-* $(ALP_NAMESPACE) \
	*.deb *.dsc *.gz *.bz2 *.changes deb-copy-stamp gnash*git* \
	gnash-* rpmbuild gnash.spec .rpmmacros
DISTCLEANFILES = revno.h .lastmod deb-attempt-install-dependencies.sh rpm-attempt-install-dependencies.sh
MAINTAINERCLEANFILES = revno.h .lastmod
BUILT_SOURCES = revno.h .configline $(am__append_2)
@ENABLE_PCH_TRUE@PCHHEADERS = \
@ENABLE_PCH_TRUE@	$(top_srcdir)/libcore/asobj/Global_as.h \
@ENABLE_PCH_TRUE@	$(top_srcdir)/libcore/builtin_function.h \
@ENABLE_PCH_TRUE@	$(top_srcdir)/libcore/NativeFunction.h \
@ENABLE_PCH_TRUE@	$(top_srcdir)/libcore/Shape.h \
@ENABLE_PCH_TRUE@	$(top_srcdir)/libcore/SWFStream.h \
@ENABLE_PCH_TRUE@	$(top_srcdir)/libcore/ObjectURI.h \
@ENABLE_PCH_TRUE@	$(top_srcdir)/libcore/PropertyList.h \
@ENABLE_PCH_TRUE@	$(top_srcdir)/libcore/movie_root.h \
@ENABLE_PCH_TRUE@	$(top_srcdir)/libcore/SWFRect.h \
@ENABLE_PCH_TRUE@	$(top_srcdir)/libcore/MovieClip.h \
@ENABLE_PCH_TRUE@	$(top_srcdir)/libcore/SWFMatrix.h \
@ENABLE_PCH_TRUE@	$(top_srcdir)/libcore/DisplayList.h	\
@ENABLE_PCH_TRUE@	$(top_srcdir)/libcore/DynamicShape.h	\
@ENABLE_PCH_TRUE@	$(top_srcdir)/libcore/Geometry.h	\
@ENABLE_PCH_TRUE@	$(top_srcdir)/libbase/SimpleBuffer.h \
@ENABLE_PCH_TRUE@	$(top_srcdir)/libbase/GnashNumeric.h \
@ENABLE_PCH_TRUE@	$(top_srcdir)/libbase/tu_file.h \
@ENABLE_PCH_TRUE@	$(top_srcdir)/libbase/GnashAlgorithm.h \
@ENABLE_PCH_TRUE@	$(top_srcdir)/libbase/smart_ptr.h \
@ENABLE_PCH_TRUE@	$(top_srcdir)/libbase/GC.h \
@ENABLE_PCH_TRUE@	$(top_srcdir)/libbase/log.h \
@ENABLE_PCH_TRUE@	$(top_srcdir)/libbase/rc.h \
@ENABLE_PCH_TRUE@	$(top_srcdir)/libbase/URL.h \
@ENABLE_PCH_TRUE@	$(top_srcdir)/libbase/snappingrange.h \
@ENABLE_PCH_TRUE@	$(top_srcdir)/libbase/GnashImage.h \
@ENABLE_PCH_TRUE@	$(NULL)

@ENABLE_PCH_TRUE@PCHFLAGS = \
@ENABLE_PCH_TRUE@	-I$(top_builddir) \
@ENABLE_PCH_TRUE@	-I$(srcdir) \
@ENABLE_PCH_TRUE@	-I$(top_srcdir) \
@ENABLE_PCH_TRUE@	-I$(top_srcdir)/libamf \
@ENABLE_PCH_TRUE@	-I$(top_srcdir)/libnet \
@ENABLE_PCH_TRUE@	-I$(top_srcdir)/libcore \
@ENABLE_PCH_TRUE@	-I$(top_srcdir)/libcore/parser \
@ENABLE_PCH_TRUE@	-I$(top_srcdir)/libcore/swf \
@ENABLE_PCH_TRUE@	-I$(top_srcdir)/libcore/vm \
@ENABLE_PCH_TRUE@	-I$(top_srcdir)/libbase \
@ENABLE_PCH_TRUE@	-I$(top_srcdir)/backend \
@ENABLE_PCH_TRUE@	-I$(top_srcdir)/libcore/abc \
@ENABLE_PCH_TRUE@	-I$(top_srcdir)/libcore/asobj \
@ENABLE_PCH_TRUE@	-I$(top_srcdir)/libcore/asobj/flash \
@ENABLE_PCH_TRUE@	-I$(top_srcdir)/libltdl \
@ENABLE_PCH_TRUE@	-I$(top_srcdir)/libcore/vm \
@ENABLE_PCH_TRUE@	-I$(top_srcdir)/libmedia \
@ENABLE_PCH_TRUE@	-I$(top_srcdir)/libsound \
@ENABLE_PCH_TRUE@	$(PTHREAD_CFLAGS) \
@ENABLE_PCH_TRUE@	$(NULL)

NOW := $(shell date "+%Y%m%d")

# The branch nickname and revision number must be set before including
# the other Makefile fragments used for package building, as they use
# these values.
BRANCH_REVNO = "`if test -f revno.h; then grep "REVNO" revno.h | cut -d '"' -f 2; fi`"
BRANCH_NICK = "`if test -f revno.h; then grep "NICK" revno.h | cut -d '"' -f 2; fi`"

# this is used for Debian style naming conventions
NEXT_RELEASE = 0.8.11
#SNAPSHOT_VERSION := 0.8.11
SNAPSHOT_VERSION = $(NEXT_RELEASE)~git.$(BRANCH_NICK)$(BRANCH_REVNO)

# these is the directories where the snapshot gets built. Sources are
# in the top level, the build goes in a _build subdirectory
SNAPSHOT_DIR = gnash-$(SNAPSHOT_VERSION)
SNAPSHOT_BUILD = $(SNAPSHOT_DIR)/_build
SNAPSHOT_NAME = $(SNAPSHOT_DIR)

# this is the name of the actual tarball
SNAPSHOT_TAR = gnash-$(SNAPSHOT_VERSION).tar.gz
# this is the temporary directory used for DESTDIR
SNAPSHOT_TMP = /tmp/$(SNAPSHOT_DIR)
RPMBUILD_DIR = $(abs_top_builddir)/rpmbuild
RPMMACROS = $(abs_top_builddir)/.rpmmacros
RPMSPEC = $(abs_top_builddir)/gnash.spec
RPMBUILD_FLAGS = --macros=/usr/lib/rpm/macros:$(RPMMACROS) # --clean --rmsource --rmspec
FFMPEG := $(shell echo $(DEB_BUILD_OPTIONS) | grep -c "ffmpeg")
OGL := $(shell echo $(DEB_BUILD_OPTIONS) | grep -c "ogl")
VAAPI := $(shell echo $(DEB_BUILD_OPTIONS) | grep -c "vaapi")

# Look at the build options to calculate the new build name. This is
# used for the the snapshot source directory name.
BUILD_DIR := $(shell \
	snapshot_dir=$(SNAPSHOT_DIR); \
	if test $(OGL) -eq 1 -o $(FFMPEG) -eq 1 -o $(VAAPI) -eq 1; then \
	  if test $(OGL) -eq 1 -a $(FFMPEG) -eq 1; then \
	    snapshot_dir=$(subst git,git.ogl.ffmpeg,$(SNAPSHOT_DIR)); \
	  fi; \
	  if test $(OGL) -eq 1 -a $(FFMPEG) -eq 0; then \
	    snapshot_dir=$(subst git,git.ogl,$(SNAPSHOT_DIR)); \
	  fi; \
	  if test $(OGL) -eq 0 -a $(FFMPEG) -eq 1; then \
	    snapshot_dir=$(subst git,git.ffmpeg,$(SNAPSHOT_DIR)); \
	  fi; \
	  if test $(VAAPI) -eq 1; then \
	    snapshot_dir=$(subst git,git.vaapi,$(SNAPSHOT_DIR)); \
	  fi; \
	fi; \
	echo "$${snapshot_dir}")


# Look at the build options to calculate the new build name. This is
# used for the the snapshot version.
BUILD_VERSION := $(shell \
	snapshot_version=$(SNAPSHOT_VERSION); \
	if test $(OGL) -eq 1 -o $(FFMPEG) -eq 1 -o $(VAAPI) -eq 1; then \
	  if test $(OGL) -eq 1 -a $(FFMPEG) -eq 1; then \
	    snapshot_version=$(subst git,git.ogl.ffmpeg,$(SNAPSHOT_VERSION)); \
	  fi; \
	  if test $(OGL) -eq 1 -a $(FFMPEG) -eq 0; then \
	    snapshot_version=$(subst git,git.ogl,$(SNAPSHOT_VERSION)); \
	  fi; \
	  if test $(OGL) -eq 0 -a $(FFMPEG) -eq 1; then \
	    snapshot_version=$(subst git,git.ffmpeg,$(SNAPSHOT_VERSION)); \
	  fi; \
	  if test $(VAAPI) -eq 1; then \
	    snapshot_version=$(subst git,git.vaapi,$(SNAPSHOT_VERSION)); \
	  fi; \
	fi; \
	echo "$${snapshot_version}")


# This is a list of all the packages in the control file.
PACKAGES := \
	if test -f $(srcdir)/packaging/debian/control; then \
	  grep Package $(srcdir)/packaging/debian/control | sed -e 's/Package\://'; \
	else \
	  echo "gnash"; \
	fi


# this is where the output of "make install" goes, which is what
# we use to build the package.
IPKG_TMP = /tmp/$(host_alias)-gnash

# this is where the gnash gets compiled
IPKG_BUILD = gnash-${VERSION}

#
# Access Linux Platform support. ALP use netcat to install files,
# as well as a simple remote command set for the phone
#
NETCAT_REMOTE = $(NETCAT) -q 10 `cat /tmp/alp.ip` 5038
NETCAT_REMOTE_Q = $(NETCAT) -q 8  `cat /tmp/alp.ip` 5038
ALP_UML_IP = 192.168.3.101
ALP_REMOTE_IP = 192.168.1.101
ALP_NAMESPACE = org.gnu.gnash
ALP_BAR = $(ALP_NAMESPACE).bar
ALP_BUNDLE_DIR = /opt/alp/bundles/
ALP_TMP = /tmp/$(host_alias)-gnash

# this is where the gnash gets compiled
ALP_BUILD = gnash-${VERSION}
pkgconfigdir = $(libdir)/pkgconfig
pkgconfig_DATA = \
	gnash.pc \
	$(NULL)

SWFDEC_REPO = git://anongit.freedesktop.org/git/swfdec/swfdec
SWFDEC_MOUNT = $(top_builddir)/testsuite/swfdec/src
all: $(BUILT_SOURCES) gnashconfig.h
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
am--refresh:
	@:
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am $(srcdir)/pch.am $(srcdir)/packaging/snapshot.am $(srcdir)/packaging/rpm.am $(srcdir)/packaging/deb.am $(srcdir)/packaging/ipkg.am $(srcdir)/packaging/alp.am $(srcdir)/packaging/bsd.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --gnu'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --gnu \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

gnashconfig.h: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) $(AM_MAKEFLAGS) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/gnashconfig.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status gnashconfig.h
$(srcdir)/gnashconfig.h.in: @MAINTAINER_MODE_TRUE@ $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f gnashconfig.h stamp-h1
gnash.pc: $(top_builddir)/config.status $(srcdir)/gnash.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $@

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool config.lt
install-pkgconfigDATA: $(pkgconfig_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(pkgconfigdir)" || $(MKDIR_P) "$(DESTDIR)$(pkgconfigdir)"
	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pkgconfigdir)" || exit $$?; \
	done

uninstall-pkgconfigDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(pkgconfigdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(pkgconfigdir)" && rm -f $$files

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES) gnashconfig.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS) gnashconfig.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES) gnashconfig.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS) gnashconfig.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | bzip2 -9 -c >$(distdir).tar.bz2
	$(am__remove_distdir)

dist-lzma: distdir
	tardir=$(distdir) && $(am__tar) | lzma -9 -c >$(distdir).tar.lzma
	$(am__remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | xz -c >$(distdir).tar.xz
	$(am__remove_distdir)

dist-tarZ: distdir
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__remove_distdir)

dist dist-all: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lzma*) \
	  lzma -dc $(distdir).tar.lzma | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir); chmod a+w $(distdir)
	mkdir $(distdir)/_build
	mkdir $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@$(am__cd) '$(distuninstallcheck_dir)' \
	&& test `$(distuninstallcheck_listfiles) | wc -l` -le 1 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
@TESTSUITE_FALSE@check-local:
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-local
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-recursive
all-am: Makefile $(DATA) gnashconfig.h
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(pkgconfigdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-recursive

clean-am: clean-generic clean-libtool mostlyclean-am

distclean: distclean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -f Makefile
distclean-am: clean-am distclean-generic distclean-hdr \
	distclean-libtool distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-pkgconfigDATA

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am:

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-generic mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-pkgconfigDATA

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) all check \
	check-am ctags-recursive install install-am install-strip \
	tags-recursive

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am am--refresh check check-am check-local clean \
	clean-generic clean-libtool ctags ctags-recursive dist \
	dist-all dist-bzip2 dist-gzip dist-lzma dist-shar dist-tarZ \
	dist-xz dist-zip distcheck distclean distclean-generic \
	distclean-hdr distclean-libtool distclean-tags distcleancheck \
	distdir distuninstallcheck dvi dvi-am html html-am info \
	info-am install install-am install-data install-data-am \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-html install-html-am install-info install-info-am \
	install-man install-pdf install-pdf-am install-pkgconfigDATA \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags tags-recursive \
	uninstall uninstall-am uninstall-pkgconfigDATA


#
# Extract info from the repository to include in the build.
# If top source dir is not a git repository or git is not installed,
# keep the current revno.h file (which should be part of any distribution).
# It's primarily used by the testsuites and when building binary packages
# from multiple branches.
#
# This ia a big hack around makes's built in dependency checking, as the
# key file here isn't part of the normal files. In the source tree for
# developers, the .git/index files changes on any commits or pulls. We
# only want to regenerate this file if that file changes, so we have to
# do the dependency check ourselves.
revno.h:
	@if test \! -f .lastmod -o \! -f revno.h ; then \
	  touch -t 197001010000 .lastmod; \
	fi; \
	if test -d $(top_srcdir)/.git -a x"${GIT}" != x; then \
	  if test $(top_srcdir)/.git/index -nt .lastmod; then \
            echo "Getting build info for revno.h"; \
            revno="`cd $(top_srcdir) ; $(GIT) rev-list HEAD | wc -l`"; \
            comm_id="`cd $(top_srcdir) ; $(GIT) rev-parse --short HEAD`"; \
            nick="`cd $(top_srcdir) ; $(GIT) branch | grep '^\*' | cut -d ' ' -f 2`"; \
	  fi \
        else \
          if test \! -f revno.h; then \
            revno="$(NOW)"; \
            comm_id="none"; \
            nick="$(VERSION)"; \
          fi; \
        fi; \
	if test \! -z "$${revno}"; then \
          echo "Generating revno.h ($${nick} $${revno} $${comm_id})"; \
          echo "#define BRANCH_REVNO \"$${revno}\"" > revno.h; \
          echo "#define BRANCH_NICK \"$${nick}\"" >> revno.h; \
          echo "#define COMMIT_ID \"$${comm_id}\"" >> revno.h; \
          touch .lastmod; \
	fi

.configline: revno.h
	-@rm -f .configline
	@head config.log | grep " .*/configure " | sed -e 's:^  . .*configure ::' > .configline

@ENABLE_PCH_TRUE@all-includes.h.gch: $(PCHHEADERS)
@ENABLE_PCH_TRUE@	for i in $(PCHHEADERS); do \
@ENABLE_PCH_TRUE@	  file=`basename $$i`; \
@ENABLE_PCH_TRUE@	  echo "#include \"$$file\"" >> all-includes.h ; \
@ENABLE_PCH_TRUE@	done; \
@ENABLE_PCH_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
@ENABLE_PCH_TRUE@	  $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -fPIC -DPIC \
@ENABLE_PCH_TRUE@	  $(PCHFLAGS)  -x c++-header -c -o all-includes.h.gch all-includes.h; \
@ENABLE_PCH_TRUE@	rm all-includes.h;

@ENABLE_PCH_TRUE@$(PCHHEADERS): all-includes.h.gch

#
# build a binary snapshot from of Gnash for systems we don't have
# packaging support for.
#

# Do the entire process to build a binary tarball
snapshot: snapshot-src snapshot-configure snapshot-build snapshot-install snapshot-bundle

# start by creating the source tree using the distdir target,
# which builds a source tree only using what's in the DIST variables
# from Automake. This uses the default version for Gnash. which is
# 'master'. Then it gets renamed from the default version from 'master'
# to a branch-revno stamped version instead of master.
snapshot-src: revno.h distdir

snapshot-configure:
	-@now=`date "+%Y%m%d"`; \
	pkgname="gnash-$(BRANCH_NICK)-${BRANCH_REVNO}"; \
	snapshot_dir=$(SNAPSHOT_DIR); \
	snapshot_build="$(SNAPSHOT_BUILD)"; \
	if test ! -d $(snapshot_build); then \
	  $(MKINSTALLDIRS) $${snapshot_build}; \
	fi; \
	if test -d /usr/local/mozilla-firefox/plugins; then \
          plugindir=/usr/local/mozilla-firefox/plugins; \
	else \
	  plugindir=/usr/lib/mozilla/plugins; \
        fi; \
	cd $${snapshot_build}; ../configure \
	$(SNAPSHOT_CONFIGURE_FLAGS) \
	  --disable-dependency-tracking\
	  --disable-rpath \
	  --prefix=/usr \
	  --mandir=/usr/share/man \
	  --infodir=/usr/share/info \
	  --with-plugindir=$${plugindir} \
	  --disable-static \
	  --enable-shared
#	  --with-extensions=all 
#	  --enable-gui=all 

snapshot-build: force
	$(MAKE) $(AM_MAKEFLAGS) -C $(SNAPSHOT_BUILD)
	$(MAKE) $(AM_MAKEFLAGS) -C $(SNAPSHOT_BUILD)/doc/C info man html

# Install a package. Afterwards we link to the prebuilt man pages incase
# DocBook and DocBook2X aren't installed on this machine.
snapshot-install: force
	$(MAKE) $(AM_MAKEFLAGS) -C $(SNAPSHOT_BUILD) install DESTDIR=$(SNAPSHOT_TMP)

# We only want to bundle an installed gnash, so all the linker paths are
# correct
snapshot-bundle: 
	snapshot_tar="$(SNAPSHOT_TMP)-$(host_cpu)-$(host_os).tar.gz"; \
	if test ! -d $${snapshot_tmp}; then \
	  $(mkinstalldirs) $${snapshot_tmp}; \
	fi; \
	rm -f $${snapshot_dest}/usr/lib/*.la; \
	cp @srcdir@/COPYING $${snapshot_tmp}; \
	cp @srcdir@/config.guess $${snapshot_tmp}; \
	cp @srcdir@/packaging/install-gnash.sh $${snapshot_tmp}; \
	cp -rp $${snapshot_dest}/usr/bin $${snapshot_tmp}; \
	cp -rp $${snapshot_dest}/usr/lib $${snapshot_tmp}; \
	cp -rp $${snapshot_dest}/usr/share $${snapshot_tmp}; \
	cp -rp $${snapshot_dest}/usr/lib/mozilla/plugins $${snapshot_tmp}; \
	cp -rp $${snapshot_dest}/usr/lib/kde3 $${snapshot_tmp}; \
	strip $${snapshot_tmp}/bin/*-gnash; \
	strip $${snapshot_tmp}/bin/gprocessor; \
	strip $${snapshot_tmp}/bin/dumpshm; \
	strip $${snapshot_tmp}/bin/flvdumper; \
	strip $${snapshot_tmp}/bin/rtmpget; \
	tar zcvCf /tmp $${snapshot_tar} $(SNAPSHOT_NAME)

snapshot-clean:
	-@rm -fr snapshot-* $(SNAPSHOT_BUILD) $(SNAPSHOT_TMP) gnash*$(VERSION)*.ipk

.PHONY : snapshot snapshot-build snapshot-install snapshot-clean snapshot-src snapshot-configure

gnash.spec spec: $(srcdir)/packaging/redhat/gnash.spec
	mkdir -p $(RPMBUILD_DIR); \
	echo "%_topdir $(RPMBUILD_DIR)" > $(RPMMACROS); \
	snapshot_version=$(SNAPSHOT_VERSION); \
	snapshot_release=`echo $${snapshot_version}|grep "~"|sed 's/.*~\(.*\)/0.1.\1/'`; \
	snapshot_version=`echo $${snapshot_version}|cut -d"~" -f1`; \
	if [ "$${snapshot_release}" = "" ];then snapshot_release=1;fi; \
	distro=`lsb_release -is`; \
	echo "Editing the version in the spec file to be $${snapshot_version} $${snapshot_release} for Distribution $${distro}..."; \
	sed -e "s/Version.*/Version:	$${snapshot_version}/" \
	    -e "s/Release.*/Release:	$${snapshot_release}/" \
	    -e "s/Distribution:.*/Distribution:   $${distro}/" $(srcdir)/packaging/redhat/gnash.spec > $(RPMSPEC)

# Build an Redhat/Fedora .rpm package
# We do this by using the source snapshot that we know is 'distclean'.
# After copying the source tarball to where rpmbuild expects it,
# we can then build the binary package.
# older versions of Fedora used /usr/src/redhat/{SOURCES, BUILD} for
# everything, but the newer version appears to use one's home directory
# instead, so now you don't have to be root to build rpm packages.

# Do the entire process to build an RPM package
rpm: distdir spec setup-rpm rpm-gnash

# build everything in one pass using rpmbuild. This was using
# --sign gnash.spec, but it didn't work for the automated builds.
rpm-gnash: 
	rpmbuild -ba $(RPMBUILD_FLAGS) $(RPMSPEC)

# configure the build directory, which we do by executing only the %prep stage,
# which doesn't actually run configure
rpm-configure: 
	rpmbuild -bp $(RPMBUILD_FLAGS) $(RPMSPEC)

# compile the build, which we do by executing only the %build stage, which
# runs configure as the first step.
rpm-build:
	rpmbuild -bc --short-circuit $(RPMBUILD_FLAGS) $(RPMSPEC)

# install the build, which we do by executing only the %install stage, which
# also builds the actual rpms
rpm-install: 
	rpmbuild -bi --short-circuit $(RPMBUILD_FLAGS) $(RPMSPEC)

# After distdir is done, all we have is an empty subdirectory
# populated from the *_DIST variables used by Automake. RPM and Deb
# naming conventions are similar, but just different enough that the
# source directory and tarball names are subtely different, namely
# Debian uses a '~' character in their version names, which rpmbuild
# doesn't like, so for an RPM we convert it to a '_' instead. Then we
# have to rename the subdirectory to match the new version of the
# snapshot, and edit the configure* files to have the proper version
# name.
# Unlike creating a deb, which build their own source tarball, rpm
# requires we do it ourselves, and copy it to $HOME/rpmbuild/SOURCES
# before rpmbuild will work.
setup-rpm: 
	snapshot_version=$(SNAPSHOT_VERSION); \
	snapshot_dir="gnash-`echo $${snapshot_version}|cut -d"~" -f1`"; \
	if test -d gnash-$(PACKAGE_VERSION); then \
	  mv gnash-$(PACKAGE_VERSION) $${snapshot_dir}; \
	fi; \
	tar zcf $${snapshot_dir}.tar.gz \
	  --exclude=$${snapshot_dir}/autom4te.cache \
	  --exclude=$${snapshot_dir}/configure.ac.orig \
	  --exclude=$${snapshot_dir}/configure.orig $${snapshot_dir}; \
	mkdir -p $(RPMBUILD_DIR)/SOURCES; \
	cp $${snapshot_dir}.tar.gz $(RPMBUILD_DIR)/SOURCES

.PHONY : rpm distdir redhat spec rpm-configure rpm-install rpm-build setup-rpm

deb: revno.h snapshot-src setup-deb snapshot-deb

# Build a .deb snapshot, which means we have to munge the release data
# into the proper files to build a package with the version in
# all the right places. This involves editing the debian/changelog
# file. Configure.ac is edited by the snapshot target.
# We also edit the gtk-plugin-gnash paths, as these differ between
# python versions and GNU/Linux distributions. Also if configured
# with the plugin not going into the standard directory of
# /usr/lib/mozilla/plugins or $HOME/.mozilla/plugins, we also
# have to change the path to the NPAPI plugin so it gets installed
# for the correct browser.

# DEB_BUILD_OPTIONS is used to change the configuration of the
# packages that get built. This is used for both the debian/rules
# file and here. By default, this looks for the value in the users
# environment, which is what dpkg-buildpackage does as well. If
# DEB_BUILD_OPTIONS is defined on the command line to make, then
# that value takes precedence. Once we have the value of the
# build options, we can then see what is enabled or not. The
# default produces a package with normal defaults.
DEB_BUILD_OPTIONS ?= $(shell echo $DEB_BUILD_OPTIONS)

# SNAPSHOT_VERSION is the name that gets used for the packages. By default
# it is "$(NEXT_RELEASE)~git.$(BRANCH_NICK)$(BRANCH_REVNO)", but when
# building alternate packages, we want to rename them so there isn't a
# name collision.

# This gets more fun, as if we configure with ffmpeg, the two utilities that
# deal with Gstreamer based input devices, findwebcam and findmicrophone,
# don't get built. So we strip them out of the packages.
setup-deb: deb-copy-files deb-edit-changelog deb-edit-configure deb-edit-control deb-edit-utilities deb-edit-python deb-edit-browser

# Rename the directory created by distdir to the snapshot. This is
# usually something like "gnash-master" to "0.8.8~git.ogl.ffmpeg.master11977".
# This requires distdir to be run first, but it's not a dependency as we
# don't want to always rebuild the source tree, just the dependencies.
deb-rename-build:
	@echo "Building package in: $(BUILD_DIR)..."
	@if test -d gnash-$(PACKAGE_VERSION); then \
	  if test ! -d $(BUILD_DIR); then \
	    mv -f gnash-$(PACKAGE_VERSION) $(BUILD_DIR); \
	  fi; \
	fi

# Once the directory has been renamed, we copy over the Debian packaging
# files. Then we have to edit a few of them to match this snapshot
deb-copy-files: deb-copy-stamp
deb-copy-stamp: deb-rename-build
	@echo "Copying debian packaging files..."
	@if test ! -d $(BUILD_DIR)/debian; then \
	  mkdir -p $(BUILD_DIR)/debian; \
	fi
	@cp -rfp $(srcdir)/packaging/debian/* $(BUILD_DIR)/debian/
	@touch $@

# The findwebcam and findmicrophone utilities are only support for Gstreamer
# builds, so we have to remove them from packaging when configuring with ffmpeg.
deb-edit-utilities:
	@if test $(FFMPEG) -eq 1; then \
	   echo "Removing findwebcam and findmicrophone files from package as they aren't supported with ffmpeg..."; \
	   if test -e $(BUILD_DIR)/debian/gnash-tools.install; then \
	     mv -f $(BUILD_DIR)/debian/gnash-tools.install $(BUILD_DIR)/debian/gnash-tools.install.orig; \
	   fi; \
	   sed -e '/webcam/d' -e '/microphone/d' $(BUILD_DIR)/debian/gnash-tools.install.orig > $(BUILD_DIR)/debian/gnash-tools.install; \
	   if test -e $(BUILD_DIR)/debian/gnash-tools.manpages; then \
	     mv -f $(BUILD_DIR)/debian/gnash-tools.manpages $(BUILD_DIR)/debian/gnash-tools.manpages.orig; \
	   fi; \
	   sed -e '/webcam/d' -e '/microphone/d' $(BUILD_DIR)/debian/gnash-tools.manpages.orig > $(BUILD_DIR)/debian/gnash-tools.manpages; \
	fi;

# Python is at different revisions and paths depending on the Distribution
# and release. Debian uses site-packages, while Ubuntu uses dist-packages.
deb-edit-python:
	@release=`lsb_release -i | sed -e 's/.*:[ \t]//'`; \
	pyver=`python --version 2>&1 | cut -d ' ' -f 2 | sed -e 's:rc[0-9]*::'`; \
	pymaj=`echo $${pyver}|cut -d. -f1`; pymin=`echo $${pyver}|cut -d. -f2`; \
	pdir=$${pymaj}.$${pymin}; \
	if test $${pymaj}$${pymin} -ge 26; then \
	  echo "Editing $(BUILD_DIR)/debian/gtk-plugin-gnash.install for Python 2.6+"; \
	  packages="dist-packages"; \
	else \
	  echo "Editing $(BUILD_DIR)/debian/gtk-plugin-gnash.install for Python 2.5"; \
	  packages="site-packages"; \
	fi; \
	if test -e $(BUILD_DIR)/debian/python-gtk-gnash.install; then \
	  mv -f $(BUILD_DIR)/debian/python-gtk-gnash.install $(BUILD_DIR)/debian/python-gtk-gnash.install.orig; \
	fi; \
	sed -e "s:python2.X/site-packages:python$${pdir}/$${packages}:" $(BUILD_DIR)/debian/python-gtk-gnash.install.orig > $(BUILD_DIR)/debian/python-gtk-gnash.install; \
	if test -e $(BUILD_DIR)/debian/python-gtk-gnash.dirs; then \
	  mv -f $(BUILD_DIR)/debian/python-gtk-gnash.dirs $(BUILD_DIR)/debian/python-gtk-gnash.dirs.orig; \
	fi; \
	sed -e "s:python2.X/site-packages:python$${pdir}/$${packages}:" $(BUILD_DIR)/debian/python-gtk-gnash.dirs.orig > $(BUILD_DIR)/debian/python-gtk-gnash.dirs;

deb-edit-browser:
	@if test `echo $(FIREFOX_PLUGINS) | grep -c mozilla` -eq 0; then \
	   echo "Adjusting plugin path for a NPAPI compliant browser"; \
	   if test -e $(BUILD_DIR)/debian/browser-plugin-gnash.dirs; then \
	     mv -f $(BUILD_DIR)/debian/browser-plugin-gnash.dirs $(BUILD_DIR)/debian/browser-plugin-gnash.orig; \
	   fi; \
	   echo $(FIREFOX_PLUGINS) | sed -e 's:/::' > $(BUILD_DIR)/debian/browser-plugin-gnash.dirs; \
	fi;

# Edit the debian/changelog file. This is because the version in the top level
# entry becomes the name of the source directory, the build directory, and
# the packages. We do it this way so the snapshot matches the branch nickname
# with the revision.
# DIST is set in the environment when using pbuilder, so we use that so
# our distribution matches the repoository. DIST is usually one of lenny,
# squeeze, lucid, karmic, metad.
deb-edit-changelog:
	@echo "Editing debian/changelog for snapshot: $(BUILD_VERSION)"
	if test x"$${DIST}" = x; then \
	  if test -e /etc/lsb-release; then \
            . /etc/lsb-release; \
	    dist=$${DISTRIB_CODENAME}; \
	  fi; \
	  if test x"$${dist}" = x; then \
	    if test -x /usr/bin/lsb_release; then \
	      dist="`lsb_release -cs`"; \
	    else \
	      dist="lenny"; \
	    fi; \
	  fi; \
	else \
	  dist=$(DIST); \
	fi; \
	if test -z "$$dist" ; then \
	  echo "Missing distribution name"; exit 1; \
	else \
	  echo "Building for distribution '$$dist''"; \
	fi; \
	if test -e $(BUILD_DIR)/debian/changelog; then \
	  mv -f $(BUILD_DIR)/debian/changelog $(BUILD_DIR)/debian/changelog.orig; \
	  sed -e "s:master:$(BUILD_VERSION)-1~$${dist}:" -e "s/distro/$${dist}/" $(srcdir)/packaging/debian/changelog > $(BUILD_DIR)/debian/changelog; \
	else \
	  sed -e "s:master:$(BUILD_VERSION)-1~$${dist}:"  -e "s/distro/$${dist}/" $(srcdir)/packaging/debian/changelog > $(BUILD_DIR)/debian/changelog; \
	fi

# Edit the configure scripts, so if somebody reconfigures from this tarball,
# they'll get the exact same name for all the packages.
deb-edit-configure: 
	@echo "Editing configure.ac in $(BUILD_VERSION)..."
	@if test ! -f $(BUILD_DIR)/configure.ac.orig; then \
	  mv -f $(BUILD_DIR)/configure.ac $(BUILD_DIR)/configure.ac.orig; \
	  sed -e "s/AC_INIT(gnash, [^)]*)/AC_INIT(gnash, $(BUILD_VERSION))/" \
	    $(BUILD_DIR)/configure.ac.orig > $(BUILD_DIR)/configure.ac; \
	fi
	@echo "Editing configure in $(BUILD_VERSION)..."
	@if test ! -f $(BUILD_DIR)/configure.orig; then \
	  mv -f $(BUILD_DIR)/configure $(BUILD_DIR)/configure.orig; \
	  sed -e "s/ VERSION='[^']*'/ VERSION='$(BUILD_VERSION)'/" \
	    $(BUILD_DIR)/configure.orig > $(BUILD_DIR)/configure; \
	   chmod u+x $(BUILD_DIR)/configure; \
	fi

# Edit the debian/control file. This is because we want to produce packages with
# unique names, so differently configured packages of the same branch and revision
# can all live in the same deb repository.
deb-edit-control: deb-copy-files
	@if test $(OGL) -eq 1 -o $(FFMPEG) -eq 1 -o $(VAAPI) -eq 1; then \
	  echo -n "Editing debian/control for alternate configuration..."; \
	  if test -e $(BUILD_DIR)/debian/control; then \
	    mv -f $(BUILD_DIR)/debian/control $(BUILD_DIR)/debian/control.orig; \
	  fi; \
	  if test $(OGL) -eq 1 -a $(FFMPEG) -eq 1; then \
	    pkg_version="opengl-ffmpeg"; \
	  fi; \
	  if test $(OGL) -eq 1 -a $(FFMPEG) -eq 0; then \
	    pkg_version="opengl"; \
	  fi; \
	  if test $(OGL) -eq 0 -a $(FFMPEG) -eq 1; then \
	    pkg_version="ffmpeg"; \
	  fi; \
	  if test $(VAAPI) -eq 1; then \
	    pkg_version="vaapi"; \
	  fi; \
	  echo "$${pkg_version}"; \
	  sed -e "/^Conflicts:/d" \
	      -e "s/^Package: .*$$/&-$${pkg_version}/" \
	      -e "s/^Depends: gnash-common/Depends: gnash-common-$${pkg_version}/" \
	      -e "s/^Depends: gnash /Depends: gnash-$${pkg_version} /" \
	      -e "s/^Depends: klash /Depends: klash-$${pkg_version} /" \
	  $(top_srcdir)/packaging/debian/control > $(BUILD_DIR)/debian/control; \
	fi

# Build the package. debuild would also work. This requires all
# the file editing to be done
snapshot-deb:
	cd $(BUILD_DIR) && dpkg-buildpackage -rfakeroot

.PHONY : deb debian snapshot-deb setup-deb deb-edit-control deb-edit-changelog deb-copy-files deb-rename-build deb-edit-configure deb-edit-install deb-edit-utilities deb-edit-python deb-edit-browser

ipkg-configure: ipkg-unpack $(IPKG_BUILD)
	-@rm -f ipkg-configure
	cd $(IPKG_BUILD); ./configure --host=$(host_alias) \
	  --build=$(build_triplet) --prefix=/usr \
	  --mandir=/usr/share/man \
	  --infodir=/usr/share/info \
	  --with-plugindir=/usr/lib/mozilla/plugins \
	  --enable-static --disable-shared --disable-kparts \
	  --enable-gui=qtopia --enable-media=none
	@touch ipkg-configure

ipkg-unpack: $(top_builddir)/config.status
	-@rm -f ipkg-*		# nuke everything, we're starting over
	-@rm -f ipkg-unpack
	rm -rf $(IPKG_BUILD)
	tar jxf $(IPKG_BUILD).tar.bz2
	@touch ipkg-unpack

ipkg-build: ipkg-configure
	-@rm -f ipkg-build
	$(MAKE) -C $(IPKG_BUILD) all
	@touch ipkg-build

ipkg-install: ipkg-build Makefile
	-@rm -f ipkg-install
	$(MAKE) -C $(IPKG_BUILD) install DESTDIR=$(IPKG_TMP)
	@touch ipkg-install

ipkg-depend: 
	-@rm -f ipkg-depend
	rsync -avc $(libdir)/libcurl* $(IPKG_TMP)/usr/lib
	rsync -avc $(libdir)/libagg* $(IPKG_TMP)/usr/lib
	rsync -avc $(libdir)/libboost_thread* $(IPKG_TMP)/usr/lib
	rsync -avc $(libdir)/libboost_serialization* $(IPKG_TMP)/usr/lib
	@touch ipkg-depend

ipk ipkg ipkg-bundle: ipkg-install # ipkg-depend
	if ! test -d $(IPKG_TMP)/CONTROL ; then \
	  mkdir $(IPKG_TMP)/CONTROL; \
	fi
	topdir=`cd ${top_srcdir}; pwd`; \
	for i in control postinst; do \
	  cp -f $${topdir}/packaging/ipkg/$$i $(IPKG_TMP)/CONTROL; \
	done; \
	for i in rules Gnash.desktop; do \
	  cp -f $${topdir}/packaging/ipkg/$$i $(IPKG_TMP)/ ; \
	done;
	ipkg-build $(IPKG_TMP)

ipkg-clean:
	rm -fr ipkg-* $(IPKG_BUILD) $(IPKG_TMP) gnash*$(VERSION)*.ipk

.PHONY : ipkg ipk ipkg-bundle

alp-ip: 
	@if test ! -f /tmp/alp.ip; then \
	  if test "`uname -m`" = "i486" -o "`uname -m`" = "i686" ; then \
	    echo "$(ALP_UML_IP)" | cut -d ' ' -f1 > /tmp/alp.ip ; \
	  else \
	    echo "$(ALP_REMOTE_IP)" | cut -d ' ' -f1 > /tmp/alp.ip ; \
	  fi ; \
	fi	

alp alp-bundle: alp-install
	rm -f alp-bundle
	$(mkinstalldirs) $(ALP_NAMESPACE)/rsc
	cp -f $(top_srcdir)/packaging/alp/Manifest.xml $(ALP_NAMESPACE)/
	cp -vf $(ALP_TMP)/usr/local/lib/* $(ALP_NAMESPACE)/
	cp -f $(top_srcdir)/gui/images/GnashGTiny.png $(ALP_NAMESPACE)/rsc/
	cp -f $(top_srcdir)/testsuite/movies.all/gravity.swf $(ALP_NAMESPACE)/rsc/
	@touch alp-bundle

alp-install: 
	-@rm -f alp-install
	$(MAKE) install DESTDIR=$(ALP_TMP)
	@touch alp-install

# Don't ask me why, but you have to register with bartender
# to get a bar file.
alp-bar: #alp-bundle
	rm -f alp-bar
	$(BARTENDER) pack $(ALP_NAMESPACE) $(ALP_NAMESPACE).bar
	@touch alp-bar

alp-install-device: # alp-bar alp-install-files
	@echo "Installing new bar file..."
	size=`ls -la $(ALP_BAR) | cut --delim=' ' --fields=6,6`; \
	(echo "install $(ALP_BAR) $$size 0 0 0755" ; cat $(ALP_BAR) ) | $(NETCAT_REMOTE)
	@echo; echo "Registering new bar file with target..."
	@echo 'package install /tmp/$(ALP_BAR)' | $(NETCAT_REMOTE)
	@echo " "

alp-install-bundle: alp-bundle
	$(mkinstalldirs) $(DEST_BND_ROOT)/$(ALP_NAMESPACE)
	@echo "Installing new bundle files..."
	cp -Rf $(ALP_NAMESPACE) $(DEST_BND_ROOT)

alp-uninstall-bundle: 
	@# Note: bundle delete requires rdbgd version 11
	@echo " "
	@echo "Removing old bundle..."
	@echo "(If this returns an error, the target is probably not running.)"
	@echo "(In that case, the bundle should be gone when you next boot the target.)"
	@echo " "
	-@echo 'package delete bar:$(ALP_NAMESPACE)' | $(NETCAT_REMOTE)
	@echo " "

alp-clean:
	rm -fr alp-* $(ALP_NAMESPACE)

.PHONY : alp alp-bundle alp-ip

bsd-pkg:
	$(MAKE) checksum
	$(MAKE) extract
	$(MAKE) build
	$(MAKE) fake
	$(MAKE) plist
	$(MAKE) package

.PHONY: bsd-pkg

#
# Precompiled header support
#

#
# Binary tarball packaging
#

#
# Build an RPM package
#

# Build a Debian/Ubuntu .deb GNU/Linux package

#
# Build a Debian Familiar .ipk GNU/Linux package. These are always
# cross compiled, typically for the ARM or XScale.
#

#
# Access Linux Platform support.
#

#
# BSD package building
#

mudflap:
	@echo "Rebuilding with GCC Mudflap support"
	$(MAKE) CXXFLAGS="$(CXXFLAGS) -fmudflapth" LDFLAGS="$(LDFLAGS) -lmudflapth"

mudflap-check:
	@echo "Rechecking with GCC Mudflap support"
	$(MAKE) check CXXFLAGS="$(CXXFLAGS) -fmudflap" LDFLAGS="$(LDFLAGS) -lmudflap"

# Set a few variables to what features we selected so we can dump it with the
# test of the config
dumpconfig:
	@echo ""
	@echo "Building in directories: $(SUBDIRS)"
	@echo "Some directories may be excluded from the build"
	@uname -a
	$(CXX) -v
	@echo "CXXFLAGS: $(CXXFLAGS)"
	@echo ""
	@echo "Image decoding support..."
	@echo "	JPEG_CFLAGS is $(JPEG_CFLAGS)"
	@echo "	JPEG_LIBS is $(JPEG_LIBS)"
	@echo "	PNG_CFLAGS is $(PNG_CFLAGS)"
	@echo "	PNG_LIBS is $(PNG_LIBS)"
	@echo "	GIF_CFLAGS is $(GIF_CFLAGS)"
	@echo "	GIF_LIBS is $(GIF_LIBS)"
	@echo "Audio decoding support..."
@USE_GST_ENGINE_TRUE@	@echo "	GSTREAMER_CFLAGS is $(GSTREAMER_CFLAGS)"
@USE_GST_ENGINE_TRUE@	@echo "	GSTREAMER_LIBS is $(GSTREAMER_LIBS)"
@USE_GST_ENGINE_TRUE@	@echo "	GSTREAMER_PBUTILS_CFLAGS is $(GSTREAMER_PBUTILS_CFLAGS)"
@USE_GST_ENGINE_TRUE@	@echo "	GSTREAMER_PBUTILS_LIBS is $(GSTREAMER_PBUTILS_LIBS)"
@USE_FFMPEG_ENGINE_TRUE@	@echo "	FFMPEG_CFLAGS is $(FFMPEG_CFLAGS)"
@USE_FFMPEG_ENGINE_TRUE@	@echo "	FFMPEG_LIBS is $(FFMPEG_LIBS)"
@HAVE_SPEEX_TRUE@	@echo "	SPEEX_CFLAGS is $(SPEEX_CFLAGS)"
@HAVE_SPEEX_TRUE@	@echo "	SPEEXDSP_CFLAGS is $(SPEEXDSP_CFLAGS)"
@HAVE_SPEEX_TRUE@	@echo "	SPEEX_LIBS is $(SPEEX_LIBS)"
@HAVE_SPEEX_TRUE@	@echo "	SPEEXDSP_LIBS is $(SPEEXDSP_LIBS)"
	@echo "GUI Toolkit decoding support..."	
	@echo "	SDL_CFLAGS is $(SDL_CFLAGS)"
	@echo "	SDL_LIBS is $(SDL_LIBS)"
@BUILD_KDE3_GUI_TRUE@	@echo "	KDE3_CFLAGS is $(KDE3_CFLAGS)"
@BUILD_KDE3_GUI_TRUE@	@echo "	KDE3_LIBS is $(KDE3_LIBS)"
@BUILD_KDE3_GUI_TRUE@	@echo "	QT3_CFLAGS is $(QT3_CFLAGS)"
@BUILD_KDE3_GUI_TRUE@	@echo "	QT3_LIBS is $(QT3_LIBS)"
@BUILD_QT4_GUI_TRUE@	@echo "	QT4_CFLAGS is $(QT4_CFLAGS)"
@BUILD_QT4_GUI_TRUE@	@echo "	QT4_LIBS is $(QT4_LIBS)"
@KPARTS4_TRUE@	@echo "	KDE4_CFLAGS is $(KDE4_CFLAGS)"
@KPARTS4_TRUE@	@echo "	KDE4_LIBS is $(KDE4_LIBS)"
@BUILD_QT4_GUI_TRUE@	@echo "	QT4_CFLAGS is $(QT4_CFLAGS)"
@BUILD_QT4_GUI_TRUE@	@echo "	QT4_LIBS is $(QT4_LIBS)"
@BUILD_QTOPIA3_GUI_TRUE@	@echo "	QTOPIA3_CFLAGS is $(QTOPIA3_CFLAGS)"
@BUILD_QTOPIA3_GUI_TRUE@	@echo "	QTOPIA3_LIBS is $(QTOPIA3_LIBS)"
@BUILD_QTOPIA4_GUI_TRUE@	@echo "	QTOPIA4_CFLAGS is $(QTOPIA4_CFLAGS)"
@BUILD_QTOPIA4_GUI_TRUE@	@echo "	QTOPIA4_LIBS is $(QTOPIA4_LIBS)"
@BUILD_FLTK_GUI_TRUE@	@echo "	FLTK2_CFLAGS is $(FLTK2_CFLAGS)"
@BUILD_FLTK_GUI_TRUE@	@echo "	FLTK2_LIBS is $(FLTK2_LIBS)"
@BUILD_FLTK_GUI_TRUE@	@echo "	XFT_CFLAGS is $(XFT_CFLAGS)"
@BUILD_FLTK_GUI_TRUE@	@echo "	XFT_LIBS is $(XFT_LIBS)"
@HAIKU_TRUE@	@echo "	HAIKU_LIBS is $(HAIKU_LIBS)"
@BUILD_GTK_GUI_TRUE@	@echo "	GTK2_CFLAGS is $(GTK2_CFLAGS)"
@BUILD_GTK_GUI_TRUE@	@echo "	GTK2_LIBS is $(GTK2_LIBS)"
@BUILD_GTK_GUI_TRUE@	@echo "	PANGO_CFLAGS is $(PANGO_CFLAGS)"
@BUILD_GTK_GUI_TRUE@	@echo "	PANGO_LIBS is $(PANGO_LIBS)"
@BUILD_GTK_GUI_TRUE@	@echo "	ATK_CFLAGS is $(ATK_CFLAGS)"
@BUILD_GTK_GUI_TRUE@	@echo "	ATK_LIBS is $(ATK_LIBS)"
	@echo "	X11_CFLAGS is $(X11_CFLAGS)"
	@echo "	X11_LIBS is $(X11_LIBS)"
	@echo "Support libraries..."
	@echo "	LTDL_CFLAGS is $(LTDL_CFLAGS)"
	@echo "	LTDL_LIBS is $(LTDL_LIBS)"
	@echo "	GLIB_CFLAGS is $(GLIB_CFLAGS)"
	@echo "	GLIB_LIBS is $(GLIB_LIBS)"
	@echo "	Z_CFLAGS is $(Z_CFLAGS)"
	@echo "	Z_LIBS is $(Z_LIBS)"
	@echo "	FREETYPE_CFLAGS is $(FREETYPE2_CFLAGS)"
	@echo "	FREETYPE_LIBS is $(FREETYPE2_LIBS)"
	@echo "	FONTCONFIG_CFLAGS is $(FONTCONFIG_CFLAGS)"
	@echo "	FONTCONFIG_LIBS is $(FONTCONFIG_LIBS)"
	@echo "	LIBINTL is $(LIBINTL)"
@BUILD_MYSQL_EXT_TRUE@	@echo "	MYSQL_CFLAGS is $(MYSQL_CFLAGS)"
@BUILD_MYSQL_EXT_TRUE@	@echo "	MYSQL_LIBS is $(MYSQL_LIBS)"
	@echo "	PTHREAD_CFLAGS is $(PTHREAD_CFLAGS)"
	@echo "	PTHREAD_LIBS is $(PTHREAD_LIBS)"
	@echo "	CURL_CFLAGS is $(CURL_CFLAGS)"
	@echo "	CURL_LIBS is $(CURL_LIBS)"
	@echo "	BOOST_CFLAGS is $(BOOST_CFLAGS)"
	@echo "	BOOST_LIBS is $(BOOST_LIBS)"
	@if test -n "$(BOOST_CYGNAL_LIBS)"; then \
	  echo "	BOOST_CYGNAL_LIBS is $(BOOST_CYGNAL_LIBS)"; \
	fi
@ENABLE_MING_TRUE@	@echo "	MING_VERSION_CODE $(MING_VERSION_CODE) "
@ENABLE_MING_TRUE@	@echo "	MING_LIBS $(MING_LIBS) "
@ENABLE_MING_TRUE@	@echo "	MING_CFLAGS $(MING_CFLAGS) "
@ENABLE_MING_TRUE@	@echo "	MAKESWF $(MAKESWF) "
@ENABLE_MTASC_TRUE@	@echo "	MTASC $(MTASC)"
@ENABLE_MTASC_TRUE@	@echo "	MTASC CLASSPATH $(MTASC_CLASSPATH)"
@ENABLE_HAXE_TRUE@	@echo "	HAXE $(HAXE)"
@ENABLE_HAXE_TRUE@	@echo "	HAXE CLASSPATH $(HAXE_CLASSPATH)"
@ENABLE_SWFMILL_TRUE@	@echo "	SWFMILL $(SWFMILL) "
@ENABLE_SWFMILL_TRUE@	@echo "	SWFMILL_VERSION_CODE $(SWFMILL_VERSION) "
@ENABLE_SWFC_TRUE@	@echo "	SWFC $(SWFC) "
@ENABLE_SWFDEC_TESTSUITE_TRUE@	@echo "	SWFDEC_TESTSUITE $(SWFDEC_TESTSUITE)"
@ENABLE_HTTP_TESTSUITE_TRUE@	@echo "	HTTP_TESTSUITE $(HTTP_TESTSUITE)"
@ENABLE_RED5_TESTING_TRUE@	@echo "	RED5_HOST $(RED5_HOST)"
	@echo "Graphics support..."	
@BUILD_CAIRO_RENDERER_TRUE@	@echo "	CAIRO_CFLAGS is $(CAIRO_CFLAGS)"
@BUILD_CAIRO_RENDERER_TRUE@	@echo "	CAIRO_LIBS is $(CAIRO_LIBS)"
@BUILD_OGL_RENDERER_TRUE@	@echo "	GLEXT_CFLAGS is $(GLEXT_CFLAGS)"
@BUILD_OGL_RENDERER_TRUE@	@echo "	GLEXT_LIBS is $(GLEXT_LIBS)"
@BUILD_OGL_RENDERER_TRUE@	@echo "	OPENGL_CFLAGS is $(OPENGL_CFLAGS)"
@BUILD_OGL_RENDERER_TRUE@	@echo "	OPENGL_LIBS is $(OPENGL_LIBS)"
@BUILD_OVG_RENDERER_TRUE@	@echo "	OPENVG_CFLAGS is $(OPENVG_CFLAGS)"
@BUILD_OVG_RENDERER_TRUE@	@echo "	OPENVG_LIBS is $(OPENVG_LIBS)"
@BUILD_GLES1_RENDERER_TRUE@	@echo "	GLES1_CFLAGS is $(GLES1_CFLAGS)"
@BUILD_GLES1_RENDERER_TRUE@	@echo "	GLES1_LIBS is $(GLES1_LIBS)"
@BUILD_GLES2_RENDERER_TRUE@	@echo "	GLES2_CFLAGS is $(GLES2_CFLAGS)"
@BUILD_GLES2_RENDERER_TRUE@	@echo "	GLES2_LIBS is $(GLES2_LIBS)"
@BUILD_AGG_RENDERER_TRUE@	@echo "	AGG_CFLAGS is $(AGG_CFLAGS)"
@BUILD_AGG_RENDERER_TRUE@	@echo "	AGG_LIBS is $(AGG_LIBS)"
	@echo ""
	@echo "A blank value for CFLAGS means the header is installed in the"
	@echo "default system header location. All the LIBS should have a"
	@echo "legit value"
	@echo ""
	@echo "Configurable options are:"
	@echo "	Media handlers: $(MEDIA_CONFIG)"
	@echo "	Renderer engines: $(RENDERER_CONFIG)"
	@echo "	Hardware Acceleration: $(HWACCEL_CONFIG)"

@BUILD_SSL_TRUE@	@echo "	SSL_CFLAGS is $(SSL_CFLAGS)"
@BUILD_SSL_TRUE@	@echo "	SSL_LIBS is $(SSL_LIBS)"
@BUILD_SSH_TRUE@	@echo "	SSH_CFLAGS is $(SSH_CFLAGS)"
@BUILD_SSH_TRUE@	@echo "	SSH_LIBS is $(SSH_LIBS)"
@BUILD_GTK_GUI_TRUE@	@echo "	Supported GUI: GTK"
@BUILD_DUMP_GUI_TRUE@	@echo "	Supported GUI: Dump"
@BUILD_KDE3_GUI_TRUE@	@echo "	Supported GUI: KDE3"
@BUILD_QT4_GUI_TRUE@	@echo "	Supported GUI: QT4"
@BUILD_QTOPIA3_GUI_TRUE@	@echo "	Supported GUI: QTOPIA3"
@BUILD_QTOPIA4_GUI_TRUE@	@echo "	Supported GUI: QTOPIA4"
@BUILD_SDL_GUI_TRUE@	@echo "	Supported GUI: SDL"
@BUILD_FLTK_GUI_TRUE@	@echo "	Supported GUI: FLTK"
@BUILD_AQUA_GUI_TRUE@	@echo "	Supported GUI: AQUA"
@BUILD_FB_GUI_TRUE@	@echo "	Supported GUI: FB"
@BUILD_AMIGAOS4_GUI_TRUE@       @echo " Supported GUI: AMIGAOS4"
@BUILD_HAIKU_GUI_TRUE@	@echo " Supported GUI: Haiku"
@JEMALLOC_TRUE@	@echo "	Using jemalloc memory manager"

	@if test -n "$(EXTENSIONS_LIST)" ; then \
	  echo "	Extensions added are: $(EXTENSIONS_LIST)"; \
	fi
	@if test -n "$(SECURITY_LIST)" ; then \
	  echo "	Security features enabled are: $(SECURITY_LIST)"; \
	fi
	@if test -n "$(STATISTICS_LIST)" ; then \
	  echo "	Statistics features enabled are: $(STATISTICS_LIST)"; \
	fi
@KPARTS3_TRUE@	@echo "	KPARTS 3.x (KDE) plugin enabled"
@KPARTS3_TRUE@	@echo "	  KPARTS 3.x plugin install dir: $(KDE_PLUGINDIR)"
@KPARTS3_TRUE@	@echo "	  KPARTS 3.x service install dir: $(KDE_SERVICESDIR)"
@KPARTS3_TRUE@	@echo "	  KPARTS 3.x config dir: ${KDE_CONFIGDIR}"
@KPARTS3_TRUE@	@echo "	  KPARTS 3.x appsdata dir: ${KDE_APPSDATADIR}"
@KPARTS3_FALSE@	@echo "	KPARTS 3.x (KDE) plugin disabled"
@KPARTS4_TRUE@	@echo "	KPARTS 4.x (KDE) plugin enabled"
@KPARTS4_TRUE@	@echo "	  KPARTS 4.x plugin install dir: $(KDE4_PLUGINDIR)"
@KPARTS4_TRUE@	@echo "	  KPARTS 4.x service install dir: $(KDE4_SERVICESDIR)"
@KPARTS4_TRUE@	@echo "	  KPARTS 4.x config dir: ${KDE4_CONFIGDIR}"
@KPARTS4_TRUE@	@echo "	  KPARTS 4.x appsdata dir: ${KDE4_APPSDATADIR}"
@KPARTS4_FALSE@	@echo "	KPARTS 4.x (KDE) plugin disabled"

@NPAPI_TRUE@	@echo "	NPAPI (Mozilla) plugin enabled"
@NPAPI_TRUE@	@echo "	  NPAPI plugin install dir: $(FIREFOX_PLUGINS)"
@NPAPI_FALSE@	@echo "	NPAPI (Mozilla) plugin disabled"
@USE_PYTHON_TRUE@	@echo "	PYTHON support enabled"
@USE_PYTHON_FALSE@	@echo "	PYTHON support disabled"

@TESTSUITE_TRUE@check-local:
@TESTSUITE_TRUE@	$(MAKE) anal

@TESTSUITE_TRUE@anal testreport checksum:
@TESTSUITE_TRUE@	$(srcdir)/testsuite/analyse-results.sh

.PHONY : dumpconfig \
	revno.h \
	anal \
	testreport \
	checksum \
	check \
	mudflap \
	mudflap-check \
	install-plugins \
	uninstall-plugins \
	install-plugin \
	apidoc

install-plugins install-plugin uninstall-plugins install-pkglib:
	$(MAKE) -C plugin $@

apidoc:
	$(MAKE) -C doc $@
fetch-swfdec:
	if test -d "$(SWFDEC_MOUNT)"; then \
	    cd "$(SWFDEC_MOUNT)" && git pull && git branch -v; \
	else \
	    git clone $(SWFDEC_REPO) "$(SWFDEC_MOUNT)"; \
	fi 

package:
	@if test -f /etc/debian_version; then $(MAKE) deb; \
	  else if test -f /etc/redhat-release; then $(MAKE) rpm; \
	    else echo "Gnash will not be packaged for this platform"; \
	fi;fi

packageclean:
	-test -z "$(CLEANFILES)" || rm -rf $(CLEANFILES)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
