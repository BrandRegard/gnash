# Makefile.in generated by automake 1.11.1 from Makefile.am.
# testsuite/misc-ming.all/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# 
#   Copyright (C) 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012
#   Free Software Foundation, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

pkgdatadir = $(datadir)/gnash
pkgincludedir = $(includedir)/gnash
pkglibdir = $(libdir)/gnash
pkglibexecdir = $(libexecdir)/gnash
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
check_PROGRAMS = ResolveEventsTest$(EXEEXT) \
	ResolveEventsTest-Runner$(EXEEXT) \
	SpriteButtonEventsTest$(EXEEXT) \
	SpriteButtonEventsTest-Runner$(EXEEXT) DefineTextTest$(EXEEXT) \
	DefineTextTest-Runner$(EXEEXT) TextSnapshotTest$(EXEEXT) \
	DeviceFontTest$(EXEEXT) EmbeddedFontTest$(EXEEXT) \
	DefineEditTextTest$(EXEEXT) DefineEditTextTest-Runner$(EXEEXT) \
	DefineEditTextVariableNameTest$(EXEEXT) \
	DefineEditTextVariableNameTest-Runner$(EXEEXT) \
	DefineEditTextVariableNameTest2$(EXEEXT) Dejagnu$(EXEEXT) \
	Dejagnu.swf$(EXEEXT) RemoveObject2Test$(EXEEXT) \
	RollOverOutTest$(EXEEXT) RollOverOutTest-Runner$(EXEEXT) \
	definebitsjpeg2$(EXEEXT) spritehier$(EXEEXT) \
	timeline_var_test$(EXEEXT) root_stop_test$(EXEEXT) \
	root_stop_testrunner$(EXEEXT) place_object_test$(EXEEXT) \
	place_object_test2$(EXEEXT) move_object_test$(EXEEXT) \
	place_and_remove_object_test$(EXEEXT) \
	place_and_remove_object_insane_test$(EXEEXT) \
	unload_movieclip_test1$(EXEEXT) DepthLimitsTest$(EXEEXT) \
	masks_test$(EXEEXT) masks_test2$(EXEEXT) \
	masks_test2runner$(EXEEXT) attachMovieTest$(EXEEXT) \
	attachMovieTestRunner$(EXEEXT) attachMovieLoopingTest$(EXEEXT) \
	attachMovieLoopingTestRunner$(EXEEXT) goto_frame_test$(EXEEXT) \
	consecutive_goto_frame_test$(EXEEXT) matrix_test$(EXEEXT) \
	multi_doactions_and_goto_frame_test$(EXEEXT) \
	reverse_execute_PlaceObject2_test1$(EXEEXT) \
	reverse_execute_PlaceObject2_test2$(EXEEXT) \
	DrawingApiTestRunner$(EXEEXT) frame_label_test$(EXEEXT) \
	path_format_test$(EXEEXT) callFunction_test$(EXEEXT) \
	duplicate_movie_clip_test$(EXEEXT) \
	duplicate_movie_clip_test2$(EXEEXT) \
	event_handler_scope_test$(EXEEXT) masks_testrunner$(EXEEXT) \
	key_event_test$(EXEEXT) key_event_testrunner$(EXEEXT) \
	static_vs_dynamic1$(EXEEXT) static_vs_dynamic2$(EXEEXT) \
	getTimer_test$(EXEEXT) Video-EmbedSquareTest$(EXEEXT) \
	Video-EmbedSquareTestRunner$(EXEEXT) \
	NetStream-SquareTest$(EXEEXT) \
	NetStream-SquareTestRunner$(EXEEXT) shape_test$(EXEEXT) \
	morph_test1$(EXEEXT) morph_test1runner$(EXEEXT) \
	runtime_vm_stack_test$(EXEEXT) \
	new_child_in_unload_test$(EXEEXT) instanceNameTest$(EXEEXT) \
	BeginBitmapFill$(EXEEXT) BeginBitmapFillRunner$(EXEEXT) \
	BitmapDataTest$(EXEEXT) BitmapDataTestRunner$(EXEEXT) \
	BitmapDataDraw$(EXEEXT) $(am__EXEEXT_1) $(am__EXEEXT_2) \
	$(am__EXEEXT_3) $(am__EXEEXT_4) $(am__EXEEXT_5) \
	$(am__EXEEXT_6)
am__append_1 = \
	BitmapSmoothingTest \
	$(NULL)

am__append_2 = \
	opcode_guard_test \
	get_frame_number_test

am__append_3 = \
	intervalTestRunner \
	DragDropTestRunner   \
	PrototypeEventListenersTestRunner \
	$(NULL)

am__append_4 = \
	replace_shapes1test \
	replace_sprites1test \
	replace_buttons1test \
	$(NULL)

am__append_5 = \
	KeyEventOrder \
	KeyEventOrderRunner \
	ButtonPropertiesTest \
	ButtonEventsTest \
	ButtonPropertiesTestRunner \
	ButtonEventsTest-Runner \
	$(NULL)

am__append_6 = VarAndCharClashTest-Runner \
	gotoFrame2Test-Runner \
	FlashVarsTest-Runner \
	attachImported-Runner \
	attachExtImported-Runner \
	MixedVersion4And5Runner \
	SharedObjectTestRunner

#am__append_7 = remotingTestRunner
#am__append_8 = red5test-runner
#am__append_9 = rtmpytest-runner
am__append_10 = \
	opcode_guard_testrunner \
	get_frame_number_testrunner \
	$(NULL)	

am__append_11 = \
	PlaceObject2TestRunner \
	$(NULL)

am__append_12 = \
	PlaceObject2Test \
	replace_shapes1test_runner \
	replace_sprites1test_runner \
	replace_buttons1test_runner \
	$(NULL)

am__append_13 = \
    $(NULL)

am__append_14 = \
	opcode_guard_testrunner \
	get_frame_number_testrunner

am__append_15 = VarAndCharClashTest-Runner \
	PrototypeEventListenersTestRunner \
	DragDropTestRunner   \
	FlashVarsTest-Runner \
	SharedObjectTestRunner \
	MixedVersion4And5Runner \
	intervalTestRunner \
	gotoFrame2Test-Runner \
	attachImported-Runner \
	attachExtImported-Runner

#am__append_16 = remotingTestRunner
#am__append_17 = red5test-runner
#am__append_18 = rtmpytest-runner
am__append_19 = \
	PlaceObject2TestRunner \
	replace_shapes1test_runner \
	replace_sprites1test_runner \
	replace_buttons1test_runner \
	$(NULL)

am__append_20 = \
	ButtonPropertiesTestRunner \
	ButtonEventsTest-Runner \
	KeyEventOrderRunner \
	$(NULL)

subdir = testsuite/misc-ming.all
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in TODO
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/macros/agg.m4 \
	$(top_srcdir)/macros/boost.m4 $(top_srcdir)/macros/curl.m4 \
	$(top_srcdir)/macros/dbus.m4 $(top_srcdir)/macros/docbook.m4 \
	$(top_srcdir)/macros/ffmpeg.m4 $(top_srcdir)/macros/firefox.m4 \
	$(top_srcdir)/macros/freetype.m4 \
	$(top_srcdir)/macros/gconf-2.m4 \
	$(top_srcdir)/macros/gettext.m4 $(top_srcdir)/macros/gles.m4 \
	$(top_srcdir)/macros/glib.m4 \
	$(top_srcdir)/macros/gnashpkgtool.m4 \
	$(top_srcdir)/macros/gtk2.m4 $(top_srcdir)/macros/gtkglext.m4 \
	$(top_srcdir)/macros/haxe.m4 $(top_srcdir)/macros/iconv.m4 \
	$(top_srcdir)/macros/kde3.m4 $(top_srcdir)/macros/kde4.m4 \
	$(top_srcdir)/macros/lib-ld.m4 \
	$(top_srcdir)/macros/lib-link.m4 \
	$(top_srcdir)/macros/lib-prefix.m4 \
	$(top_srcdir)/macros/libtool.m4 \
	$(top_srcdir)/macros/ltoptions.m4 \
	$(top_srcdir)/macros/ltsugar.m4 \
	$(top_srcdir)/macros/ltversion.m4 \
	$(top_srcdir)/macros/lt~obsolete.m4 \
	$(top_srcdir)/macros/ming.m4 $(top_srcdir)/macros/mtasc.m4 \
	$(top_srcdir)/macros/mysql.m4 $(top_srcdir)/macros/nls.m4 \
	$(top_srcdir)/macros/npapi.m4 $(top_srcdir)/macros/opengl.m4 \
	$(top_srcdir)/macros/openvg.m4 $(top_srcdir)/macros/pango.m4 \
	$(top_srcdir)/macros/pkg.m4 $(top_srcdir)/macros/po.m4 \
	$(top_srcdir)/macros/progtest.m4 \
	$(top_srcdir)/macros/pthreads.m4 \
	$(top_srcdir)/macros/python.m4 $(top_srcdir)/macros/qt3.m4 \
	$(top_srcdir)/macros/qt4.m4 $(top_srcdir)/macros/sdl.m4 \
	$(top_srcdir)/macros/swfmill.m4 $(top_srcdir)/macros/x11.m4 \
	$(top_srcdir)/cygnal/acinclude.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/gnashconfig.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
libgnashmingutils_la_LIBADD =
am_libgnashmingutils_la_OBJECTS = ming_utils.lo
libgnashmingutils_la_OBJECTS = $(am_libgnashmingutils_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__EXEEXT_1 = BitmapSmoothingTest$(EXEEXT)
am__EXEEXT_2 = opcode_guard_test$(EXEEXT) \
	get_frame_number_test$(EXEEXT)
am__EXEEXT_3 = intervalTestRunner$(EXEEXT) \
	DragDropTestRunner$(EXEEXT) \
	PrototypeEventListenersTestRunner$(EXEEXT)
am__EXEEXT_4 =  \
	replace_shapes1test$(EXEEXT) \
	replace_sprites1test$(EXEEXT) \
	replace_buttons1test$(EXEEXT)
am__EXEEXT_5 = KeyEventOrder$(EXEEXT) \
	KeyEventOrderRunner$(EXEEXT) \
	ButtonPropertiesTest$(EXEEXT) \
	ButtonEventsTest$(EXEEXT) \
	ButtonPropertiesTestRunner$(EXEEXT) \
	ButtonEventsTest-Runner$(EXEEXT)
am__EXEEXT_6 =  \
	PlaceObject2Test$(EXEEXT) \
	replace_shapes1test_runner$(EXEEXT) \
	replace_sprites1test_runner$(EXEEXT) \
	replace_buttons1test_runner$(EXEEXT)
am_BeginBitmapFill_OBJECTS =  \
	BeginBitmapFill-BeginBitmapFill.$(OBJEXT)
BeginBitmapFill_OBJECTS = $(am_BeginBitmapFill_OBJECTS)
BeginBitmapFill_DEPENDENCIES = libgnashmingutils.la
BeginBitmapFill_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(BeginBitmapFill_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
am_BeginBitmapFillRunner_OBJECTS =  \
	BeginBitmapFillRunner-BeginBitmapFillRunner.$(OBJEXT)
BeginBitmapFillRunner_OBJECTS = $(am_BeginBitmapFillRunner_OBJECTS)
am__DEPENDENCIES_1 =
am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(top_builddir)/libbase/libgnashbase.la \
	$(top_builddir)/librender/libgnashrender.la \
	$(top_builddir)/libcore/libgnashcore.la
BeginBitmapFillRunner_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(BeginBitmapFillRunner_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_BitmapDataDraw_OBJECTS = BitmapDataDraw-BitmapDataDraw.$(OBJEXT)
BitmapDataDraw_OBJECTS = $(am_BitmapDataDraw_OBJECTS)
BitmapDataDraw_DEPENDENCIES = libgnashmingutils.la
BitmapDataDraw_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(BitmapDataDraw_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o \
	$@
am_BitmapDataTest_OBJECTS = BitmapDataTest-BitmapDataTest.$(OBJEXT)
BitmapDataTest_OBJECTS = $(am_BitmapDataTest_OBJECTS)
BitmapDataTest_DEPENDENCIES = libgnashmingutils.la
BitmapDataTest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(BitmapDataTest_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o \
	$@
am_BitmapDataTestRunner_OBJECTS =  \
	BitmapDataTestRunner-BitmapDataTestRunner.$(OBJEXT)
BitmapDataTestRunner_OBJECTS = $(am_BitmapDataTestRunner_OBJECTS)
BitmapDataTestRunner_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(BitmapDataTestRunner_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_BitmapSmoothingTest_OBJECTS =  \
	BitmapSmoothingTest-BitmapSmoothingTest.$(OBJEXT)
BitmapSmoothingTest_OBJECTS = $(am_BitmapSmoothingTest_OBJECTS)
BitmapSmoothingTest_DEPENDENCIES = libgnashmingutils.la
BitmapSmoothingTest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(BitmapSmoothingTest_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_ButtonEventsTest_OBJECTS = ButtonEventsTest.$(OBJEXT)
ButtonEventsTest_OBJECTS = $(am_ButtonEventsTest_OBJECTS)
ButtonEventsTest_DEPENDENCIES = libgnashmingutils.la
am_ButtonEventsTest_Runner_OBJECTS =  \
	ButtonEventsTest_Runner-ButtonEventsTest-Runner.$(OBJEXT)
ButtonEventsTest_Runner_OBJECTS =  \
	$(am_ButtonEventsTest_Runner_OBJECTS)
ButtonEventsTest_Runner_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(ButtonEventsTest_Runner_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_ButtonPropertiesTest_OBJECTS = ButtonPropertiesTest.$(OBJEXT)
ButtonPropertiesTest_OBJECTS = $(am_ButtonPropertiesTest_OBJECTS)
ButtonPropertiesTest_DEPENDENCIES = libgnashmingutils.la
am_ButtonPropertiesTestRunner_OBJECTS = ButtonPropertiesTestRunner-ButtonPropertiesTestRunner.$(OBJEXT)
ButtonPropertiesTestRunner_OBJECTS =  \
	$(am_ButtonPropertiesTestRunner_OBJECTS)
ButtonPropertiesTestRunner_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(ButtonPropertiesTestRunner_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_DefineEditTextTest_OBJECTS = DefineEditTextTest.$(OBJEXT)
DefineEditTextTest_OBJECTS = $(am_DefineEditTextTest_OBJECTS)
DefineEditTextTest_DEPENDENCIES = libgnashmingutils.la
am_DefineEditTextTest_Runner_OBJECTS =  \
	DefineEditTextTest_Runner-DefineEditTextTest-Runner.$(OBJEXT)
DefineEditTextTest_Runner_OBJECTS =  \
	$(am_DefineEditTextTest_Runner_OBJECTS)
DefineEditTextTest_Runner_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(DefineEditTextTest_Runner_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_DefineEditTextVariableNameTest_OBJECTS =  \
	DefineEditTextVariableNameTest.$(OBJEXT)
DefineEditTextVariableNameTest_OBJECTS =  \
	$(am_DefineEditTextVariableNameTest_OBJECTS)
DefineEditTextVariableNameTest_DEPENDENCIES = libgnashmingutils.la
am_DefineEditTextVariableNameTest_Runner_OBJECTS =  \
	DefineEditTextVariableNameTest-Runner.$(OBJEXT)
DefineEditTextVariableNameTest_Runner_OBJECTS =  \
	$(am_DefineEditTextVariableNameTest_Runner_OBJECTS)
am_DefineEditTextVariableNameTest2_OBJECTS =  \
	DefineEditTextVariableNameTest2.$(OBJEXT)
DefineEditTextVariableNameTest2_OBJECTS =  \
	$(am_DefineEditTextVariableNameTest2_OBJECTS)
DefineEditTextVariableNameTest2_DEPENDENCIES = libgnashmingutils.la
am_DefineTextTest_OBJECTS = DefineTextTest.$(OBJEXT)
DefineTextTest_OBJECTS = $(am_DefineTextTest_OBJECTS)
DefineTextTest_DEPENDENCIES = libgnashmingutils.la
am_DefineTextTest_Runner_OBJECTS =  \
	DefineTextTest_Runner-DefineTextTest-Runner.$(OBJEXT)
DefineTextTest_Runner_OBJECTS = $(am_DefineTextTest_Runner_OBJECTS)
DefineTextTest_Runner_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(DefineTextTest_Runner_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_Dejagnu_OBJECTS = Dejagnu.$(OBJEXT)
Dejagnu_OBJECTS = $(am_Dejagnu_OBJECTS)
Dejagnu_DEPENDENCIES = libgnashmingutils.la
Dejagnu_swf_SOURCES = Dejagnu.c
Dejagnu_swf_OBJECTS = Dejagnu.$(OBJEXT)
Dejagnu_swf_LDADD = $(LDADD)
am_DepthLimitsTest_OBJECTS = DepthLimitsTest.$(OBJEXT)
DepthLimitsTest_OBJECTS = $(am_DepthLimitsTest_OBJECTS)
DepthLimitsTest_DEPENDENCIES = libgnashmingutils.la
am_DeviceFontTest_OBJECTS = DeviceFontTest.$(OBJEXT)
DeviceFontTest_OBJECTS = $(am_DeviceFontTest_OBJECTS)
DeviceFontTest_DEPENDENCIES = libgnashmingutils.la
am_DragDropTestRunner_OBJECTS =  \
	DragDropTestRunner-DragDropTestRunner.$(OBJEXT)
DragDropTestRunner_OBJECTS = $(am_DragDropTestRunner_OBJECTS)
DragDropTestRunner_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(DragDropTestRunner_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_DrawingApiTestRunner_OBJECTS =  \
	DrawingApiTestRunner-DrawingApiTestRunner.$(OBJEXT)
DrawingApiTestRunner_OBJECTS = $(am_DrawingApiTestRunner_OBJECTS)
DrawingApiTestRunner_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(DrawingApiTestRunner_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_EmbeddedFontTest_OBJECTS = EmbeddedFontTest.$(OBJEXT)
EmbeddedFontTest_OBJECTS = $(am_EmbeddedFontTest_OBJECTS)
EmbeddedFontTest_DEPENDENCIES = libgnashmingutils.la
am_KeyEventOrder_OBJECTS = KeyEventOrder.$(OBJEXT)
KeyEventOrder_OBJECTS = $(am_KeyEventOrder_OBJECTS)
KeyEventOrder_DEPENDENCIES = libgnashmingutils.la
am_KeyEventOrderRunner_OBJECTS =  \
	KeyEventOrderRunner-KeyEventOrderRunner.$(OBJEXT)
KeyEventOrderRunner_OBJECTS = $(am_KeyEventOrderRunner_OBJECTS)
KeyEventOrderRunner_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(KeyEventOrderRunner_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_NetStream_SquareTest_OBJECTS = NetStream-SquareTest.$(OBJEXT)
NetStream_SquareTest_OBJECTS = $(am_NetStream_SquareTest_OBJECTS)
NetStream_SquareTest_DEPENDENCIES = libgnashmingutils.la
am_NetStream_SquareTestRunner_OBJECTS = NetStream_SquareTestRunner-NetStream-SquareTestRunner.$(OBJEXT)
NetStream_SquareTestRunner_OBJECTS =  \
	$(am_NetStream_SquareTestRunner_OBJECTS)
NetStream_SquareTestRunner_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(NetStream_SquareTestRunner_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_PlaceObject2Test_OBJECTS = PlaceObject2Test.$(OBJEXT)
PlaceObject2Test_OBJECTS = $(am_PlaceObject2Test_OBJECTS)
PlaceObject2Test_DEPENDENCIES = libgnashmingutils.la
am_PrototypeEventListenersTestRunner_OBJECTS = PrototypeEventListenersTestRunner-PrototypeEventListenersTestRunner.$(OBJEXT)
PrototypeEventListenersTestRunner_OBJECTS =  \
	$(am_PrototypeEventListenersTestRunner_OBJECTS)
PrototypeEventListenersTestRunner_LINK = $(LIBTOOL) $(AM_V_lt) \
	--tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(CXXLD) $(PrototypeEventListenersTestRunner_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_RemoveObject2Test_OBJECTS = RemoveObject2Test.$(OBJEXT)
RemoveObject2Test_OBJECTS = $(am_RemoveObject2Test_OBJECTS)
RemoveObject2Test_DEPENDENCIES = libgnashmingutils.la
am_ResolveEventsTest_OBJECTS = ResolveEventsTest.$(OBJEXT)
ResolveEventsTest_OBJECTS = $(am_ResolveEventsTest_OBJECTS)
ResolveEventsTest_DEPENDENCIES = libgnashmingutils.la
am_ResolveEventsTest_Runner_OBJECTS =  \
	ResolveEventsTest_Runner-ResolveEventsTest-Runner.$(OBJEXT)
ResolveEventsTest_Runner_OBJECTS =  \
	$(am_ResolveEventsTest_Runner_OBJECTS)
ResolveEventsTest_Runner_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(ResolveEventsTest_Runner_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_RollOverOutTest_OBJECTS = RollOverOutTest.$(OBJEXT)
RollOverOutTest_OBJECTS = $(am_RollOverOutTest_OBJECTS)
RollOverOutTest_DEPENDENCIES = libgnashmingutils.la
am_RollOverOutTest_Runner_OBJECTS =  \
	RollOverOutTest_Runner-RollOverOutTest-Runner.$(OBJEXT)
RollOverOutTest_Runner_OBJECTS = $(am_RollOverOutTest_Runner_OBJECTS)
RollOverOutTest_Runner_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(RollOverOutTest_Runner_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_SpriteButtonEventsTest_OBJECTS = SpriteButtonEventsTest.$(OBJEXT)
SpriteButtonEventsTest_OBJECTS = $(am_SpriteButtonEventsTest_OBJECTS)
SpriteButtonEventsTest_DEPENDENCIES = libgnashmingutils.la
am_SpriteButtonEventsTest_Runner_OBJECTS = SpriteButtonEventsTest_Runner-SpriteButtonEventsTest-Runner.$(OBJEXT)
SpriteButtonEventsTest_Runner_OBJECTS =  \
	$(am_SpriteButtonEventsTest_Runner_OBJECTS)
SpriteButtonEventsTest_Runner_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(SpriteButtonEventsTest_Runner_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_TextSnapshotTest_OBJECTS = TextSnapshotTest.$(OBJEXT)
TextSnapshotTest_OBJECTS = $(am_TextSnapshotTest_OBJECTS)
TextSnapshotTest_DEPENDENCIES = libgnashmingutils.la
am_Video_EmbedSquareTest_OBJECTS = Video-EmbedSquareTest.$(OBJEXT)
Video_EmbedSquareTest_OBJECTS = $(am_Video_EmbedSquareTest_OBJECTS)
Video_EmbedSquareTest_DEPENDENCIES = libgnashmingutils.la
am_Video_EmbedSquareTestRunner_OBJECTS = Video_EmbedSquareTestRunner-Video-EmbedSquareTestRunner.$(OBJEXT)
Video_EmbedSquareTestRunner_OBJECTS =  \
	$(am_Video_EmbedSquareTestRunner_OBJECTS)
Video_EmbedSquareTestRunner_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(Video_EmbedSquareTestRunner_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_attachMovieLoopingTest_OBJECTS = attachMovieLoopingTest.$(OBJEXT)
attachMovieLoopingTest_OBJECTS = $(am_attachMovieLoopingTest_OBJECTS)
attachMovieLoopingTest_DEPENDENCIES = libgnashmingutils.la
am_attachMovieLoopingTestRunner_OBJECTS = attachMovieLoopingTestRunner-attachMovieLoopingTestRunner.$(OBJEXT)
attachMovieLoopingTestRunner_OBJECTS =  \
	$(am_attachMovieLoopingTestRunner_OBJECTS)
attachMovieLoopingTestRunner_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(attachMovieLoopingTestRunner_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_attachMovieTest_OBJECTS = attachMovieTest.$(OBJEXT)
attachMovieTest_OBJECTS = $(am_attachMovieTest_OBJECTS)
attachMovieTest_DEPENDENCIES = libgnashmingutils.la
am_attachMovieTestRunner_OBJECTS =  \
	attachMovieTestRunner-attachMovieTestRunner.$(OBJEXT)
attachMovieTestRunner_OBJECTS = $(am_attachMovieTestRunner_OBJECTS)
attachMovieTestRunner_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(attachMovieTestRunner_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_callFunction_test_OBJECTS = callFunction_test.$(OBJEXT)
callFunction_test_OBJECTS = $(am_callFunction_test_OBJECTS)
callFunction_test_DEPENDENCIES = libgnashmingutils.la
am_consecutive_goto_frame_test_OBJECTS =  \
	consecutive_goto_frame_test.$(OBJEXT)
consecutive_goto_frame_test_OBJECTS =  \
	$(am_consecutive_goto_frame_test_OBJECTS)
consecutive_goto_frame_test_DEPENDENCIES = libgnashmingutils.la
am_definebitsjpeg2_OBJECTS = definebitsjpeg2.$(OBJEXT)
definebitsjpeg2_OBJECTS = $(am_definebitsjpeg2_OBJECTS)
definebitsjpeg2_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_duplicate_movie_clip_test_OBJECTS =  \
	duplicate_movie_clip_test.$(OBJEXT)
duplicate_movie_clip_test_OBJECTS =  \
	$(am_duplicate_movie_clip_test_OBJECTS)
duplicate_movie_clip_test_DEPENDENCIES = libgnashmingutils.la
am_duplicate_movie_clip_test2_OBJECTS =  \
	duplicate_movie_clip_test2.$(OBJEXT)
duplicate_movie_clip_test2_OBJECTS =  \
	$(am_duplicate_movie_clip_test2_OBJECTS)
duplicate_movie_clip_test2_DEPENDENCIES = libgnashmingutils.la
am_event_handler_scope_test_OBJECTS =  \
	event_handler_scope_test.$(OBJEXT)
event_handler_scope_test_OBJECTS =  \
	$(am_event_handler_scope_test_OBJECTS)
event_handler_scope_test_DEPENDENCIES = libgnashmingutils.la
am_frame_label_test_OBJECTS = frame_label_test.$(OBJEXT)
frame_label_test_OBJECTS = $(am_frame_label_test_OBJECTS)
frame_label_test_DEPENDENCIES = libgnashmingutils.la
am_getTimer_test_OBJECTS = getTimer_test.$(OBJEXT)
getTimer_test_OBJECTS = $(am_getTimer_test_OBJECTS)
getTimer_test_DEPENDENCIES = libgnashmingutils.la
am_get_frame_number_test_OBJECTS = get_frame_number_test.$(OBJEXT)
get_frame_number_test_OBJECTS = $(am_get_frame_number_test_OBJECTS)
get_frame_number_test_DEPENDENCIES = libgnashmingutils.la
am_goto_frame_test_OBJECTS = goto_frame_test.$(OBJEXT)
goto_frame_test_OBJECTS = $(am_goto_frame_test_OBJECTS)
goto_frame_test_DEPENDENCIES = libgnashmingutils.la
am_instanceNameTest_OBJECTS = instanceNameTest.$(OBJEXT)
instanceNameTest_OBJECTS = $(am_instanceNameTest_OBJECTS)
instanceNameTest_DEPENDENCIES = libgnashmingutils.la
am_intervalTestRunner_OBJECTS =  \
	intervalTestRunner-intervalTestRunner.$(OBJEXT)
intervalTestRunner_OBJECTS = $(am_intervalTestRunner_OBJECTS)
intervalTestRunner_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(intervalTestRunner_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_key_event_test_OBJECTS = key_event_test.$(OBJEXT)
key_event_test_OBJECTS = $(am_key_event_test_OBJECTS)
key_event_test_DEPENDENCIES = libgnashmingutils.la
am_key_event_testrunner_OBJECTS =  \
	key_event_testrunner-key_event_testrunner.$(OBJEXT)
key_event_testrunner_OBJECTS = $(am_key_event_testrunner_OBJECTS)
key_event_testrunner_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(key_event_testrunner_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_masks_test_OBJECTS = masks_test.$(OBJEXT)
masks_test_OBJECTS = $(am_masks_test_OBJECTS)
masks_test_DEPENDENCIES = libgnashmingutils.la
am_masks_test2_OBJECTS = masks_test2.$(OBJEXT)
masks_test2_OBJECTS = $(am_masks_test2_OBJECTS)
masks_test2_DEPENDENCIES = libgnashmingutils.la
am_masks_test2runner_OBJECTS =  \
	masks_test2runner-masks_test2runner.$(OBJEXT)
masks_test2runner_OBJECTS = $(am_masks_test2runner_OBJECTS)
masks_test2runner_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(masks_test2runner_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_masks_testrunner_OBJECTS =  \
	masks_testrunner-masks_testrunner.$(OBJEXT)
masks_testrunner_OBJECTS = $(am_masks_testrunner_OBJECTS)
masks_testrunner_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(masks_testrunner_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_matrix_test_OBJECTS = matrix_test.$(OBJEXT)
matrix_test_OBJECTS = $(am_matrix_test_OBJECTS)
matrix_test_DEPENDENCIES = libgnashmingutils.la
am_morph_test1_OBJECTS = morph_test1.$(OBJEXT)
morph_test1_OBJECTS = $(am_morph_test1_OBJECTS)
morph_test1_DEPENDENCIES = libgnashmingutils.la
am_morph_test1runner_OBJECTS =  \
	morph_test1runner-morph_test1runner.$(OBJEXT)
morph_test1runner_OBJECTS = $(am_morph_test1runner_OBJECTS)
morph_test1runner_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(morph_test1runner_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_move_object_test_OBJECTS = move_object_test.$(OBJEXT)
move_object_test_OBJECTS = $(am_move_object_test_OBJECTS)
move_object_test_DEPENDENCIES = libgnashmingutils.la
am_multi_doactions_and_goto_frame_test_OBJECTS =  \
	multi_doactions_and_goto_frame_test.$(OBJEXT)
multi_doactions_and_goto_frame_test_OBJECTS =  \
	$(am_multi_doactions_and_goto_frame_test_OBJECTS)
multi_doactions_and_goto_frame_test_DEPENDENCIES =  \
	libgnashmingutils.la
am_new_child_in_unload_test_OBJECTS =  \
	new_child_in_unload_test.$(OBJEXT)
new_child_in_unload_test_OBJECTS =  \
	$(am_new_child_in_unload_test_OBJECTS)
new_child_in_unload_test_DEPENDENCIES = libgnashmingutils.la
am_opcode_guard_test_OBJECTS = opcode_guard_test.$(OBJEXT)
opcode_guard_test_OBJECTS = $(am_opcode_guard_test_OBJECTS)
opcode_guard_test_DEPENDENCIES = libgnashmingutils.la
am_path_format_test_OBJECTS = path_format_test.$(OBJEXT)
path_format_test_OBJECTS = $(am_path_format_test_OBJECTS)
path_format_test_DEPENDENCIES = libgnashmingutils.la
am_place_and_remove_object_insane_test_OBJECTS =  \
	place_and_remove_object_insane_test.$(OBJEXT)
place_and_remove_object_insane_test_OBJECTS =  \
	$(am_place_and_remove_object_insane_test_OBJECTS)
place_and_remove_object_insane_test_DEPENDENCIES =  \
	libgnashmingutils.la
am_place_and_remove_object_test_OBJECTS =  \
	place_and_remove_object_test.$(OBJEXT)
place_and_remove_object_test_OBJECTS =  \
	$(am_place_and_remove_object_test_OBJECTS)
place_and_remove_object_test_DEPENDENCIES = libgnashmingutils.la
am_place_object_test_OBJECTS = place_object_test.$(OBJEXT)
place_object_test_OBJECTS = $(am_place_object_test_OBJECTS)
place_object_test_DEPENDENCIES = libgnashmingutils.la
am_place_object_test2_OBJECTS = place_object_test2.$(OBJEXT)
place_object_test2_OBJECTS = $(am_place_object_test2_OBJECTS)
place_object_test2_DEPENDENCIES = libgnashmingutils.la
am_replace_buttons1test_OBJECTS = replace_buttons1test.$(OBJEXT)
replace_buttons1test_OBJECTS = $(am_replace_buttons1test_OBJECTS)
replace_buttons1test_DEPENDENCIES = libgnashmingutils.la
am_replace_buttons1test_runner_OBJECTS = replace_buttons1test_runner-replace_buttons1test_runner.$(OBJEXT)
replace_buttons1test_runner_OBJECTS =  \
	$(am_replace_buttons1test_runner_OBJECTS)
replace_buttons1test_runner_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(replace_buttons1test_runner_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_replace_shapes1test_OBJECTS = replace_shapes1test.$(OBJEXT)
replace_shapes1test_OBJECTS = $(am_replace_shapes1test_OBJECTS)
replace_shapes1test_DEPENDENCIES = libgnashmingutils.la
am_replace_shapes1test_runner_OBJECTS = replace_shapes1test_runner-replace_shapes1test_runner.$(OBJEXT)
replace_shapes1test_runner_OBJECTS =  \
	$(am_replace_shapes1test_runner_OBJECTS)
replace_shapes1test_runner_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(replace_shapes1test_runner_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_replace_sprites1test_OBJECTS = replace_sprites1test.$(OBJEXT)
replace_sprites1test_OBJECTS = $(am_replace_sprites1test_OBJECTS)
replace_sprites1test_DEPENDENCIES = libgnashmingutils.la
am_replace_sprites1test_runner_OBJECTS = replace_sprites1test_runner-replace_sprites1test_runner.$(OBJEXT)
replace_sprites1test_runner_OBJECTS =  \
	$(am_replace_sprites1test_runner_OBJECTS)
replace_sprites1test_runner_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(replace_sprites1test_runner_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_reverse_execute_PlaceObject2_test1_OBJECTS =  \
	reverse_execute_PlaceObject2_test1.$(OBJEXT)
reverse_execute_PlaceObject2_test1_OBJECTS =  \
	$(am_reverse_execute_PlaceObject2_test1_OBJECTS)
reverse_execute_PlaceObject2_test1_DEPENDENCIES =  \
	libgnashmingutils.la
am_reverse_execute_PlaceObject2_test2_OBJECTS =  \
	reverse_execute_PlaceObject2_test2.$(OBJEXT)
reverse_execute_PlaceObject2_test2_OBJECTS =  \
	$(am_reverse_execute_PlaceObject2_test2_OBJECTS)
reverse_execute_PlaceObject2_test2_DEPENDENCIES =  \
	libgnashmingutils.la
am_root_stop_test_OBJECTS = root_stop_test.$(OBJEXT)
root_stop_test_OBJECTS = $(am_root_stop_test_OBJECTS)
root_stop_test_DEPENDENCIES = libgnashmingutils.la
am_root_stop_testrunner_OBJECTS =  \
	root_stop_testrunner-root_stop_testrunner.$(OBJEXT)
root_stop_testrunner_OBJECTS = $(am_root_stop_testrunner_OBJECTS)
root_stop_testrunner_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(root_stop_testrunner_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_runtime_vm_stack_test_OBJECTS = runtime_vm_stack_test.$(OBJEXT)
runtime_vm_stack_test_OBJECTS = $(am_runtime_vm_stack_test_OBJECTS)
runtime_vm_stack_test_DEPENDENCIES = libgnashmingutils.la
am_shape_test_OBJECTS = shape_test.$(OBJEXT)
shape_test_OBJECTS = $(am_shape_test_OBJECTS)
shape_test_DEPENDENCIES = libgnashmingutils.la
am_spritehier_OBJECTS = spritehier.$(OBJEXT)
spritehier_OBJECTS = $(am_spritehier_OBJECTS)
spritehier_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_static_vs_dynamic1_OBJECTS = static_vs_dynamic1.$(OBJEXT)
static_vs_dynamic1_OBJECTS = $(am_static_vs_dynamic1_OBJECTS)
static_vs_dynamic1_DEPENDENCIES = libgnashmingutils.la
am_static_vs_dynamic2_OBJECTS = static_vs_dynamic2.$(OBJEXT)
static_vs_dynamic2_OBJECTS = $(am_static_vs_dynamic2_OBJECTS)
static_vs_dynamic2_DEPENDENCIES = libgnashmingutils.la
am_timeline_var_test_OBJECTS = timeline_var_test.$(OBJEXT)
timeline_var_test_OBJECTS = $(am_timeline_var_test_OBJECTS)
timeline_var_test_DEPENDENCIES = libgnashmingutils.la
am_unload_movieclip_test1_OBJECTS = unload_movieclip_test1.$(OBJEXT)
unload_movieclip_test1_OBJECTS = $(am_unload_movieclip_test1_OBJECTS)
unload_movieclip_test1_DEPENDENCIES = libgnashmingutils.la
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC    " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD  " $@;
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX   " $@;
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD " $@;
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = $(libgnashmingutils_la_SOURCES) $(BeginBitmapFill_SOURCES) \
	$(BeginBitmapFillRunner_SOURCES) $(BitmapDataDraw_SOURCES) \
	$(BitmapDataTest_SOURCES) $(BitmapDataTestRunner_SOURCES) \
	$(BitmapSmoothingTest_SOURCES) $(ButtonEventsTest_SOURCES) \
	$(ButtonEventsTest_Runner_SOURCES) \
	$(ButtonPropertiesTest_SOURCES) \
	$(ButtonPropertiesTestRunner_SOURCES) \
	$(DefineEditTextTest_SOURCES) \
	$(DefineEditTextTest_Runner_SOURCES) \
	$(DefineEditTextVariableNameTest_SOURCES) \
	$(DefineEditTextVariableNameTest_Runner_SOURCES) \
	$(DefineEditTextVariableNameTest2_SOURCES) \
	$(DefineTextTest_SOURCES) $(DefineTextTest_Runner_SOURCES) \
	$(Dejagnu_SOURCES) Dejagnu.c $(DepthLimitsTest_SOURCES) \
	$(DeviceFontTest_SOURCES) $(DragDropTestRunner_SOURCES) \
	$(DrawingApiTestRunner_SOURCES) $(EmbeddedFontTest_SOURCES) \
	$(KeyEventOrder_SOURCES) $(KeyEventOrderRunner_SOURCES) \
	$(NetStream_SquareTest_SOURCES) \
	$(NetStream_SquareTestRunner_SOURCES) \
	$(PlaceObject2Test_SOURCES) \
	$(PrototypeEventListenersTestRunner_SOURCES) \
	$(RemoveObject2Test_SOURCES) $(ResolveEventsTest_SOURCES) \
	$(ResolveEventsTest_Runner_SOURCES) $(RollOverOutTest_SOURCES) \
	$(RollOverOutTest_Runner_SOURCES) \
	$(SpriteButtonEventsTest_SOURCES) \
	$(SpriteButtonEventsTest_Runner_SOURCES) \
	$(TextSnapshotTest_SOURCES) $(Video_EmbedSquareTest_SOURCES) \
	$(Video_EmbedSquareTestRunner_SOURCES) \
	$(attachMovieLoopingTest_SOURCES) \
	$(attachMovieLoopingTestRunner_SOURCES) \
	$(attachMovieTest_SOURCES) $(attachMovieTestRunner_SOURCES) \
	$(callFunction_test_SOURCES) \
	$(consecutive_goto_frame_test_SOURCES) \
	$(definebitsjpeg2_SOURCES) \
	$(duplicate_movie_clip_test_SOURCES) \
	$(duplicate_movie_clip_test2_SOURCES) \
	$(event_handler_scope_test_SOURCES) \
	$(frame_label_test_SOURCES) $(getTimer_test_SOURCES) \
	$(get_frame_number_test_SOURCES) $(goto_frame_test_SOURCES) \
	$(instanceNameTest_SOURCES) $(intervalTestRunner_SOURCES) \
	$(key_event_test_SOURCES) $(key_event_testrunner_SOURCES) \
	$(masks_test_SOURCES) $(masks_test2_SOURCES) \
	$(masks_test2runner_SOURCES) $(masks_testrunner_SOURCES) \
	$(matrix_test_SOURCES) $(morph_test1_SOURCES) \
	$(morph_test1runner_SOURCES) $(move_object_test_SOURCES) \
	$(multi_doactions_and_goto_frame_test_SOURCES) \
	$(new_child_in_unload_test_SOURCES) \
	$(opcode_guard_test_SOURCES) $(path_format_test_SOURCES) \
	$(place_and_remove_object_insane_test_SOURCES) \
	$(place_and_remove_object_test_SOURCES) \
	$(place_object_test_SOURCES) $(place_object_test2_SOURCES) \
	$(replace_buttons1test_SOURCES) \
	$(replace_buttons1test_runner_SOURCES) \
	$(replace_shapes1test_SOURCES) \
	$(replace_shapes1test_runner_SOURCES) \
	$(replace_sprites1test_SOURCES) \
	$(replace_sprites1test_runner_SOURCES) \
	$(reverse_execute_PlaceObject2_test1_SOURCES) \
	$(reverse_execute_PlaceObject2_test2_SOURCES) \
	$(root_stop_test_SOURCES) $(root_stop_testrunner_SOURCES) \
	$(runtime_vm_stack_test_SOURCES) $(shape_test_SOURCES) \
	$(spritehier_SOURCES) $(static_vs_dynamic1_SOURCES) \
	$(static_vs_dynamic2_SOURCES) $(timeline_var_test_SOURCES) \
	$(unload_movieclip_test1_SOURCES)
DIST_SOURCES = $(libgnashmingutils_la_SOURCES) \
	$(BeginBitmapFill_SOURCES) $(BeginBitmapFillRunner_SOURCES) \
	$(BitmapDataDraw_SOURCES) $(BitmapDataTest_SOURCES) \
	$(BitmapDataTestRunner_SOURCES) $(BitmapSmoothingTest_SOURCES) \
	$(ButtonEventsTest_SOURCES) $(ButtonEventsTest_Runner_SOURCES) \
	$(ButtonPropertiesTest_SOURCES) \
	$(ButtonPropertiesTestRunner_SOURCES) \
	$(DefineEditTextTest_SOURCES) \
	$(DefineEditTextTest_Runner_SOURCES) \
	$(DefineEditTextVariableNameTest_SOURCES) \
	$(DefineEditTextVariableNameTest_Runner_SOURCES) \
	$(DefineEditTextVariableNameTest2_SOURCES) \
	$(DefineTextTest_SOURCES) $(DefineTextTest_Runner_SOURCES) \
	$(Dejagnu_SOURCES) Dejagnu.c $(DepthLimitsTest_SOURCES) \
	$(DeviceFontTest_SOURCES) $(DragDropTestRunner_SOURCES) \
	$(DrawingApiTestRunner_SOURCES) $(EmbeddedFontTest_SOURCES) \
	$(KeyEventOrder_SOURCES) $(KeyEventOrderRunner_SOURCES) \
	$(NetStream_SquareTest_SOURCES) \
	$(NetStream_SquareTestRunner_SOURCES) \
	$(PlaceObject2Test_SOURCES) \
	$(PrototypeEventListenersTestRunner_SOURCES) \
	$(RemoveObject2Test_SOURCES) $(ResolveEventsTest_SOURCES) \
	$(ResolveEventsTest_Runner_SOURCES) $(RollOverOutTest_SOURCES) \
	$(RollOverOutTest_Runner_SOURCES) \
	$(SpriteButtonEventsTest_SOURCES) \
	$(SpriteButtonEventsTest_Runner_SOURCES) \
	$(TextSnapshotTest_SOURCES) $(Video_EmbedSquareTest_SOURCES) \
	$(Video_EmbedSquareTestRunner_SOURCES) \
	$(attachMovieLoopingTest_SOURCES) \
	$(attachMovieLoopingTestRunner_SOURCES) \
	$(attachMovieTest_SOURCES) $(attachMovieTestRunner_SOURCES) \
	$(callFunction_test_SOURCES) \
	$(consecutive_goto_frame_test_SOURCES) \
	$(definebitsjpeg2_SOURCES) \
	$(duplicate_movie_clip_test_SOURCES) \
	$(duplicate_movie_clip_test2_SOURCES) \
	$(event_handler_scope_test_SOURCES) \
	$(frame_label_test_SOURCES) $(getTimer_test_SOURCES) \
	$(get_frame_number_test_SOURCES) $(goto_frame_test_SOURCES) \
	$(instanceNameTest_SOURCES) $(intervalTestRunner_SOURCES) \
	$(key_event_test_SOURCES) $(key_event_testrunner_SOURCES) \
	$(masks_test_SOURCES) $(masks_test2_SOURCES) \
	$(masks_test2runner_SOURCES) $(masks_testrunner_SOURCES) \
	$(matrix_test_SOURCES) $(morph_test1_SOURCES) \
	$(morph_test1runner_SOURCES) $(move_object_test_SOURCES) \
	$(multi_doactions_and_goto_frame_test_SOURCES) \
	$(new_child_in_unload_test_SOURCES) \
	$(opcode_guard_test_SOURCES) $(path_format_test_SOURCES) \
	$(place_and_remove_object_insane_test_SOURCES) \
	$(place_and_remove_object_test_SOURCES) \
	$(place_object_test_SOURCES) $(place_object_test2_SOURCES) \
	$(replace_buttons1test_SOURCES) \
	$(replace_buttons1test_runner_SOURCES) \
	$(replace_shapes1test_SOURCES) \
	$(replace_shapes1test_runner_SOURCES) \
	$(replace_sprites1test_SOURCES) \
	$(replace_sprites1test_runner_SOURCES) \
	$(reverse_execute_PlaceObject2_test1_SOURCES) \
	$(reverse_execute_PlaceObject2_test2_SOURCES) \
	$(root_stop_test_SOURCES) $(root_stop_testrunner_SOURCES) \
	$(runtime_vm_stack_test_SOURCES) $(shape_test_SOURCES) \
	$(spritehier_SOURCES) $(static_vs_dynamic1_SOURCES) \
	$(static_vs_dynamic2_SOURCES) $(timeline_var_test_SOURCES) \
	$(unload_movieclip_test1_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \
	$(RECURSIVE_CLEAN_TARGETS:-recursive=) tags TAGS ctags CTAGS \
	distdir
ETAGS = etags
CTAGS = ctags
DEJATOOL = $(PACKAGE)
RUNTESTDEFAULTFLAGS = --tool $$tool --srcdir $$srcdir
EXPECT = expect
RUNTEST = runtest
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = ${SHELL} /home/einar/Downloads/gnash/missing --run aclocal-1.11
AGG_CFLAGS = -I/usr/include/agg2  
AGG_LIBS = -lagg_pic  
AMTAR = ${SHELL} /home/einar/Downloads/gnash/missing --run tar
AM_DEFAULT_VERBOSITY = 0
ANDROID_NDK = 
AR = ar
AS = as
AS3COMPILE = /usr/local/bin/as3compile
ATK_CFLAGS = -pthread -I/usr/include/atk-1.0 -I/usr/include/glib-2.0 -I/usr/lib/i386-linux-gnu/glib-2.0/include  
ATK_CONFIG = 
ATK_LIBS = -pthread -latk-1.0 -lgobject-2.0 -lgthread-2.0 -lrt -lglib-2.0  
AUTOCONF = ${SHELL} /home/einar/Downloads/gnash/missing --run autoconf
AUTOHEADER = ${SHELL} /home/einar/Downloads/gnash/missing --run autoheader
AUTOMAKE = ${SHELL} /home/einar/Downloads/gnash/missing --run automake-1.11
AUTOTRACE = 
AWK = gawk
BOOST_CFLAGS = 
BOOST_CYGNAL_LIBS =  -lboost_serialization-mt -lboost_date_time-mt
BOOST_LIBS =  -lboost_thread-mt -lboost_program_options-mt -lboost_iostreams-mt
BUILDDATE = 20120618
BZ2_LIBS = -lbz2
CAIRO_CFLAGS = 
CAIRO_CONFIG = 
CAIRO_LIBS = 
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2          -W     -Wall     -Wcast-align     -Wcast-qual     -Wpointer-arith     -Wreturn-type     -Wmissing-declarations     -Wmissing-prototypes     -Wstrict-prototypes     
CPP = gcc -E
CPPFLAGS = 
CSOUND = /usr/bin/csound
CURL_CFLAGS =  -DCURL_STATICLIB
CURL_LIBS = -L/usr/lib/i386-linux-gnu -lcurl
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2          -W     -Wall     -Wcast-align     -Wcast-qual     -Wpointer-arith     -Wreturn-type     -Wnon-virtual-dtor     -Wunused      -fvisibility-inlines-hidden
CYGPATH_W = echo
DB2X_MAN = 
DB2X_MANXML = 
DB2X_PDF = 
DB2X_TEXI = 
DB2X_TEXIXML = 
DB2X_VERSION = 
DB2X_XSLTPROC = 
DBUS_CFLAGS = 
DBUS_LIBS = 
DEFAULT_FLASH_MAJOR_VERSION = 10
DEFAULT_FLASH_MINOR_VERSION = 1
DEFAULT_FLASH_PLATFORM_ID = LNX
DEFAULT_FLASH_REV_NUMBER = 999
DEFAULT_FLASH_SYSTEM_OS = GNU/Linux
DEFAULT_SOL_SAFEDIR = ~/.gnash/SharedObjects
DEFAULT_STREAMS_TIMEOUT = 60
DEFS = -DHAVE_CONFIG_H
DEJAGNU = /usr/bin/runtest
DEJAGNU_CFLAGS = 
DEJAGNU_CONFIG = 
DEPDIR = .deps
DIRECTFB_CFLAGS = 
DIRECTFB_CONFIG = 
DIRECTFB_LIBS = 
DLLTOOL = dlltool
DLOPEN = -dlopen
DLPREOPEN = -dlpreopen
DOXYGEN = 
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGL_CFLAGS = 
EGL_CONFIG = 
EGL_LIBS = 
EGREP = /bin/grep -E
EXEEXT = 
EXPAT_CFLAGS = 
EXPAT_CONFIG = 
EXPAT_LIBS = -L/usr/lib/i386-linux-gnu -lexpat 
EXTENSIONS_LIST = 
EXTRA_EGL_LIBS = 
FAKEFB = 
FC_MATCH = /usr/bin/fc-match
FFMPEG_CFLAGS = -D__STDC_CONSTANT_MACROS -I/usr/local/include
FFMPEG_LIBS =  -pthread -L/usr/local/lib -lavcodec -ldl -lasound -lSDL -lbz2 -lz -lrt -lavutil -lm   -lavformat -lavcodec -ldl -lasound -lSDL -lbz2 -lz -lrt -lavutil -lm   -lavutil -lm    -lswscale -lavutil -lm  
FGREP = /bin/grep -F
FIREFOX_PLUGINS = /home/einar/.mozilla/plugins
FLTK2_CFLAGS = 
FLTK2_CONFIG = 
FLTK2_LIBS = 
FONTCONFIG_CFLAGS =  
FONTCONFIG_CONFIG = 
FONTCONFIG_LIBS = -lfontconfig  
FOP = 
FREETYPE2_CFLAGS = -I/usr/include/freetype2  
FREETYPE2_LIBS = -lfreetype  
GCONFTOOL = /usr/bin/gconftool-2
GCONF_CFLAGS = -pthread -I/usr/include/dbus-1.0 -I/usr/lib/i386-linux-gnu/dbus-1.0/include -I/usr/include/glib-2.0 -I/usr/lib/i386-linux-gnu/glib-2.0/include -I/usr/include/gconf/2  
GCONF_LIBS = -lgconf-2 -lglib-2.0  
GCONF_SCHEMA_CONFIG_SOURCE = xml:merged:/etc/gconf/gconf.xml.defaults
GCONF_SCHEMA_FILE_DIR = $(sysconfdir)/gconf/schemas
GETTEXT_MACRO_VERSION = 0.18
GIF_CFLAGS = 
GIF_CONFIG = 
GIF_LIBS = -lgif 
GIT = /usr/bin/git
GLES1_CFLAGS = 
GLES1_LIBS = 
GLES2_CFLAGS = 
GLES2_LIBS = 
GLEXT_CFLAGS = 
GLEXT_LIBS = 
GLIB_CFLAGS = -I/usr/include/glib-2.0 -I/usr/lib/i386-linux-gnu/glib-2.0/include   -I/usr/include/glib-2.0 -I/usr/lib/i386-linux-gnu/glib-2.0/include   
GLIB_LIBS = -lglib-2.0  
GMSGFMT = /usr/bin/msgfmt
GMSGFMT_015 = /usr/bin/msgfmt
GREP = /bin/grep
GSTREAMER_APP_CFLAGS = -pthread -I/usr/include/glib-2.0 -I/usr/lib/i386-linux-gnu/glib-2.0/include -I/usr/include/gstreamer-0.10 -I/usr/include/libxml2  
GSTREAMER_APP_CONFIG = 
GSTREAMER_APP_LIBS = -pthread -lgstapp-0.10 -lgstbase-0.10 -lgstreamer-0.10 -lgobject-2.0 -lgmodule-2.0 -lxml2 -lgthread-2.0 -lrt -lglib-2.0  
GSTREAMER_CFLAGS = -pthread -I/usr/include/glib-2.0 -I/usr/lib/i386-linux-gnu/glib-2.0/include -I/usr/include/gstreamer-0.10 -I/usr/include/libxml2  
GSTREAMER_CONFIG = 
GSTREAMER_LIBS = -lgstinterfaces-0.10 -pthread -lgstreamer-0.10 -lgobject-2.0 -lgmodule-2.0 -lxml2 -lgthread-2.0 -lrt -lglib-2.0  
GSTREAMER_PBUTILS_CFLAGS = -pthread -I/usr/include/glib-2.0 -I/usr/lib/i386-linux-gnu/glib-2.0/include -I/usr/include/gstreamer-0.10 -I/usr/include/libxml2  
GSTREAMER_PBUTILS_CONFIG = 
GSTREAMER_PBUTILS_LIBS = -pthread -lgstpbutils-0.10 -lgstreamer-0.10 -lgobject-2.0 -lgmodule-2.0 -lxml2 -lgthread-2.0 -lrt -lglib-2.0  
GSTREAMER_PLUGINS_BASE_CFLAGS = -pthread -I/usr/include/glib-2.0 -I/usr/lib/i386-linux-gnu/glib-2.0/include -I/usr/include/gstreamer-0.10 -I/usr/include/libxml2  
GSTREAMER_PLUGINS_BASE_CONFIG = 
GSTREAMER_PLUGINS_BASE_LIBS = -pthread -lgstreamer-0.10 -lgobject-2.0 -lgmodule-2.0 -lxml2 -lgthread-2.0 -lrt -lglib-2.0  
GST_INSPECT = 
GTK2_CFLAGS = -pthread -I/usr/include/gtk-2.0 -I/usr/lib/i386-linux-gnu/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/pango-1.0 -I/usr/include/gio-unix-2.0/ -I/usr/include/glib-2.0 -I/usr/lib/i386-linux-gnu/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng12   
GTK2_LIBS = -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgio-2.0 -lpangoft2-1.0 -lpangocairo-1.0 -lgdk_pixbuf-2.0 -lcairo -lpango-1.0 -lfreetype -lfontconfig -lgobject-2.0 -lgmodule-2.0 -lgthread-2.0 -lrt -lglib-2.0  
HAIKU_LIBS = 
HAXE = /usr/bin/haxe
HAXE_CLASSPATH = /usr/share/haxe/
HTTP_TESTSUITE = 
HWACCEL_CONFIG = none
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_INFO = 
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INTLLIBS = 
INTL_MACOSX_LIBS = 
JAVA = 
JPEG_CFLAGS = 
JPEG_CONFIG = 
JPEG_LIBS = -L/usr/lib/i386-linux-gnu -ljpeg 
KDE3_APPSDATADIR = 
KDE3_CFLAGS = 
KDE3_CONFIG = 
KDE3_CONFIGDIR = 
KDE3_LIBS = 
KDE3_PLUGINDIR = 
KDE3_SERVICESDIR = 
KDE4_APPSDATADIR = 
KDE4_CFLAGS = 
KDE4_CONFIG = 
KDE4_CONFIGDIR = 
KDE4_LIBS = 
KDE4_PLUGINDIR = 
KDE4_SERVICESDIR = 
KLASH_PLUGIN = 
LC_KEY = 0xcbc384f8
LD = /usr/bin/ld
LDFLAGS =  -Wl,--as-needed
LIBAVCODEC_IDENT = 54.25.100
LIBICONV = -liconv
LIBINTL = 
LIBOBJS = 
LIBS = -lrt -lX11 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBTOOL_DEPS = ./ltmain.sh
LIBVA_CFLAGS = 
LIBVA_CONFIG = 
LIBVA_GLX_CFLAGS = 
LIBVA_GLX_CONFIG = 
LIBVA_GLX_LIBS = 
LIBVA_LIBS = 
LIBVA_X11_CFLAGS = 
LIBVA_X11_CONFIG = 
LIBVA_X11_LIBS = 
LIPO = 
LN_S = ln -s
LTDL_CFLAGS = 
LTDL_CONFIG = 
LTDL_LIBS = -lltdl 
LTLIBICONV = -liconv
LTLIBINTL = 
LTLIBOBJS = 
MAINT = #
MAKEINFO = ${SHELL} /home/einar/Downloads/gnash/missing --run makeinfo
MAKESWF = /usr/bin/makeswf
MANIFEST_TOOL = :
MEDIA_CONFIG = gst ffmpeg
MING_CFLAGS = -I/usr/include
MING_CONFIG = /usr/bin/ming-config
MING_LIBS = -L/usr/lib -lz -lm -lungif -lpng -lming
MING_VERSION = 0.4.3
MING_VERSION_CODE = 00040300
MKDIR_P = /bin/mkdir -p
MOC3 = 
MOC4 = 
MSGFMT = /usr/bin/msgfmt
MSGFMT_015 = /usr/bin/msgfmt
MSGMERGE = /usr/bin/msgmerge
MTASC = /usr/bin/mtasc
MTASC_CLASSPATH = /usr/share/mtasc/std
MYSQL_CFLAGS = 
MYSQL_LIBS = 
NETCAT = /bin/nc
NM = /usr/bin/nm -B
NMEDIT = 
NPAPI_CFLAGS = -DXP_UNIX -I/usr/include/firefox  
NSPR_CFLAGS = 
NSPR_CONFIG = 
NSPR_LIBS = 
OBJDUMP = objdump
OBJEXT = o
OPENGL_CFLAGS = 
OPENGL_LIBS = 
OPENVG_CFLAGS = 
OPENVG_LIBS = 
OTOOL = 
OTOOL64 = 
PACKAGE = gnash
PACKAGE_BUGREPORT = 
PACKAGE_NAME = gnash
PACKAGE_STRING = gnash 0.8.11dev
PACKAGE_TARNAME = gnash
PACKAGE_URL = 
PACKAGE_VERSION = 0.8.11dev
PANGO_CFLAGS = -pthread -I/usr/include/pango-1.0 -I/usr/include/glib-2.0 -I/usr/lib/i386-linux-gnu/glib-2.0/include  
PANGO_LIBS = -lpangox-1.0 -lX11 -lpango-1.0 -lgobject-2.0 -lgmodule-2.0 -lgthread-2.0 -lrt -lglib-2.0  
PATH_SEPARATOR = :
PCH_FLAGS = -include all-includes.h -Winvalid-pch
PDFXMLTEX = 
PERL = /usr/bin/perl
PKG_CONFIG = /usr/bin/pkg-config
PNG_CFLAGS = -I/usr/include/libpng12  
PNG_CONFIG = 
PNG_LIBS = -lpng12  
POSUB = po
PTHREAD_CC = gcc
PTHREAD_CFLAGS = -pthread
PTHREAD_CXX = g++
PTHREAD_LIBS = -L/usr/lib/i386-linux-gnu -lpthread
PYGOBJECT_CODEGEN = 
PYGTK_CFLAGS = 
PYGTK_CODEGEN = 
PYGTK_DEFSDIR = 
PYGTK_LIBS = 
PYTHON = 
PYTHON_CFLAGS = 
PYTHON_EXEC_PREFIX = 
PYTHON_LIBS = 
PYTHON_PLATFORM = 
PYTHON_PREFIX = 
PYTHON_VERSION = 
QT3_CFLAGS = 
QT3_LIBS = 
QT4_CFLAGS = 
QT4_LIBS = 
RANLIB = ranlib
RED5_HOST = 
RENDERER_CONFIG =  agg
RENDERER_LIBS = 
RTMPY_HOST = 
SCROLLINSTALL = 
SCROLLKEEPER = 
SCROLLUPDATE = 
SDL_CFLAGS = -I/usr/include/SDL -D_GNU_SOURCE=1 -D_REENTRANT
SDL_CONFIG = /usr/bin/sdl-config
SDL_LIBS = -L/usr/lib -lSDL
SECURITY_LIST =  localconnection
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
SOLDIR = /tmp
SPEEXDSP_CFLAGS = 
SPEEXDSP_CONFIG = 
SPEEXDSP_LIBS = 
SPEEX_CFLAGS =  
SPEEX_CONFIG = 
SPEEX_LIBS = -lspeex  
SSH_CFLAGS = 
SSH_CONFIG = 
SSH_LIBS = 
SSL_CFLAGS = 
SSL_CONFIG = 
SSL_LIBS = 
STATISTICS_LIST =  cache
STRIP = strip
SUPPORTED_GUIS = gtk,dump
SWFC = /usr/local/bin/swfc
SWFDEC_TESTSUITE = 
SWFMILL = /usr/bin/swfmill
SWFMILL_VERSION = 00030100
TS_CFLAGS = 
TS_CONFIG = 
TS_LIBS = 
UIC4 = 
UNGIF_CFLAGS = 
UNGIF_CONFIG = 
UNGIF_LIBS = 
USE_NLS = yes
VERSION = 0.8.11dev
WGET = /usr/bin/wget
WINDRES = 
X11_CFLAGS = 
X11_LIBS = -L/usr/lib/i386-linux-gnu -lX11 -lXinerama -lXext -lSM -lICE
XFT_CFLAGS = 
XFT_CONFIG = 
XFT_LIBS = 
XGETTEXT = /usr/bin/xgettext
XGETTEXT_015 = /usr/bin/xgettext
XGETTEXT_EXTRA_OPTIONS = 
XSLTPROC = 
Z_CFLAGS = 
Z_CONFIG = 
Z_LIBS = -L/usr/lib/i386-linux-gnu -lz 
abs_builddir = $(shell cd $(top_builddir)/testsuite/misc-ming.all; pwd)
abs_srcdir = /home/einar/Downloads/gnash/testsuite/misc-ming.all
abs_top_builddir = $(shell cd $(top_builddir); pwd)
abs_top_srcdir = /home/einar/Downloads/gnash
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
curlconfig = /usr/bin/curl-config
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docbook_styles = 
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/einar/Downloads/gnash/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mconfig = 
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
pkgpyexecdir = 
pkgpythondir = 
prefix = /usr/local/gnash-dump
program_transform_name = s,x,x,
psdir = ${docdir}
pth_config = 
pthread_config = 
pyexecdir = 
pythonconfig = 
pythondir = 
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
AUTOMAKE_OPTIONS = dejagnu -Wno-portability
abs_mediadir = $(shell cd $(srcdir)/../media; pwd)
CLEANFILES = \
	gnash-dbg.log \
	site.exp.bak \
	testrun.sum \
	testrun.log

DISTCLEANFILES = XMLSocketTester
SUBDIRS = . loop loading displaylist_depths action_order register_class \
          init_action sound

EXTRA_DIST = \
	DragDropTest.as \
	DrawingApiTest.as \
	FlashVarsTest.as \
	GradientFillTest.as \
	LC-Receive.as \
	LC-Send.as \
	PrototypeEventListeners.as \
	SharedObjectTest.as \
	StageConfigTest.as \
	VarAndCharClashTest.as \
	XMLSocketTest.as \
	attachExtImported.as \
	attachImported.as \
	Version4Loader.as \
	Version5Loaded.as \
	case6.as \
	case7.as \
	easysound.as \
	empty.as \
	gotoFrame2Test.as \
	intervalTest.as \
	red5test.as \
	remoting.as \
	rtmpytest.as \
	widgets.as \
	remoting.php \
	FlashVarsTest.html \
	SharedObjectTestRunner.sh \
	SharedObjectTest.sol/sol1.sol \
	SharedObjectTest.sol/README \
	XMLSocketTester.sh

AM_CPPFLAGS = \
	-I$(top_srcdir)/libbase \
	-I$(top_srcdir)/libmedia \
	-I$(top_srcdir)/libsound \
	-I$(top_srcdir)/librender \
	-I$(top_srcdir)/libcore  \
	-I$(top_srcdir)/libcore/swf  \
	-I$(top_srcdir)/libcore/parser  \
	-I$(top_srcdir)/libcore/vm \
	-I$(top_srcdir)/libcore/asobj \
	-I$(top_srcdir)/testsuite \
	$(MING_CFLAGS) \
	$(OPENGL_CFLAGS) \
	$(BOOST_CFLAGS) \
	-DMING_VERSION_CODE=$(MING_VERSION_CODE) \
	$(NULL)

AM_LDFLAGS = \
	$(MING_LIBS) \
	$(OPENGL_LIBS) \
	$(GIF_LIBS) \
	$(top_builddir)/libbase/libgnashbase.la \
	$(top_builddir)/librender/libgnashrender.la \
	$(top_builddir)/libcore/libgnashcore.la \
	$(NULL)

check_SCRIPTS = GradientFillTestRunner BitmapDataDrawRunner \
	DeviceFontTestRunner EmbeddedFontTestRunner \
	TextSnapshotTest-Runner XMLSocketTester LCTestRunner \
	timeline_var_test-Runner place_object_testrunner \
	place_object_test2runner move_object_testrunner \
	place_and_remove_object_testrunner \
	place_and_remove_object_insane_testrunner \
	unload_movieclip_test1runner goto_frame_testrunner \
	consecutive_goto_frame_testrunner \
	multi_doactions_and_goto_frame_testrunner \
	gotoFrame2Test-Runner reverse_execute_PlaceObject2_test1runner \
	reverse_execute_PlaceObject2_test2runner \
	frame_label_testrunner path_format_testrunner \
	callFunction_testrunner duplicate_movie_clip_testrunner \
	duplicate_movie_clip_test2runner \
	event_handler_scope_testrunner matrix_testrunner \
	static_vs_dynamic1_testrunner static_vs_dynamic2_testrunner \
	getTimer_testrunner DepthLimitsTestrunner shape_testrunner \
	DefineEditTextVariableNameTest-Runner \
	DefineEditTextVariableNameTest2-Runner \
	runtime_vm_stack_testrunner new_child_in_unload_testrunner \
	instanceNameTestRunner $(NULL) $(am__append_6) $(am__append_7) \
	$(am__append_8) $(am__append_9) $(am__append_10) \
	$(am__append_11)

# This is so check.as finds revno.h
MAKESWF_FLAGS = -I$(top_builddir)

# TESTS = \
# 	DefineEditTextVariableNameTest-Runner 
check_LTLIBRARIES = libgnashmingutils.la 
libgnashmingutils_la_SOURCES = \
	ming_utils.h		\
	ming_utils.c

definebitsjpeg2_SOURCES = definebitsjpeg2.c
definebitsjpeg2_LDADD = $(MING_LIBS)
DefineTextTest_SOURCES = DefineTextTest.c
DefineTextTest_LDADD = libgnashmingutils.la
DefineTextTest_Runner_SOURCES = \
	DefineTextTest-Runner.cpp \
	$(NULL)

DefineTextTest_Runner_CXXFLAGS = \
	-DTGTDIR='"$(abs_builddir)"' \
	$(NULL)

DefineTextTest_Runner_LDADD = \
	$(top_builddir)/testsuite/libtestsuite.la \
	$(AM_LDFLAGS) \
	$(NULL)

DefineTextTest_Runner_DEPENDENCIES = \
	$(top_builddir)/testsuite/libtestsuite.la \
	DefineTextTest.swf      \
	$(NULL)

TextSnapshotTest_SOURCES = TextSnapshotTest.c
TextSnapshotTest_LDADD = libgnashmingutils.la
DeviceFontTest_SOURCES = DeviceFontTest.c
DeviceFontTest_LDADD = libgnashmingutils.la
EmbeddedFontTest_SOURCES = EmbeddedFontTest.c
EmbeddedFontTest_LDADD = libgnashmingutils.la
DefineEditTextTest_SOURCES = DefineEditTextTest.c
DefineEditTextTest_LDADD = libgnashmingutils.la
DefineEditTextTest_Runner_SOURCES = \
	DefineEditTextTest-Runner.cpp \
	$(NULL)

DefineEditTextTest_Runner_CXXFLAGS = \
	-DTGTDIR='"$(abs_builddir)"' \
	$(NULL)

DefineEditTextTest_Runner_LDADD = \
	$(top_builddir)/testsuite/libtestsuite.la \
	 $(AM_LDFLAGS) \
	$(NULL)

DefineEditTextTest_Runner_DEPENDENCIES = \
	$(top_builddir)/testsuite/libtestsuite.la \
	DefineEditTextTest.swf      \
	$(NULL)

spritehier_SOURCES = spritehier.c
spritehier_LDADD = $(MING_LIBS)
opcode_guard_test_SOURCES = \
	opcode_guard_test.c	\
	$(NULL)

opcode_guard_test_LDADD = libgnashmingutils.la
runtime_vm_stack_test_SOURCES = \
	runtime_vm_stack_test.c	\
	$(NULL)

runtime_vm_stack_test_LDADD = libgnashmingutils.la
new_child_in_unload_test_SOURCES = \
	new_child_in_unload_test.c	\
	$(NULL)

new_child_in_unload_test_LDADD = libgnashmingutils.la
PlaceObject2Test_SOURCES = \
	PlaceObject2Test.c	\
	$(NULL)

PlaceObject2Test_LDADD = libgnashmingutils.la
RemoveObject2Test_SOURCES = RemoveObject2Test.c
RemoveObject2Test_LDADD = libgnashmingutils.la
DefineEditTextVariableNameTest_SOURCES = \
	DefineEditTextVariableNameTest.c	\
	$(NULL)

DefineEditTextVariableNameTest_LDADD = libgnashmingutils.la
DefineEditTextVariableNameTest_Runner_SOURCES = \
	DefineEditTextVariableNameTest-Runner.cpp \
	$(NULL)

DefineEditTextVariableNameTest_Runner_LDADD = \
	$(top_builddir)/testsuite/libtestsuite.la \
	$(AM_LDFLAGS) \
	$(NULL)

DefineEditTextVariableNameTest_Runner_DEPENDENCIES = \
	$(top_builddir)/testsuite/libtestsuite.la \
	DefineEditTextVariableNameTest.swf      \
	$(NULL)

DefineEditTextVariableNameTest2_SOURCES = \
	DefineEditTextVariableNameTest2.c	\
	$(NULL)

DefineEditTextVariableNameTest2_LDADD = libgnashmingutils.la
timeline_var_test_SOURCES = \
	timeline_var_test.c	\
	$(NULL)

timeline_var_test_LDADD = libgnashmingutils.la
root_stop_test_SOURCES = root_stop_test.c
root_stop_test_LDADD = libgnashmingutils.la
root_stop_testrunner_SOURCES = \
	root_stop_testrunner.cpp \
	$(NULL)

root_stop_testrunner_LDADD = \
	$(top_builddir)/testsuite/libtestsuite.la \
	$(AM_LDFLAGS) \
	$(NULL)

root_stop_testrunner_CXXFLAGS = \
	-DSRCDIR='"$(srcdir)"' \
	-DTGTDIR='"$(abs_builddir)"' 

root_stop_testrunner_DEPENDENCIES = \
	$(top_builddir)/testsuite/libtestsuite.la \
	root_stop_test.swf      \
	$(NULL)

shape_test_SOURCES = shape_test.c
shape_test_LDADD = libgnashmingutils.la
morph_test1_SOURCES = morph_test1.c
morph_test1_LDADD = libgnashmingutils.la
morph_test1runner_SOURCES = \
	morph_test1runner.cpp \
	$(NULL)

morph_test1runner_LDADD = \
	$(top_builddir)/testsuite/libtestsuite.la \
	$(AM_LDFLAGS) \
	$(NULL)

morph_test1runner_CXXFLAGS = \
	-DSRCDIR='"$(srcdir)"' \
	-DTGTDIR='"$(abs_builddir)"' \
	$(NULL)

morph_test1runner_DEPENDENCIES = \
	morph_test1.swf \
	$(top_builddir)/testsuite/libtestsuite.la \
	$(NULL)

key_event_test_SOURCES = key_event_test.c
key_event_test_LDADD = libgnashmingutils.la
key_event_testrunner_SOURCES = \
	key_event_testrunner.cpp \
	$(NULL)

key_event_testrunner_LDADD = \
	$(top_builddir)/testsuite/libtestsuite.la \
	$(AM_LDFLAGS) \
	$(NULL)

key_event_testrunner_CXXFLAGS = \
	-DSRCDIR='"$(srcdir)"' \
	-DTGTDIR='"$(abs_builddir)"' \
	$(NULL)

key_event_testrunner_DEPENDENCIES = \
	key_event_test.swf \
	$(top_builddir)/testsuite/libtestsuite.la \
	$(NULL)

KeyEventOrder_SOURCES = KeyEventOrder.c
KeyEventOrder_LDADD = libgnashmingutils.la
KeyEventOrderRunner_SOURCES = \
	KeyEventOrderRunner.cpp \
	$(NULL)

KeyEventOrderRunner_LDADD = \
	$(top_builddir)/testsuite/libtestsuite.la \
	$(AM_LDFLAGS) \
	$(NULL)

KeyEventOrderRunner_CXXFLAGS = \
	-DSRCDIR='"$(srcdir)"' \
	-DTGTDIR='"$(abs_builddir)"' \
	$(NULL)

KeyEventOrderRunner_DEPENDENCIES = \
	KeyEventOrder.swf \
	$(top_builddir)/testsuite/libtestsuite.la \
	$(NULL)

place_object_test_SOURCES = place_object_test.c	
place_object_test_LDADD = libgnashmingutils.la
place_object_test2_SOURCES = place_object_test2.c	
place_object_test2_LDADD = libgnashmingutils.la
move_object_test_SOURCES = \
	move_object_test.c	\
	$(NULL)

move_object_test_LDADD = libgnashmingutils.la
place_and_remove_object_test_SOURCES = \
	place_and_remove_object_test.c	\
	$(NULL)

place_and_remove_object_test_LDADD = libgnashmingutils.la
place_and_remove_object_insane_test_SOURCES = \
	place_and_remove_object_insane_test.c	\
	$(NULL)

place_and_remove_object_insane_test_LDADD = libgnashmingutils.la
unload_movieclip_test1_SOURCES = \
	unload_movieclip_test1.c	\
	$(NULL)

unload_movieclip_test1_LDADD = libgnashmingutils.la
DepthLimitsTest_SOURCES = DepthLimitsTest.c
DepthLimitsTest_LDADD = libgnashmingutils.la
replace_shapes1test_SOURCES = replace_shapes1test.c	
replace_shapes1test_LDADD = libgnashmingutils.la
replace_shapes1test_runner_SOURCES = \
	replace_shapes1test_runner.cpp \
	$(NULL)

replace_shapes1test_runner_CXXFLAGS = \
	-DTGTDIR='"$(abs_builddir)"' \
	$(NULL)

replace_shapes1test_runner_LDADD = \
	$(top_builddir)/testsuite/libtestsuite.la \
	$(AM_LDFLAGS) \
	$(NULL)

replace_shapes1test_runner_DEPENDENCIES = \
	$(top_builddir)/testsuite/libtestsuite.la \
	replace_shapes1test.swf      \
	$(NULL)

replace_sprites1test_SOURCES = replace_sprites1test.c	
replace_sprites1test_LDADD = libgnashmingutils.la
replace_sprites1test_runner_SOURCES = \
	replace_sprites1test_runner.cpp \
	$(NULL)

replace_sprites1test_runner_CXXFLAGS = \
	-DTGTDIR='"$(abs_builddir)"' \
	$(NULL)

replace_sprites1test_runner_LDADD = \
	$(top_builddir)/testsuite/libtestsuite.la \
	$(AM_LDFLAGS) \
	$(NULL)

replace_sprites1test_runner_DEPENDENCIES = \
	$(top_builddir)/testsuite/libtestsuite.la \
	replace_sprites1test.swf      \
	$(NULL)

replace_buttons1test_SOURCES = replace_buttons1test.c	
replace_buttons1test_LDADD = libgnashmingutils.la
replace_buttons1test_runner_SOURCES = \
	replace_buttons1test_runner.cpp \
	$(NULL)

replace_buttons1test_runner_CXXFLAGS = \
	-DTGTDIR='"$(abs_builddir)"' \
	$(NULL)

replace_buttons1test_runner_LDADD = \
	$(top_builddir)/testsuite/libtestsuite.la \
	$(AM_LDFLAGS) \
	$(NULL)

replace_buttons1test_runner_DEPENDENCIES = \
	$(top_builddir)/testsuite/libtestsuite.la \
	replace_buttons1test.swf      \
	$(NULL)

masks_test_SOURCES = \
	masks_test.c	\
	$(NULL)

masks_test_LDADD = libgnashmingutils.la
masks_testrunner_SOURCES = \
	masks_testrunner.cpp \
	$(NULL)

masks_testrunner_CXXFLAGS = \
	-DTGTDIR='"$(abs_builddir)"' \
	$(NULL)

masks_testrunner_LDADD = \
	$(top_builddir)/testsuite/libtestsuite.la \
	$(AM_LDFLAGS) \
	$(NULL)

masks_testrunner_DEPENDENCIES = \
	$(top_builddir)/testsuite/libtestsuite.la \
	masks_test.swf      \
	$(NULL)

masks_test2_SOURCES = \
	masks_test2.c	\
	$(NULL)

masks_test2_LDADD = libgnashmingutils.la
masks_test2runner_SOURCES = \
	masks_test2runner.cpp \
	$(NULL)

masks_test2runner_CXXFLAGS = \
	-DTGTDIR='"$(abs_builddir)"' \
	$(NULL)

masks_test2runner_LDADD = \
	$(top_builddir)/testsuite/libtestsuite.la \
	$(AM_LDFLAGS) \
	$(NULL)

masks_test2runner_DEPENDENCIES = \
	$(top_builddir)/testsuite/libtestsuite.la \
	masks_test2.swf      \
	$(NULL)

matrix_test_SOURCES = \
	matrix_test.c	\
	$(NULL)

matrix_test_LDADD = libgnashmingutils.la
get_frame_number_test_SOURCES = \
	get_frame_number_test.c	\
	$(NULL)

get_frame_number_test_LDADD = libgnashmingutils.la
frame_label_test_SOURCES = \
	frame_label_test.c	\
	$(NULL)

frame_label_test_LDADD = libgnashmingutils.la
path_format_test_SOURCES = \
	path_format_test.c	\
	$(NULL)

path_format_test_LDADD = libgnashmingutils.la
callFunction_test_SOURCES = \
	callFunction_test.c	\
	$(NULL)

callFunction_test_LDADD = libgnashmingutils.la
duplicate_movie_clip_test_SOURCES = \
	duplicate_movie_clip_test.c	\
	$(NULL)

duplicate_movie_clip_test_LDADD = libgnashmingutils.la
duplicate_movie_clip_test2_SOURCES = \
	duplicate_movie_clip_test2.c	\
	$(NULL)

duplicate_movie_clip_test2_LDADD = libgnashmingutils.la
event_handler_scope_test_SOURCES = \
	event_handler_scope_test.c	\
	$(NULL)

event_handler_scope_test_LDADD = libgnashmingutils.la
attachMovieTest_SOURCES = \
	attachMovieTest.c	\
	$(NULL)

attachMovieTest_LDADD = libgnashmingutils.la
attachMovieTestRunner_SOURCES = \
	attachMovieTestRunner.cpp \
	$(NULL)

attachMovieTestRunner_LDADD = \
	$(top_builddir)/testsuite/libtestsuite.la \
	$(AM_LDFLAGS) \
	$(NULL)

attachMovieTestRunner_CXXFLAGS = \
	-DSRCDIR='"$(srcdir)"' \
	-DTGTDIR='"$(abs_builddir)"' \
	$(NULL)

attachMovieTestRunner_DEPENDENCIES = \
	attachMovieTest.swf \
	$(top_builddir)/testsuite/libtestsuite.la \
	$(NULL)

attachMovieLoopingTest_SOURCES = \
	attachMovieLoopingTest.c	\
	$(NULL)

attachMovieLoopingTest_LDADD = libgnashmingutils.la
attachMovieLoopingTestRunner_SOURCES = \
	attachMovieLoopingTestRunner.cpp \
	$(NULL)

attachMovieLoopingTestRunner_LDADD = \
	$(top_builddir)/testsuite/libtestsuite.la \
	$(AM_LDFLAGS) \
	$(NULL)

attachMovieLoopingTestRunner_CXXFLAGS = \
	-DSRCDIR='"$(srcdir)"' \
	-DTGTDIR='"$(abs_builddir)"' \
	$(NULL)

attachMovieLoopingTestRunner_DEPENDENCIES = \
	attachMovieLoopingTest.swf \
	$(top_builddir)/testsuite/libtestsuite.la \
	$(NULL)

goto_frame_test_SOURCES = \
	goto_frame_test.c	\
	$(NULL)

goto_frame_test_LDADD = libgnashmingutils.la
consecutive_goto_frame_test_SOURCES = \
	consecutive_goto_frame_test.c	\
	$(NULL)

consecutive_goto_frame_test_LDADD = libgnashmingutils.la
multi_doactions_and_goto_frame_test_SOURCES = \
	multi_doactions_and_goto_frame_test.c	\
	$(NULL)

multi_doactions_and_goto_frame_test_LDADD = libgnashmingutils.la
reverse_execute_PlaceObject2_test1_SOURCES = \
	reverse_execute_PlaceObject2_test1.c	\
	$(NULL)

reverse_execute_PlaceObject2_test1_LDADD = libgnashmingutils.la
reverse_execute_PlaceObject2_test2_SOURCES = \
	reverse_execute_PlaceObject2_test2.c	\
	$(NULL)

reverse_execute_PlaceObject2_test2_LDADD = libgnashmingutils.la
BitmapDataTest_SOURCES = \
	BitmapDataTest.c \
	$(NULL)

BitmapDataTest_CFLAGS = \
	-DMEDIADIR='"$(abs_mediadir)"' \
	$(NULL)

BitmapDataTest_LDADD = libgnashmingutils.la
BitmapDataTestRunner_SOURCES = \
	BitmapDataTestRunner.cpp \
	$(NULL)

BitmapDataTestRunner_CXXFLAGS = \
	-DSRCDIR='"$(srcdir)"' \
	-DTGTDIR='"$(abs_builddir)"' \
	$(NULL)

BitmapDataTestRunner_LDADD = \
	$(top_builddir)/testsuite/libtestsuite.la \
	$(AM_LDFLAGS) \
	$(NULL)

BitmapDataTestRunner_DEPENDENCIES = \
	$(top_builddir)/testsuite/libtestsuite.la \
	BitmapDataTest.swf	\
	$(NULL)

BitmapDataDraw_SOURCES = \
	BitmapDataDraw.c \
	$(NULL)

BitmapDataDraw_CFLAGS = \
	-DMEDIADIR='"$(abs_mediadir)"' \
	$(NULL)

BitmapDataDraw_LDADD = libgnashmingutils.la
BeginBitmapFill_SOURCES = \
	BeginBitmapFill.c \
	$(NULL)

BeginBitmapFill_CFLAGS = \
	-DMEDIADIR='"$(abs_mediadir)"' \
	$(NULL)

BeginBitmapFill_LDADD = libgnashmingutils.la
BeginBitmapFillRunner_SOURCES = \
	BeginBitmapFillRunner.cpp \
	$(NULL)

BeginBitmapFillRunner_CXXFLAGS = \
	-DSRCDIR='"$(srcdir)"' \
	-DTGTDIR='"$(abs_builddir)"' \
	$(NULL)

BeginBitmapFillRunner_LDADD = \
	$(top_builddir)/testsuite/libtestsuite.la \
	$(AM_LDFLAGS) \
	$(NULL)

BeginBitmapFillRunner_DEPENDENCIES = \
	$(top_builddir)/testsuite/libtestsuite.la \
	BeginBitmapFill.swf	\
	$(NULL)

BitmapSmoothingTest_SOURCES = \
	BitmapSmoothingTest.c \
	$(NULL)

BitmapSmoothingTest_CFLAGS = \
	-DMEDIADIR='"$(abs_mediadir)"' \
	$(NULL)

BitmapSmoothingTest_LDADD = libgnashmingutils.la
RollOverOutTest_SOURCES = \
	RollOverOutTest.c	\
	$(NULL)

RollOverOutTest_LDADD = libgnashmingutils.la
RollOverOutTest_Runner_SOURCES = \
	RollOverOutTest-Runner.cpp \
	$(NULL)

RollOverOutTest_Runner_LDADD = \
	$(top_builddir)/testsuite/libtestsuite.la \
	$(AM_LDFLAGS) \
	$(NULL)

RollOverOutTest_Runner_CXXFLAGS = \
	-DSRCDIR='"$(srcdir)"' \
	-DTGTDIR='"$(abs_builddir)"' 

RollOverOutTest_Runner_DEPENDENCIES = \
	$(top_builddir)/testsuite/libtestsuite.la \
	RollOverOutTest.swf	\
	$(NULL)

ButtonEventsTest_SOURCES = \
	ButtonEventsTest.c	\
	$(NULL)

ButtonEventsTest_LDADD = libgnashmingutils.la
ButtonEventsTest_Runner_SOURCES = \
	ButtonEventsTest-Runner.cpp \
	$(NULL)

ButtonEventsTest_Runner_LDADD = \
	$(top_builddir)/testsuite/libtestsuite.la \
	$(AM_LDFLAGS) \
	$(NULL)

ButtonEventsTest_Runner_DEPENDENCIES = \
	$(top_builddir)/testsuite/libtestsuite.la \
	ButtonEventsTest.swf	\
	$(NULL)

ButtonEventsTest_Runner_CXXFLAGS = \
	-DTGTDIR='"$(abs_builddir)"' \
	$(NULL)

SpriteButtonEventsTest_SOURCES = \
	SpriteButtonEventsTest.c	\
	$(NULL)

SpriteButtonEventsTest_LDADD = libgnashmingutils.la
SpriteButtonEventsTest_Runner_SOURCES = \
	SpriteButtonEventsTest-Runner.cpp \
	$(NULL)

SpriteButtonEventsTest_Runner_LDADD = \
	$(top_builddir)/testsuite/libtestsuite.la \
	$(AM_LDFLAGS) \
	$(NULL)

SpriteButtonEventsTest_Runner_DEPENDENCIES = \
	$(top_builddir)/testsuite/libtestsuite.la \
	SpriteButtonEventsTest.swf	\
	$(NULL)

SpriteButtonEventsTest_Runner_CXXFLAGS = \
	-DTGTDIR='"$(abs_builddir)"' \
	$(NULL)

ResolveEventsTest_SOURCES = \
	ResolveEventsTest.c	\
	$(NULL)

ResolveEventsTest_LDADD = libgnashmingutils.la
ResolveEventsTest_Runner_SOURCES = \
	ResolveEventsTest-Runner.cpp \
	$(NULL)

ResolveEventsTest_Runner_LDADD = \
	$(top_builddir)/testsuite/libtestsuite.la \
	$(AM_LDFLAGS) \
	$(NULL)

ResolveEventsTest_Runner_DEPENDENCIES = \
	$(top_builddir)/testsuite/libtestsuite.la \
	ResolveEventsTest.swf	\
	$(NULL)

ResolveEventsTest_Runner_CXXFLAGS = \
	-DTGTDIR='"$(abs_builddir)"' \
	$(NULL)

ButtonPropertiesTest_SOURCES = \
	ButtonPropertiesTest.c \
	$(NULL)

ButtonPropertiesTest_LDADD = libgnashmingutils.la
ButtonPropertiesTestRunner_SOURCES = \
	ButtonPropertiesTestRunner.cpp \
	$(NULL)

ButtonPropertiesTestRunner_LDADD = \
	$(top_builddir)/testsuite/libtestsuite.la \
	$(AM_LDFLAGS) \
	$(NULL)

ButtonPropertiesTestRunner_DEPENDENCIES = \
	$(top_builddir)/testsuite/libtestsuite.la \
	ButtonPropertiesTest.swf	\
	$(NULL)

ButtonPropertiesTestRunner_CXXFLAGS = \
	-DTGTDIR='"$(abs_builddir)"' \
	$(NULL)

intervalTestRunner_SOURCES = \
	intervalTestRunner.cpp \
	$(NULL)

intervalTestRunner_CXXFLAGS = \
	-DSRCDIR='"$(srcdir)"' \
	-DTGTDIR='"$(abs_builddir)"' \
	$(NULL)

intervalTestRunner_LDADD = \
	$(top_builddir)/testsuite/libtestsuite.la \
	$(AM_LDFLAGS) \
	$(NULL)

intervalTestRunner_DEPENDENCIES = \
	$(top_builddir)/testsuite/libtestsuite.la \
	intervalTest.swf	\
	$(NULL)

DrawingApiTestRunner_SOURCES = \
	DrawingApiTestRunner.cpp \
	$(NULL)

DrawingApiTestRunner_CXXFLAGS = \
	-DSRCDIR='"$(srcdir)"' \
	-DTGTDIR='"$(abs_builddir)"' \
	$(NULL)

DrawingApiTestRunner_LDADD = \
	$(top_builddir)/testsuite/libtestsuite.la \
	$(AM_LDFLAGS) \
	$(NULL)

DrawingApiTestRunner_DEPENDENCIES = \
	$(top_builddir)/testsuite/libtestsuite.la \
	DrawingApiTest.swf	\
	$(NULL)

PrototypeEventListenersTestRunner_SOURCES = \
	PrototypeEventListenersTestRunner.cpp \
	$(NULL)

PrototypeEventListenersTestRunner_CXXFLAGS = \
	-DSRCDIR='"$(srcdir)"' \
	-DTGTDIR='"$(abs_builddir)"' \
	$(NULL)

PrototypeEventListenersTestRunner_LDADD = \
	$(top_builddir)/testsuite/libtestsuite.la \
	$(AM_LDFLAGS) \
	$(NULL)

PrototypeEventListenersTestRunner_DEPENDENCIES = \
	$(top_builddir)/testsuite/libtestsuite.la \
	PrototypeEventListeners.swf	\
	$(NULL)

DragDropTestRunner_SOURCES = \
	DragDropTestRunner.cpp \
	$(NULL)

DragDropTestRunner_CXXFLAGS = \
	-DSRCDIR='"$(srcdir)"' \
	-DTGTDIR='"$(abs_builddir)"' \
	$(NULL)

DragDropTestRunner_LDADD = \
	$(top_builddir)/testsuite/libtestsuite.la \
	$(AM_LDFLAGS) \
	$(NULL)

DragDropTestRunner_DEPENDENCIES = \
	$(top_builddir)/testsuite/libtestsuite.la \
	DragDropTest.swf	\
	$(NULL)

static_vs_dynamic1_SOURCES = \
	static_vs_dynamic1.c \
	$(NULL)

static_vs_dynamic1_LDADD = libgnashmingutils.la
static_vs_dynamic2_SOURCES = \
	static_vs_dynamic2.c \
	$(NULL)

static_vs_dynamic2_LDADD = libgnashmingutils.la
getTimer_test_SOURCES = \
	getTimer_test.c \
	$(NULL)

getTimer_test_LDADD = libgnashmingutils.la
NetStream_SquareTest_SOURCES = \
	NetStream-SquareTest.c \
	$(NULL)

NetStream_SquareTest_LDADD = libgnashmingutils.la
NetStream_SquareTestRunner_SOURCES = \
	NetStream-SquareTestRunner.cpp \
	$(NULL)

NetStream_SquareTestRunner_CXXFLAGS = \
	-DSRCDIR='"$(srcdir)"' \
	-DTGTDIR='"$(abs_builddir)"' \
	-DMEDIADIR='"$(abs_mediadir)"' \
	$(NULL)

NetStream_SquareTestRunner_LDADD = \
	$(top_builddir)/testsuite/libtestsuite.la \
	$(AM_LDFLAGS) \
	$(NULL)

NetStream_SquareTestRunner_DEPENDENCIES = \
	$(top_builddir)/testsuite/libtestsuite.la \
	NetStream-SquareTest.swf	\
	$(NULL)

Video_EmbedSquareTest_SOURCES = \
	Video-EmbedSquareTest.c \
	$(NULL)

Video_EmbedSquareTest_LDADD = libgnashmingutils.la
Video_EmbedSquareTestRunner_SOURCES = \
	Video-EmbedSquareTestRunner.cpp \
	$(NULL)

Video_EmbedSquareTestRunner_CXXFLAGS = \
	-DSRCDIR='"$(srcdir)"' \
	-DTGTDIR='"$(abs_builddir)"' \
	$(NULL)

Video_EmbedSquareTestRunner_LDADD = \
	$(top_builddir)/testsuite/libtestsuite.la \
	$(AM_LDFLAGS) \
	$(NULL)

Video_EmbedSquareTestRunner_DEPENDENCIES = \
	$(top_builddir)/testsuite/libtestsuite.la \
	Video-EmbedSquareTest.swf	\
	$(NULL)

instanceNameTest_SOURCES = \
	instanceNameTest.c	\
	$(NULL)

instanceNameTest_LDADD = libgnashmingutils.la
Dejagnu_SOURCES = \
	Dejagnu.c	\
	$(NULL)

Dejagnu_LDADD = libgnashmingutils.la
TEST_DRIVERS = ../simple.exp
TEST_CASES = GradientFillTestRunner BeginBitmapFillRunner \
	BitmapDataTestRunner BitmapDataDrawRunner DeviceFontTestRunner \
	EmbeddedFontTestRunner DefineEditTextVariableNameTest-Runner \
	DefineEditTextVariableNameTest2-Runner DefineTextTest-Runner \
	DefineEditTextTest-Runner RollOverOutTest-Runner \
	SpriteButtonEventsTest-Runner ResolveEventsTest-Runner \
	timeline_var_test-Runner root_stop_testrunner \
	place_object_testrunner place_object_test2runner \
	move_object_testrunner place_and_remove_object_testrunner \
	place_and_remove_object_insane_testrunner \
	unload_movieclip_test1runner attachMovieTestRunner \
	attachMovieLoopingTestRunner goto_frame_testrunner \
	consecutive_goto_frame_testrunner \
	multi_doactions_and_goto_frame_testrunner XMLSocketTester \
	LCTestRunner DrawingApiTestRunner TextSnapshotTest-Runner \
	reverse_execute_PlaceObject2_test1runner \
	reverse_execute_PlaceObject2_test2runner DepthLimitsTestrunner \
	matrix_testrunner frame_label_testrunner \
	path_format_testrunner callFunction_testrunner \
	duplicate_movie_clip_testrunner \
	duplicate_movie_clip_test2runner \
	event_handler_scope_testrunner masks_testrunner \
	masks_test2runner key_event_testrunner \
	static_vs_dynamic1_testrunner static_vs_dynamic2_testrunner \
	getTimer_testrunner Video-EmbedSquareTestRunner \
	NetStream-SquareTestRunner shape_testrunner morph_test1runner \
	runtime_vm_stack_testrunner instanceNameTestRunner $(NULL) \
	$(am__append_13) $(am__append_14) $(am__append_15) \
	$(am__append_16) $(am__append_17) $(am__append_18) \
	$(am__append_19) $(am__append_20)
TEST_ENV = GNASH_GC_TRIGGER_THRESHOLD=0 GNASHRC=../gnashrc \
	GST_INSTALL_PLUGINS_HELPER=$(top_srcdir)/testsuite/gst_install_plugins_helper.sh
all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .cpp .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu testsuite/misc-ming.all/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu testsuite/misc-ming.all/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkLTLIBRARIES:
	-test -z "$(check_LTLIBRARIES)" || rm -f $(check_LTLIBRARIES)
	@list='$(check_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libgnashmingutils.la: $(libgnashmingutils_la_OBJECTS) $(libgnashmingutils_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(LINK)  $(libgnashmingutils_la_OBJECTS) $(libgnashmingutils_la_LIBADD) $(LIBS)

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
BeginBitmapFill$(EXEEXT): $(BeginBitmapFill_OBJECTS) $(BeginBitmapFill_DEPENDENCIES) 
	@rm -f BeginBitmapFill$(EXEEXT)
	$(AM_V_CCLD)$(BeginBitmapFill_LINK) $(BeginBitmapFill_OBJECTS) $(BeginBitmapFill_LDADD) $(LIBS)
BeginBitmapFillRunner$(EXEEXT): $(BeginBitmapFillRunner_OBJECTS) $(BeginBitmapFillRunner_DEPENDENCIES) 
	@rm -f BeginBitmapFillRunner$(EXEEXT)
	$(AM_V_CXXLD)$(BeginBitmapFillRunner_LINK) $(BeginBitmapFillRunner_OBJECTS) $(BeginBitmapFillRunner_LDADD) $(LIBS)
BitmapDataDraw$(EXEEXT): $(BitmapDataDraw_OBJECTS) $(BitmapDataDraw_DEPENDENCIES) 
	@rm -f BitmapDataDraw$(EXEEXT)
	$(AM_V_CCLD)$(BitmapDataDraw_LINK) $(BitmapDataDraw_OBJECTS) $(BitmapDataDraw_LDADD) $(LIBS)
BitmapDataTest$(EXEEXT): $(BitmapDataTest_OBJECTS) $(BitmapDataTest_DEPENDENCIES) 
	@rm -f BitmapDataTest$(EXEEXT)
	$(AM_V_CCLD)$(BitmapDataTest_LINK) $(BitmapDataTest_OBJECTS) $(BitmapDataTest_LDADD) $(LIBS)
BitmapDataTestRunner$(EXEEXT): $(BitmapDataTestRunner_OBJECTS) $(BitmapDataTestRunner_DEPENDENCIES) 
	@rm -f BitmapDataTestRunner$(EXEEXT)
	$(AM_V_CXXLD)$(BitmapDataTestRunner_LINK) $(BitmapDataTestRunner_OBJECTS) $(BitmapDataTestRunner_LDADD) $(LIBS)
BitmapSmoothingTest$(EXEEXT): $(BitmapSmoothingTest_OBJECTS) $(BitmapSmoothingTest_DEPENDENCIES) 
	@rm -f BitmapSmoothingTest$(EXEEXT)
	$(AM_V_CCLD)$(BitmapSmoothingTest_LINK) $(BitmapSmoothingTest_OBJECTS) $(BitmapSmoothingTest_LDADD) $(LIBS)
ButtonEventsTest$(EXEEXT): $(ButtonEventsTest_OBJECTS) $(ButtonEventsTest_DEPENDENCIES) 
	@rm -f ButtonEventsTest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ButtonEventsTest_OBJECTS) $(ButtonEventsTest_LDADD) $(LIBS)
ButtonEventsTest-Runner$(EXEEXT): $(ButtonEventsTest_Runner_OBJECTS) $(ButtonEventsTest_Runner_DEPENDENCIES) 
	@rm -f ButtonEventsTest-Runner$(EXEEXT)
	$(AM_V_CXXLD)$(ButtonEventsTest_Runner_LINK) $(ButtonEventsTest_Runner_OBJECTS) $(ButtonEventsTest_Runner_LDADD) $(LIBS)
ButtonPropertiesTest$(EXEEXT): $(ButtonPropertiesTest_OBJECTS) $(ButtonPropertiesTest_DEPENDENCIES) 
	@rm -f ButtonPropertiesTest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ButtonPropertiesTest_OBJECTS) $(ButtonPropertiesTest_LDADD) $(LIBS)
ButtonPropertiesTestRunner$(EXEEXT): $(ButtonPropertiesTestRunner_OBJECTS) $(ButtonPropertiesTestRunner_DEPENDENCIES) 
	@rm -f ButtonPropertiesTestRunner$(EXEEXT)
	$(AM_V_CXXLD)$(ButtonPropertiesTestRunner_LINK) $(ButtonPropertiesTestRunner_OBJECTS) $(ButtonPropertiesTestRunner_LDADD) $(LIBS)
DefineEditTextTest$(EXEEXT): $(DefineEditTextTest_OBJECTS) $(DefineEditTextTest_DEPENDENCIES) 
	@rm -f DefineEditTextTest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(DefineEditTextTest_OBJECTS) $(DefineEditTextTest_LDADD) $(LIBS)
DefineEditTextTest-Runner$(EXEEXT): $(DefineEditTextTest_Runner_OBJECTS) $(DefineEditTextTest_Runner_DEPENDENCIES) 
	@rm -f DefineEditTextTest-Runner$(EXEEXT)
	$(AM_V_CXXLD)$(DefineEditTextTest_Runner_LINK) $(DefineEditTextTest_Runner_OBJECTS) $(DefineEditTextTest_Runner_LDADD) $(LIBS)
DefineEditTextVariableNameTest$(EXEEXT): $(DefineEditTextVariableNameTest_OBJECTS) $(DefineEditTextVariableNameTest_DEPENDENCIES) 
	@rm -f DefineEditTextVariableNameTest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(DefineEditTextVariableNameTest_OBJECTS) $(DefineEditTextVariableNameTest_LDADD) $(LIBS)
DefineEditTextVariableNameTest-Runner$(EXEEXT): $(DefineEditTextVariableNameTest_Runner_OBJECTS) $(DefineEditTextVariableNameTest_Runner_DEPENDENCIES) 
	@rm -f DefineEditTextVariableNameTest-Runner$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(DefineEditTextVariableNameTest_Runner_OBJECTS) $(DefineEditTextVariableNameTest_Runner_LDADD) $(LIBS)
DefineEditTextVariableNameTest2$(EXEEXT): $(DefineEditTextVariableNameTest2_OBJECTS) $(DefineEditTextVariableNameTest2_DEPENDENCIES) 
	@rm -f DefineEditTextVariableNameTest2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(DefineEditTextVariableNameTest2_OBJECTS) $(DefineEditTextVariableNameTest2_LDADD) $(LIBS)
DefineTextTest$(EXEEXT): $(DefineTextTest_OBJECTS) $(DefineTextTest_DEPENDENCIES) 
	@rm -f DefineTextTest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(DefineTextTest_OBJECTS) $(DefineTextTest_LDADD) $(LIBS)
DefineTextTest-Runner$(EXEEXT): $(DefineTextTest_Runner_OBJECTS) $(DefineTextTest_Runner_DEPENDENCIES) 
	@rm -f DefineTextTest-Runner$(EXEEXT)
	$(AM_V_CXXLD)$(DefineTextTest_Runner_LINK) $(DefineTextTest_Runner_OBJECTS) $(DefineTextTest_Runner_LDADD) $(LIBS)
Dejagnu$(EXEEXT): $(Dejagnu_OBJECTS) $(Dejagnu_DEPENDENCIES) 
	@rm -f Dejagnu$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(Dejagnu_OBJECTS) $(Dejagnu_LDADD) $(LIBS)
DepthLimitsTest$(EXEEXT): $(DepthLimitsTest_OBJECTS) $(DepthLimitsTest_DEPENDENCIES) 
	@rm -f DepthLimitsTest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(DepthLimitsTest_OBJECTS) $(DepthLimitsTest_LDADD) $(LIBS)
DeviceFontTest$(EXEEXT): $(DeviceFontTest_OBJECTS) $(DeviceFontTest_DEPENDENCIES) 
	@rm -f DeviceFontTest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(DeviceFontTest_OBJECTS) $(DeviceFontTest_LDADD) $(LIBS)
DragDropTestRunner$(EXEEXT): $(DragDropTestRunner_OBJECTS) $(DragDropTestRunner_DEPENDENCIES) 
	@rm -f DragDropTestRunner$(EXEEXT)
	$(AM_V_CXXLD)$(DragDropTestRunner_LINK) $(DragDropTestRunner_OBJECTS) $(DragDropTestRunner_LDADD) $(LIBS)
DrawingApiTestRunner$(EXEEXT): $(DrawingApiTestRunner_OBJECTS) $(DrawingApiTestRunner_DEPENDENCIES) 
	@rm -f DrawingApiTestRunner$(EXEEXT)
	$(AM_V_CXXLD)$(DrawingApiTestRunner_LINK) $(DrawingApiTestRunner_OBJECTS) $(DrawingApiTestRunner_LDADD) $(LIBS)
EmbeddedFontTest$(EXEEXT): $(EmbeddedFontTest_OBJECTS) $(EmbeddedFontTest_DEPENDENCIES) 
	@rm -f EmbeddedFontTest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(EmbeddedFontTest_OBJECTS) $(EmbeddedFontTest_LDADD) $(LIBS)
KeyEventOrder$(EXEEXT): $(KeyEventOrder_OBJECTS) $(KeyEventOrder_DEPENDENCIES) 
	@rm -f KeyEventOrder$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(KeyEventOrder_OBJECTS) $(KeyEventOrder_LDADD) $(LIBS)
KeyEventOrderRunner$(EXEEXT): $(KeyEventOrderRunner_OBJECTS) $(KeyEventOrderRunner_DEPENDENCIES) 
	@rm -f KeyEventOrderRunner$(EXEEXT)
	$(AM_V_CXXLD)$(KeyEventOrderRunner_LINK) $(KeyEventOrderRunner_OBJECTS) $(KeyEventOrderRunner_LDADD) $(LIBS)
NetStream-SquareTest$(EXEEXT): $(NetStream_SquareTest_OBJECTS) $(NetStream_SquareTest_DEPENDENCIES) 
	@rm -f NetStream-SquareTest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(NetStream_SquareTest_OBJECTS) $(NetStream_SquareTest_LDADD) $(LIBS)
NetStream-SquareTestRunner$(EXEEXT): $(NetStream_SquareTestRunner_OBJECTS) $(NetStream_SquareTestRunner_DEPENDENCIES) 
	@rm -f NetStream-SquareTestRunner$(EXEEXT)
	$(AM_V_CXXLD)$(NetStream_SquareTestRunner_LINK) $(NetStream_SquareTestRunner_OBJECTS) $(NetStream_SquareTestRunner_LDADD) $(LIBS)
PlaceObject2Test$(EXEEXT): $(PlaceObject2Test_OBJECTS) $(PlaceObject2Test_DEPENDENCIES) 
	@rm -f PlaceObject2Test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(PlaceObject2Test_OBJECTS) $(PlaceObject2Test_LDADD) $(LIBS)
PrototypeEventListenersTestRunner$(EXEEXT): $(PrototypeEventListenersTestRunner_OBJECTS) $(PrototypeEventListenersTestRunner_DEPENDENCIES) 
	@rm -f PrototypeEventListenersTestRunner$(EXEEXT)
	$(AM_V_CXXLD)$(PrototypeEventListenersTestRunner_LINK) $(PrototypeEventListenersTestRunner_OBJECTS) $(PrototypeEventListenersTestRunner_LDADD) $(LIBS)
RemoveObject2Test$(EXEEXT): $(RemoveObject2Test_OBJECTS) $(RemoveObject2Test_DEPENDENCIES) 
	@rm -f RemoveObject2Test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(RemoveObject2Test_OBJECTS) $(RemoveObject2Test_LDADD) $(LIBS)
ResolveEventsTest$(EXEEXT): $(ResolveEventsTest_OBJECTS) $(ResolveEventsTest_DEPENDENCIES) 
	@rm -f ResolveEventsTest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ResolveEventsTest_OBJECTS) $(ResolveEventsTest_LDADD) $(LIBS)
ResolveEventsTest-Runner$(EXEEXT): $(ResolveEventsTest_Runner_OBJECTS) $(ResolveEventsTest_Runner_DEPENDENCIES) 
	@rm -f ResolveEventsTest-Runner$(EXEEXT)
	$(AM_V_CXXLD)$(ResolveEventsTest_Runner_LINK) $(ResolveEventsTest_Runner_OBJECTS) $(ResolveEventsTest_Runner_LDADD) $(LIBS)
RollOverOutTest$(EXEEXT): $(RollOverOutTest_OBJECTS) $(RollOverOutTest_DEPENDENCIES) 
	@rm -f RollOverOutTest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(RollOverOutTest_OBJECTS) $(RollOverOutTest_LDADD) $(LIBS)
RollOverOutTest-Runner$(EXEEXT): $(RollOverOutTest_Runner_OBJECTS) $(RollOverOutTest_Runner_DEPENDENCIES) 
	@rm -f RollOverOutTest-Runner$(EXEEXT)
	$(AM_V_CXXLD)$(RollOverOutTest_Runner_LINK) $(RollOverOutTest_Runner_OBJECTS) $(RollOverOutTest_Runner_LDADD) $(LIBS)
SpriteButtonEventsTest$(EXEEXT): $(SpriteButtonEventsTest_OBJECTS) $(SpriteButtonEventsTest_DEPENDENCIES) 
	@rm -f SpriteButtonEventsTest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(SpriteButtonEventsTest_OBJECTS) $(SpriteButtonEventsTest_LDADD) $(LIBS)
SpriteButtonEventsTest-Runner$(EXEEXT): $(SpriteButtonEventsTest_Runner_OBJECTS) $(SpriteButtonEventsTest_Runner_DEPENDENCIES) 
	@rm -f SpriteButtonEventsTest-Runner$(EXEEXT)
	$(AM_V_CXXLD)$(SpriteButtonEventsTest_Runner_LINK) $(SpriteButtonEventsTest_Runner_OBJECTS) $(SpriteButtonEventsTest_Runner_LDADD) $(LIBS)
TextSnapshotTest$(EXEEXT): $(TextSnapshotTest_OBJECTS) $(TextSnapshotTest_DEPENDENCIES) 
	@rm -f TextSnapshotTest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(TextSnapshotTest_OBJECTS) $(TextSnapshotTest_LDADD) $(LIBS)
Video-EmbedSquareTest$(EXEEXT): $(Video_EmbedSquareTest_OBJECTS) $(Video_EmbedSquareTest_DEPENDENCIES) 
	@rm -f Video-EmbedSquareTest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(Video_EmbedSquareTest_OBJECTS) $(Video_EmbedSquareTest_LDADD) $(LIBS)
Video-EmbedSquareTestRunner$(EXEEXT): $(Video_EmbedSquareTestRunner_OBJECTS) $(Video_EmbedSquareTestRunner_DEPENDENCIES) 
	@rm -f Video-EmbedSquareTestRunner$(EXEEXT)
	$(AM_V_CXXLD)$(Video_EmbedSquareTestRunner_LINK) $(Video_EmbedSquareTestRunner_OBJECTS) $(Video_EmbedSquareTestRunner_LDADD) $(LIBS)
attachMovieLoopingTest$(EXEEXT): $(attachMovieLoopingTest_OBJECTS) $(attachMovieLoopingTest_DEPENDENCIES) 
	@rm -f attachMovieLoopingTest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(attachMovieLoopingTest_OBJECTS) $(attachMovieLoopingTest_LDADD) $(LIBS)
attachMovieLoopingTestRunner$(EXEEXT): $(attachMovieLoopingTestRunner_OBJECTS) $(attachMovieLoopingTestRunner_DEPENDENCIES) 
	@rm -f attachMovieLoopingTestRunner$(EXEEXT)
	$(AM_V_CXXLD)$(attachMovieLoopingTestRunner_LINK) $(attachMovieLoopingTestRunner_OBJECTS) $(attachMovieLoopingTestRunner_LDADD) $(LIBS)
attachMovieTest$(EXEEXT): $(attachMovieTest_OBJECTS) $(attachMovieTest_DEPENDENCIES) 
	@rm -f attachMovieTest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(attachMovieTest_OBJECTS) $(attachMovieTest_LDADD) $(LIBS)
attachMovieTestRunner$(EXEEXT): $(attachMovieTestRunner_OBJECTS) $(attachMovieTestRunner_DEPENDENCIES) 
	@rm -f attachMovieTestRunner$(EXEEXT)
	$(AM_V_CXXLD)$(attachMovieTestRunner_LINK) $(attachMovieTestRunner_OBJECTS) $(attachMovieTestRunner_LDADD) $(LIBS)
callFunction_test$(EXEEXT): $(callFunction_test_OBJECTS) $(callFunction_test_DEPENDENCIES) 
	@rm -f callFunction_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(callFunction_test_OBJECTS) $(callFunction_test_LDADD) $(LIBS)
consecutive_goto_frame_test$(EXEEXT): $(consecutive_goto_frame_test_OBJECTS) $(consecutive_goto_frame_test_DEPENDENCIES) 
	@rm -f consecutive_goto_frame_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(consecutive_goto_frame_test_OBJECTS) $(consecutive_goto_frame_test_LDADD) $(LIBS)
definebitsjpeg2$(EXEEXT): $(definebitsjpeg2_OBJECTS) $(definebitsjpeg2_DEPENDENCIES) 
	@rm -f definebitsjpeg2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(definebitsjpeg2_OBJECTS) $(definebitsjpeg2_LDADD) $(LIBS)
duplicate_movie_clip_test$(EXEEXT): $(duplicate_movie_clip_test_OBJECTS) $(duplicate_movie_clip_test_DEPENDENCIES) 
	@rm -f duplicate_movie_clip_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(duplicate_movie_clip_test_OBJECTS) $(duplicate_movie_clip_test_LDADD) $(LIBS)
duplicate_movie_clip_test2$(EXEEXT): $(duplicate_movie_clip_test2_OBJECTS) $(duplicate_movie_clip_test2_DEPENDENCIES) 
	@rm -f duplicate_movie_clip_test2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(duplicate_movie_clip_test2_OBJECTS) $(duplicate_movie_clip_test2_LDADD) $(LIBS)
event_handler_scope_test$(EXEEXT): $(event_handler_scope_test_OBJECTS) $(event_handler_scope_test_DEPENDENCIES) 
	@rm -f event_handler_scope_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(event_handler_scope_test_OBJECTS) $(event_handler_scope_test_LDADD) $(LIBS)
frame_label_test$(EXEEXT): $(frame_label_test_OBJECTS) $(frame_label_test_DEPENDENCIES) 
	@rm -f frame_label_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(frame_label_test_OBJECTS) $(frame_label_test_LDADD) $(LIBS)
getTimer_test$(EXEEXT): $(getTimer_test_OBJECTS) $(getTimer_test_DEPENDENCIES) 
	@rm -f getTimer_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(getTimer_test_OBJECTS) $(getTimer_test_LDADD) $(LIBS)
get_frame_number_test$(EXEEXT): $(get_frame_number_test_OBJECTS) $(get_frame_number_test_DEPENDENCIES) 
	@rm -f get_frame_number_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(get_frame_number_test_OBJECTS) $(get_frame_number_test_LDADD) $(LIBS)
goto_frame_test$(EXEEXT): $(goto_frame_test_OBJECTS) $(goto_frame_test_DEPENDENCIES) 
	@rm -f goto_frame_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(goto_frame_test_OBJECTS) $(goto_frame_test_LDADD) $(LIBS)
instanceNameTest$(EXEEXT): $(instanceNameTest_OBJECTS) $(instanceNameTest_DEPENDENCIES) 
	@rm -f instanceNameTest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(instanceNameTest_OBJECTS) $(instanceNameTest_LDADD) $(LIBS)
intervalTestRunner$(EXEEXT): $(intervalTestRunner_OBJECTS) $(intervalTestRunner_DEPENDENCIES) 
	@rm -f intervalTestRunner$(EXEEXT)
	$(AM_V_CXXLD)$(intervalTestRunner_LINK) $(intervalTestRunner_OBJECTS) $(intervalTestRunner_LDADD) $(LIBS)
key_event_test$(EXEEXT): $(key_event_test_OBJECTS) $(key_event_test_DEPENDENCIES) 
	@rm -f key_event_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(key_event_test_OBJECTS) $(key_event_test_LDADD) $(LIBS)
key_event_testrunner$(EXEEXT): $(key_event_testrunner_OBJECTS) $(key_event_testrunner_DEPENDENCIES) 
	@rm -f key_event_testrunner$(EXEEXT)
	$(AM_V_CXXLD)$(key_event_testrunner_LINK) $(key_event_testrunner_OBJECTS) $(key_event_testrunner_LDADD) $(LIBS)
masks_test$(EXEEXT): $(masks_test_OBJECTS) $(masks_test_DEPENDENCIES) 
	@rm -f masks_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(masks_test_OBJECTS) $(masks_test_LDADD) $(LIBS)
masks_test2$(EXEEXT): $(masks_test2_OBJECTS) $(masks_test2_DEPENDENCIES) 
	@rm -f masks_test2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(masks_test2_OBJECTS) $(masks_test2_LDADD) $(LIBS)
masks_test2runner$(EXEEXT): $(masks_test2runner_OBJECTS) $(masks_test2runner_DEPENDENCIES) 
	@rm -f masks_test2runner$(EXEEXT)
	$(AM_V_CXXLD)$(masks_test2runner_LINK) $(masks_test2runner_OBJECTS) $(masks_test2runner_LDADD) $(LIBS)
masks_testrunner$(EXEEXT): $(masks_testrunner_OBJECTS) $(masks_testrunner_DEPENDENCIES) 
	@rm -f masks_testrunner$(EXEEXT)
	$(AM_V_CXXLD)$(masks_testrunner_LINK) $(masks_testrunner_OBJECTS) $(masks_testrunner_LDADD) $(LIBS)
matrix_test$(EXEEXT): $(matrix_test_OBJECTS) $(matrix_test_DEPENDENCIES) 
	@rm -f matrix_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(matrix_test_OBJECTS) $(matrix_test_LDADD) $(LIBS)
morph_test1$(EXEEXT): $(morph_test1_OBJECTS) $(morph_test1_DEPENDENCIES) 
	@rm -f morph_test1$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(morph_test1_OBJECTS) $(morph_test1_LDADD) $(LIBS)
morph_test1runner$(EXEEXT): $(morph_test1runner_OBJECTS) $(morph_test1runner_DEPENDENCIES) 
	@rm -f morph_test1runner$(EXEEXT)
	$(AM_V_CXXLD)$(morph_test1runner_LINK) $(morph_test1runner_OBJECTS) $(morph_test1runner_LDADD) $(LIBS)
move_object_test$(EXEEXT): $(move_object_test_OBJECTS) $(move_object_test_DEPENDENCIES) 
	@rm -f move_object_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(move_object_test_OBJECTS) $(move_object_test_LDADD) $(LIBS)
multi_doactions_and_goto_frame_test$(EXEEXT): $(multi_doactions_and_goto_frame_test_OBJECTS) $(multi_doactions_and_goto_frame_test_DEPENDENCIES) 
	@rm -f multi_doactions_and_goto_frame_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(multi_doactions_and_goto_frame_test_OBJECTS) $(multi_doactions_and_goto_frame_test_LDADD) $(LIBS)
new_child_in_unload_test$(EXEEXT): $(new_child_in_unload_test_OBJECTS) $(new_child_in_unload_test_DEPENDENCIES) 
	@rm -f new_child_in_unload_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(new_child_in_unload_test_OBJECTS) $(new_child_in_unload_test_LDADD) $(LIBS)
opcode_guard_test$(EXEEXT): $(opcode_guard_test_OBJECTS) $(opcode_guard_test_DEPENDENCIES) 
	@rm -f opcode_guard_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(opcode_guard_test_OBJECTS) $(opcode_guard_test_LDADD) $(LIBS)
path_format_test$(EXEEXT): $(path_format_test_OBJECTS) $(path_format_test_DEPENDENCIES) 
	@rm -f path_format_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(path_format_test_OBJECTS) $(path_format_test_LDADD) $(LIBS)
place_and_remove_object_insane_test$(EXEEXT): $(place_and_remove_object_insane_test_OBJECTS) $(place_and_remove_object_insane_test_DEPENDENCIES) 
	@rm -f place_and_remove_object_insane_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(place_and_remove_object_insane_test_OBJECTS) $(place_and_remove_object_insane_test_LDADD) $(LIBS)
place_and_remove_object_test$(EXEEXT): $(place_and_remove_object_test_OBJECTS) $(place_and_remove_object_test_DEPENDENCIES) 
	@rm -f place_and_remove_object_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(place_and_remove_object_test_OBJECTS) $(place_and_remove_object_test_LDADD) $(LIBS)
place_object_test$(EXEEXT): $(place_object_test_OBJECTS) $(place_object_test_DEPENDENCIES) 
	@rm -f place_object_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(place_object_test_OBJECTS) $(place_object_test_LDADD) $(LIBS)
place_object_test2$(EXEEXT): $(place_object_test2_OBJECTS) $(place_object_test2_DEPENDENCIES) 
	@rm -f place_object_test2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(place_object_test2_OBJECTS) $(place_object_test2_LDADD) $(LIBS)
replace_buttons1test$(EXEEXT): $(replace_buttons1test_OBJECTS) $(replace_buttons1test_DEPENDENCIES) 
	@rm -f replace_buttons1test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(replace_buttons1test_OBJECTS) $(replace_buttons1test_LDADD) $(LIBS)
replace_buttons1test_runner$(EXEEXT): $(replace_buttons1test_runner_OBJECTS) $(replace_buttons1test_runner_DEPENDENCIES) 
	@rm -f replace_buttons1test_runner$(EXEEXT)
	$(AM_V_CXXLD)$(replace_buttons1test_runner_LINK) $(replace_buttons1test_runner_OBJECTS) $(replace_buttons1test_runner_LDADD) $(LIBS)
replace_shapes1test$(EXEEXT): $(replace_shapes1test_OBJECTS) $(replace_shapes1test_DEPENDENCIES) 
	@rm -f replace_shapes1test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(replace_shapes1test_OBJECTS) $(replace_shapes1test_LDADD) $(LIBS)
replace_shapes1test_runner$(EXEEXT): $(replace_shapes1test_runner_OBJECTS) $(replace_shapes1test_runner_DEPENDENCIES) 
	@rm -f replace_shapes1test_runner$(EXEEXT)
	$(AM_V_CXXLD)$(replace_shapes1test_runner_LINK) $(replace_shapes1test_runner_OBJECTS) $(replace_shapes1test_runner_LDADD) $(LIBS)
replace_sprites1test$(EXEEXT): $(replace_sprites1test_OBJECTS) $(replace_sprites1test_DEPENDENCIES) 
	@rm -f replace_sprites1test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(replace_sprites1test_OBJECTS) $(replace_sprites1test_LDADD) $(LIBS)
replace_sprites1test_runner$(EXEEXT): $(replace_sprites1test_runner_OBJECTS) $(replace_sprites1test_runner_DEPENDENCIES) 
	@rm -f replace_sprites1test_runner$(EXEEXT)
	$(AM_V_CXXLD)$(replace_sprites1test_runner_LINK) $(replace_sprites1test_runner_OBJECTS) $(replace_sprites1test_runner_LDADD) $(LIBS)
reverse_execute_PlaceObject2_test1$(EXEEXT): $(reverse_execute_PlaceObject2_test1_OBJECTS) $(reverse_execute_PlaceObject2_test1_DEPENDENCIES) 
	@rm -f reverse_execute_PlaceObject2_test1$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(reverse_execute_PlaceObject2_test1_OBJECTS) $(reverse_execute_PlaceObject2_test1_LDADD) $(LIBS)
reverse_execute_PlaceObject2_test2$(EXEEXT): $(reverse_execute_PlaceObject2_test2_OBJECTS) $(reverse_execute_PlaceObject2_test2_DEPENDENCIES) 
	@rm -f reverse_execute_PlaceObject2_test2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(reverse_execute_PlaceObject2_test2_OBJECTS) $(reverse_execute_PlaceObject2_test2_LDADD) $(LIBS)
root_stop_test$(EXEEXT): $(root_stop_test_OBJECTS) $(root_stop_test_DEPENDENCIES) 
	@rm -f root_stop_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(root_stop_test_OBJECTS) $(root_stop_test_LDADD) $(LIBS)
root_stop_testrunner$(EXEEXT): $(root_stop_testrunner_OBJECTS) $(root_stop_testrunner_DEPENDENCIES) 
	@rm -f root_stop_testrunner$(EXEEXT)
	$(AM_V_CXXLD)$(root_stop_testrunner_LINK) $(root_stop_testrunner_OBJECTS) $(root_stop_testrunner_LDADD) $(LIBS)
runtime_vm_stack_test$(EXEEXT): $(runtime_vm_stack_test_OBJECTS) $(runtime_vm_stack_test_DEPENDENCIES) 
	@rm -f runtime_vm_stack_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(runtime_vm_stack_test_OBJECTS) $(runtime_vm_stack_test_LDADD) $(LIBS)
shape_test$(EXEEXT): $(shape_test_OBJECTS) $(shape_test_DEPENDENCIES) 
	@rm -f shape_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(shape_test_OBJECTS) $(shape_test_LDADD) $(LIBS)
spritehier$(EXEEXT): $(spritehier_OBJECTS) $(spritehier_DEPENDENCIES) 
	@rm -f spritehier$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(spritehier_OBJECTS) $(spritehier_LDADD) $(LIBS)
static_vs_dynamic1$(EXEEXT): $(static_vs_dynamic1_OBJECTS) $(static_vs_dynamic1_DEPENDENCIES) 
	@rm -f static_vs_dynamic1$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(static_vs_dynamic1_OBJECTS) $(static_vs_dynamic1_LDADD) $(LIBS)
static_vs_dynamic2$(EXEEXT): $(static_vs_dynamic2_OBJECTS) $(static_vs_dynamic2_DEPENDENCIES) 
	@rm -f static_vs_dynamic2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(static_vs_dynamic2_OBJECTS) $(static_vs_dynamic2_LDADD) $(LIBS)
timeline_var_test$(EXEEXT): $(timeline_var_test_OBJECTS) $(timeline_var_test_DEPENDENCIES) 
	@rm -f timeline_var_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(timeline_var_test_OBJECTS) $(timeline_var_test_LDADD) $(LIBS)
unload_movieclip_test1$(EXEEXT): $(unload_movieclip_test1_OBJECTS) $(unload_movieclip_test1_DEPENDENCIES) 
	@rm -f unload_movieclip_test1$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(unload_movieclip_test1_OBJECTS) $(unload_movieclip_test1_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/BeginBitmapFill-BeginBitmapFill.Po
include ./$(DEPDIR)/BeginBitmapFillRunner-BeginBitmapFillRunner.Po
include ./$(DEPDIR)/BitmapDataDraw-BitmapDataDraw.Po
include ./$(DEPDIR)/BitmapDataTest-BitmapDataTest.Po
include ./$(DEPDIR)/BitmapDataTestRunner-BitmapDataTestRunner.Po
include ./$(DEPDIR)/BitmapSmoothingTest-BitmapSmoothingTest.Po
include ./$(DEPDIR)/ButtonEventsTest.Po
include ./$(DEPDIR)/ButtonEventsTest_Runner-ButtonEventsTest-Runner.Po
include ./$(DEPDIR)/ButtonPropertiesTest.Po
include ./$(DEPDIR)/ButtonPropertiesTestRunner-ButtonPropertiesTestRunner.Po
include ./$(DEPDIR)/DefineEditTextTest.Po
include ./$(DEPDIR)/DefineEditTextTest_Runner-DefineEditTextTest-Runner.Po
include ./$(DEPDIR)/DefineEditTextVariableNameTest-Runner.Po
include ./$(DEPDIR)/DefineEditTextVariableNameTest.Po
include ./$(DEPDIR)/DefineEditTextVariableNameTest2.Po
include ./$(DEPDIR)/DefineTextTest.Po
include ./$(DEPDIR)/DefineTextTest_Runner-DefineTextTest-Runner.Po
include ./$(DEPDIR)/Dejagnu.Po
include ./$(DEPDIR)/DepthLimitsTest.Po
include ./$(DEPDIR)/DeviceFontTest.Po
include ./$(DEPDIR)/DragDropTestRunner-DragDropTestRunner.Po
include ./$(DEPDIR)/DrawingApiTestRunner-DrawingApiTestRunner.Po
include ./$(DEPDIR)/EmbeddedFontTest.Po
include ./$(DEPDIR)/KeyEventOrder.Po
include ./$(DEPDIR)/KeyEventOrderRunner-KeyEventOrderRunner.Po
include ./$(DEPDIR)/NetStream-SquareTest.Po
include ./$(DEPDIR)/NetStream_SquareTestRunner-NetStream-SquareTestRunner.Po
include ./$(DEPDIR)/PlaceObject2Test.Po
include ./$(DEPDIR)/PrototypeEventListenersTestRunner-PrototypeEventListenersTestRunner.Po
include ./$(DEPDIR)/RemoveObject2Test.Po
include ./$(DEPDIR)/ResolveEventsTest.Po
include ./$(DEPDIR)/ResolveEventsTest_Runner-ResolveEventsTest-Runner.Po
include ./$(DEPDIR)/RollOverOutTest.Po
include ./$(DEPDIR)/RollOverOutTest_Runner-RollOverOutTest-Runner.Po
include ./$(DEPDIR)/SpriteButtonEventsTest.Po
include ./$(DEPDIR)/SpriteButtonEventsTest_Runner-SpriteButtonEventsTest-Runner.Po
include ./$(DEPDIR)/TextSnapshotTest.Po
include ./$(DEPDIR)/Video-EmbedSquareTest.Po
include ./$(DEPDIR)/Video_EmbedSquareTestRunner-Video-EmbedSquareTestRunner.Po
include ./$(DEPDIR)/attachMovieLoopingTest.Po
include ./$(DEPDIR)/attachMovieLoopingTestRunner-attachMovieLoopingTestRunner.Po
include ./$(DEPDIR)/attachMovieTest.Po
include ./$(DEPDIR)/attachMovieTestRunner-attachMovieTestRunner.Po
include ./$(DEPDIR)/callFunction_test.Po
include ./$(DEPDIR)/consecutive_goto_frame_test.Po
include ./$(DEPDIR)/definebitsjpeg2.Po
include ./$(DEPDIR)/duplicate_movie_clip_test.Po
include ./$(DEPDIR)/duplicate_movie_clip_test2.Po
include ./$(DEPDIR)/event_handler_scope_test.Po
include ./$(DEPDIR)/frame_label_test.Po
include ./$(DEPDIR)/getTimer_test.Po
include ./$(DEPDIR)/get_frame_number_test.Po
include ./$(DEPDIR)/goto_frame_test.Po
include ./$(DEPDIR)/instanceNameTest.Po
include ./$(DEPDIR)/intervalTestRunner-intervalTestRunner.Po
include ./$(DEPDIR)/key_event_test.Po
include ./$(DEPDIR)/key_event_testrunner-key_event_testrunner.Po
include ./$(DEPDIR)/masks_test.Po
include ./$(DEPDIR)/masks_test2.Po
include ./$(DEPDIR)/masks_test2runner-masks_test2runner.Po
include ./$(DEPDIR)/masks_testrunner-masks_testrunner.Po
include ./$(DEPDIR)/matrix_test.Po
include ./$(DEPDIR)/ming_utils.Plo
include ./$(DEPDIR)/morph_test1.Po
include ./$(DEPDIR)/morph_test1runner-morph_test1runner.Po
include ./$(DEPDIR)/move_object_test.Po
include ./$(DEPDIR)/multi_doactions_and_goto_frame_test.Po
include ./$(DEPDIR)/new_child_in_unload_test.Po
include ./$(DEPDIR)/opcode_guard_test.Po
include ./$(DEPDIR)/path_format_test.Po
include ./$(DEPDIR)/place_and_remove_object_insane_test.Po
include ./$(DEPDIR)/place_and_remove_object_test.Po
include ./$(DEPDIR)/place_object_test.Po
include ./$(DEPDIR)/place_object_test2.Po
include ./$(DEPDIR)/replace_buttons1test.Po
include ./$(DEPDIR)/replace_buttons1test_runner-replace_buttons1test_runner.Po
include ./$(DEPDIR)/replace_shapes1test.Po
include ./$(DEPDIR)/replace_shapes1test_runner-replace_shapes1test_runner.Po
include ./$(DEPDIR)/replace_sprites1test.Po
include ./$(DEPDIR)/replace_sprites1test_runner-replace_sprites1test_runner.Po
include ./$(DEPDIR)/reverse_execute_PlaceObject2_test1.Po
include ./$(DEPDIR)/reverse_execute_PlaceObject2_test2.Po
include ./$(DEPDIR)/root_stop_test.Po
include ./$(DEPDIR)/root_stop_testrunner-root_stop_testrunner.Po
include ./$(DEPDIR)/runtime_vm_stack_test.Po
include ./$(DEPDIR)/shape_test.Po
include ./$(DEPDIR)/spritehier.Po
include ./$(DEPDIR)/static_vs_dynamic1.Po
include ./$(DEPDIR)/static_vs_dynamic2.Po
include ./$(DEPDIR)/timeline_var_test.Po
include ./$(DEPDIR)/unload_movieclip_test1.Po

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

BeginBitmapFill-BeginBitmapFill.o: BeginBitmapFill.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(BeginBitmapFill_CFLAGS) $(CFLAGS) -MT BeginBitmapFill-BeginBitmapFill.o -MD -MP -MF $(DEPDIR)/BeginBitmapFill-BeginBitmapFill.Tpo -c -o BeginBitmapFill-BeginBitmapFill.o `test -f 'BeginBitmapFill.c' || echo '$(srcdir)/'`BeginBitmapFill.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/BeginBitmapFill-BeginBitmapFill.Tpo $(DEPDIR)/BeginBitmapFill-BeginBitmapFill.Po
#	$(AM_V_CC) \
#	source='BeginBitmapFill.c' object='BeginBitmapFill-BeginBitmapFill.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(BeginBitmapFill_CFLAGS) $(CFLAGS) -c -o BeginBitmapFill-BeginBitmapFill.o `test -f 'BeginBitmapFill.c' || echo '$(srcdir)/'`BeginBitmapFill.c

BeginBitmapFill-BeginBitmapFill.obj: BeginBitmapFill.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(BeginBitmapFill_CFLAGS) $(CFLAGS) -MT BeginBitmapFill-BeginBitmapFill.obj -MD -MP -MF $(DEPDIR)/BeginBitmapFill-BeginBitmapFill.Tpo -c -o BeginBitmapFill-BeginBitmapFill.obj `if test -f 'BeginBitmapFill.c'; then $(CYGPATH_W) 'BeginBitmapFill.c'; else $(CYGPATH_W) '$(srcdir)/BeginBitmapFill.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/BeginBitmapFill-BeginBitmapFill.Tpo $(DEPDIR)/BeginBitmapFill-BeginBitmapFill.Po
#	$(AM_V_CC) \
#	source='BeginBitmapFill.c' object='BeginBitmapFill-BeginBitmapFill.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(BeginBitmapFill_CFLAGS) $(CFLAGS) -c -o BeginBitmapFill-BeginBitmapFill.obj `if test -f 'BeginBitmapFill.c'; then $(CYGPATH_W) 'BeginBitmapFill.c'; else $(CYGPATH_W) '$(srcdir)/BeginBitmapFill.c'; fi`

BitmapDataDraw-BitmapDataDraw.o: BitmapDataDraw.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(BitmapDataDraw_CFLAGS) $(CFLAGS) -MT BitmapDataDraw-BitmapDataDraw.o -MD -MP -MF $(DEPDIR)/BitmapDataDraw-BitmapDataDraw.Tpo -c -o BitmapDataDraw-BitmapDataDraw.o `test -f 'BitmapDataDraw.c' || echo '$(srcdir)/'`BitmapDataDraw.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/BitmapDataDraw-BitmapDataDraw.Tpo $(DEPDIR)/BitmapDataDraw-BitmapDataDraw.Po
#	$(AM_V_CC) \
#	source='BitmapDataDraw.c' object='BitmapDataDraw-BitmapDataDraw.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(BitmapDataDraw_CFLAGS) $(CFLAGS) -c -o BitmapDataDraw-BitmapDataDraw.o `test -f 'BitmapDataDraw.c' || echo '$(srcdir)/'`BitmapDataDraw.c

BitmapDataDraw-BitmapDataDraw.obj: BitmapDataDraw.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(BitmapDataDraw_CFLAGS) $(CFLAGS) -MT BitmapDataDraw-BitmapDataDraw.obj -MD -MP -MF $(DEPDIR)/BitmapDataDraw-BitmapDataDraw.Tpo -c -o BitmapDataDraw-BitmapDataDraw.obj `if test -f 'BitmapDataDraw.c'; then $(CYGPATH_W) 'BitmapDataDraw.c'; else $(CYGPATH_W) '$(srcdir)/BitmapDataDraw.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/BitmapDataDraw-BitmapDataDraw.Tpo $(DEPDIR)/BitmapDataDraw-BitmapDataDraw.Po
#	$(AM_V_CC) \
#	source='BitmapDataDraw.c' object='BitmapDataDraw-BitmapDataDraw.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(BitmapDataDraw_CFLAGS) $(CFLAGS) -c -o BitmapDataDraw-BitmapDataDraw.obj `if test -f 'BitmapDataDraw.c'; then $(CYGPATH_W) 'BitmapDataDraw.c'; else $(CYGPATH_W) '$(srcdir)/BitmapDataDraw.c'; fi`

BitmapDataTest-BitmapDataTest.o: BitmapDataTest.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(BitmapDataTest_CFLAGS) $(CFLAGS) -MT BitmapDataTest-BitmapDataTest.o -MD -MP -MF $(DEPDIR)/BitmapDataTest-BitmapDataTest.Tpo -c -o BitmapDataTest-BitmapDataTest.o `test -f 'BitmapDataTest.c' || echo '$(srcdir)/'`BitmapDataTest.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/BitmapDataTest-BitmapDataTest.Tpo $(DEPDIR)/BitmapDataTest-BitmapDataTest.Po
#	$(AM_V_CC) \
#	source='BitmapDataTest.c' object='BitmapDataTest-BitmapDataTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(BitmapDataTest_CFLAGS) $(CFLAGS) -c -o BitmapDataTest-BitmapDataTest.o `test -f 'BitmapDataTest.c' || echo '$(srcdir)/'`BitmapDataTest.c

BitmapDataTest-BitmapDataTest.obj: BitmapDataTest.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(BitmapDataTest_CFLAGS) $(CFLAGS) -MT BitmapDataTest-BitmapDataTest.obj -MD -MP -MF $(DEPDIR)/BitmapDataTest-BitmapDataTest.Tpo -c -o BitmapDataTest-BitmapDataTest.obj `if test -f 'BitmapDataTest.c'; then $(CYGPATH_W) 'BitmapDataTest.c'; else $(CYGPATH_W) '$(srcdir)/BitmapDataTest.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/BitmapDataTest-BitmapDataTest.Tpo $(DEPDIR)/BitmapDataTest-BitmapDataTest.Po
#	$(AM_V_CC) \
#	source='BitmapDataTest.c' object='BitmapDataTest-BitmapDataTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(BitmapDataTest_CFLAGS) $(CFLAGS) -c -o BitmapDataTest-BitmapDataTest.obj `if test -f 'BitmapDataTest.c'; then $(CYGPATH_W) 'BitmapDataTest.c'; else $(CYGPATH_W) '$(srcdir)/BitmapDataTest.c'; fi`

BitmapSmoothingTest-BitmapSmoothingTest.o: BitmapSmoothingTest.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(BitmapSmoothingTest_CFLAGS) $(CFLAGS) -MT BitmapSmoothingTest-BitmapSmoothingTest.o -MD -MP -MF $(DEPDIR)/BitmapSmoothingTest-BitmapSmoothingTest.Tpo -c -o BitmapSmoothingTest-BitmapSmoothingTest.o `test -f 'BitmapSmoothingTest.c' || echo '$(srcdir)/'`BitmapSmoothingTest.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/BitmapSmoothingTest-BitmapSmoothingTest.Tpo $(DEPDIR)/BitmapSmoothingTest-BitmapSmoothingTest.Po
#	$(AM_V_CC) \
#	source='BitmapSmoothingTest.c' object='BitmapSmoothingTest-BitmapSmoothingTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(BitmapSmoothingTest_CFLAGS) $(CFLAGS) -c -o BitmapSmoothingTest-BitmapSmoothingTest.o `test -f 'BitmapSmoothingTest.c' || echo '$(srcdir)/'`BitmapSmoothingTest.c

BitmapSmoothingTest-BitmapSmoothingTest.obj: BitmapSmoothingTest.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(BitmapSmoothingTest_CFLAGS) $(CFLAGS) -MT BitmapSmoothingTest-BitmapSmoothingTest.obj -MD -MP -MF $(DEPDIR)/BitmapSmoothingTest-BitmapSmoothingTest.Tpo -c -o BitmapSmoothingTest-BitmapSmoothingTest.obj `if test -f 'BitmapSmoothingTest.c'; then $(CYGPATH_W) 'BitmapSmoothingTest.c'; else $(CYGPATH_W) '$(srcdir)/BitmapSmoothingTest.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/BitmapSmoothingTest-BitmapSmoothingTest.Tpo $(DEPDIR)/BitmapSmoothingTest-BitmapSmoothingTest.Po
#	$(AM_V_CC) \
#	source='BitmapSmoothingTest.c' object='BitmapSmoothingTest-BitmapSmoothingTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(BitmapSmoothingTest_CFLAGS) $(CFLAGS) -c -o BitmapSmoothingTest-BitmapSmoothingTest.obj `if test -f 'BitmapSmoothingTest.c'; then $(CYGPATH_W) 'BitmapSmoothingTest.c'; else $(CYGPATH_W) '$(srcdir)/BitmapSmoothingTest.c'; fi`

.cpp.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CXX) \
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

BeginBitmapFillRunner-BeginBitmapFillRunner.o: BeginBitmapFillRunner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(BeginBitmapFillRunner_CXXFLAGS) $(CXXFLAGS) -MT BeginBitmapFillRunner-BeginBitmapFillRunner.o -MD -MP -MF $(DEPDIR)/BeginBitmapFillRunner-BeginBitmapFillRunner.Tpo -c -o BeginBitmapFillRunner-BeginBitmapFillRunner.o `test -f 'BeginBitmapFillRunner.cpp' || echo '$(srcdir)/'`BeginBitmapFillRunner.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/BeginBitmapFillRunner-BeginBitmapFillRunner.Tpo $(DEPDIR)/BeginBitmapFillRunner-BeginBitmapFillRunner.Po
#	$(AM_V_CXX) \
#	source='BeginBitmapFillRunner.cpp' object='BeginBitmapFillRunner-BeginBitmapFillRunner.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(BeginBitmapFillRunner_CXXFLAGS) $(CXXFLAGS) -c -o BeginBitmapFillRunner-BeginBitmapFillRunner.o `test -f 'BeginBitmapFillRunner.cpp' || echo '$(srcdir)/'`BeginBitmapFillRunner.cpp

BeginBitmapFillRunner-BeginBitmapFillRunner.obj: BeginBitmapFillRunner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(BeginBitmapFillRunner_CXXFLAGS) $(CXXFLAGS) -MT BeginBitmapFillRunner-BeginBitmapFillRunner.obj -MD -MP -MF $(DEPDIR)/BeginBitmapFillRunner-BeginBitmapFillRunner.Tpo -c -o BeginBitmapFillRunner-BeginBitmapFillRunner.obj `if test -f 'BeginBitmapFillRunner.cpp'; then $(CYGPATH_W) 'BeginBitmapFillRunner.cpp'; else $(CYGPATH_W) '$(srcdir)/BeginBitmapFillRunner.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/BeginBitmapFillRunner-BeginBitmapFillRunner.Tpo $(DEPDIR)/BeginBitmapFillRunner-BeginBitmapFillRunner.Po
#	$(AM_V_CXX) \
#	source='BeginBitmapFillRunner.cpp' object='BeginBitmapFillRunner-BeginBitmapFillRunner.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(BeginBitmapFillRunner_CXXFLAGS) $(CXXFLAGS) -c -o BeginBitmapFillRunner-BeginBitmapFillRunner.obj `if test -f 'BeginBitmapFillRunner.cpp'; then $(CYGPATH_W) 'BeginBitmapFillRunner.cpp'; else $(CYGPATH_W) '$(srcdir)/BeginBitmapFillRunner.cpp'; fi`

BitmapDataTestRunner-BitmapDataTestRunner.o: BitmapDataTestRunner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(BitmapDataTestRunner_CXXFLAGS) $(CXXFLAGS) -MT BitmapDataTestRunner-BitmapDataTestRunner.o -MD -MP -MF $(DEPDIR)/BitmapDataTestRunner-BitmapDataTestRunner.Tpo -c -o BitmapDataTestRunner-BitmapDataTestRunner.o `test -f 'BitmapDataTestRunner.cpp' || echo '$(srcdir)/'`BitmapDataTestRunner.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/BitmapDataTestRunner-BitmapDataTestRunner.Tpo $(DEPDIR)/BitmapDataTestRunner-BitmapDataTestRunner.Po
#	$(AM_V_CXX) \
#	source='BitmapDataTestRunner.cpp' object='BitmapDataTestRunner-BitmapDataTestRunner.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(BitmapDataTestRunner_CXXFLAGS) $(CXXFLAGS) -c -o BitmapDataTestRunner-BitmapDataTestRunner.o `test -f 'BitmapDataTestRunner.cpp' || echo '$(srcdir)/'`BitmapDataTestRunner.cpp

BitmapDataTestRunner-BitmapDataTestRunner.obj: BitmapDataTestRunner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(BitmapDataTestRunner_CXXFLAGS) $(CXXFLAGS) -MT BitmapDataTestRunner-BitmapDataTestRunner.obj -MD -MP -MF $(DEPDIR)/BitmapDataTestRunner-BitmapDataTestRunner.Tpo -c -o BitmapDataTestRunner-BitmapDataTestRunner.obj `if test -f 'BitmapDataTestRunner.cpp'; then $(CYGPATH_W) 'BitmapDataTestRunner.cpp'; else $(CYGPATH_W) '$(srcdir)/BitmapDataTestRunner.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/BitmapDataTestRunner-BitmapDataTestRunner.Tpo $(DEPDIR)/BitmapDataTestRunner-BitmapDataTestRunner.Po
#	$(AM_V_CXX) \
#	source='BitmapDataTestRunner.cpp' object='BitmapDataTestRunner-BitmapDataTestRunner.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(BitmapDataTestRunner_CXXFLAGS) $(CXXFLAGS) -c -o BitmapDataTestRunner-BitmapDataTestRunner.obj `if test -f 'BitmapDataTestRunner.cpp'; then $(CYGPATH_W) 'BitmapDataTestRunner.cpp'; else $(CYGPATH_W) '$(srcdir)/BitmapDataTestRunner.cpp'; fi`

ButtonEventsTest_Runner-ButtonEventsTest-Runner.o: ButtonEventsTest-Runner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ButtonEventsTest_Runner_CXXFLAGS) $(CXXFLAGS) -MT ButtonEventsTest_Runner-ButtonEventsTest-Runner.o -MD -MP -MF $(DEPDIR)/ButtonEventsTest_Runner-ButtonEventsTest-Runner.Tpo -c -o ButtonEventsTest_Runner-ButtonEventsTest-Runner.o `test -f 'ButtonEventsTest-Runner.cpp' || echo '$(srcdir)/'`ButtonEventsTest-Runner.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ButtonEventsTest_Runner-ButtonEventsTest-Runner.Tpo $(DEPDIR)/ButtonEventsTest_Runner-ButtonEventsTest-Runner.Po
#	$(AM_V_CXX) \
#	source='ButtonEventsTest-Runner.cpp' object='ButtonEventsTest_Runner-ButtonEventsTest-Runner.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ButtonEventsTest_Runner_CXXFLAGS) $(CXXFLAGS) -c -o ButtonEventsTest_Runner-ButtonEventsTest-Runner.o `test -f 'ButtonEventsTest-Runner.cpp' || echo '$(srcdir)/'`ButtonEventsTest-Runner.cpp

ButtonEventsTest_Runner-ButtonEventsTest-Runner.obj: ButtonEventsTest-Runner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ButtonEventsTest_Runner_CXXFLAGS) $(CXXFLAGS) -MT ButtonEventsTest_Runner-ButtonEventsTest-Runner.obj -MD -MP -MF $(DEPDIR)/ButtonEventsTest_Runner-ButtonEventsTest-Runner.Tpo -c -o ButtonEventsTest_Runner-ButtonEventsTest-Runner.obj `if test -f 'ButtonEventsTest-Runner.cpp'; then $(CYGPATH_W) 'ButtonEventsTest-Runner.cpp'; else $(CYGPATH_W) '$(srcdir)/ButtonEventsTest-Runner.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/ButtonEventsTest_Runner-ButtonEventsTest-Runner.Tpo $(DEPDIR)/ButtonEventsTest_Runner-ButtonEventsTest-Runner.Po
#	$(AM_V_CXX) \
#	source='ButtonEventsTest-Runner.cpp' object='ButtonEventsTest_Runner-ButtonEventsTest-Runner.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ButtonEventsTest_Runner_CXXFLAGS) $(CXXFLAGS) -c -o ButtonEventsTest_Runner-ButtonEventsTest-Runner.obj `if test -f 'ButtonEventsTest-Runner.cpp'; then $(CYGPATH_W) 'ButtonEventsTest-Runner.cpp'; else $(CYGPATH_W) '$(srcdir)/ButtonEventsTest-Runner.cpp'; fi`

ButtonPropertiesTestRunner-ButtonPropertiesTestRunner.o: ButtonPropertiesTestRunner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ButtonPropertiesTestRunner_CXXFLAGS) $(CXXFLAGS) -MT ButtonPropertiesTestRunner-ButtonPropertiesTestRunner.o -MD -MP -MF $(DEPDIR)/ButtonPropertiesTestRunner-ButtonPropertiesTestRunner.Tpo -c -o ButtonPropertiesTestRunner-ButtonPropertiesTestRunner.o `test -f 'ButtonPropertiesTestRunner.cpp' || echo '$(srcdir)/'`ButtonPropertiesTestRunner.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ButtonPropertiesTestRunner-ButtonPropertiesTestRunner.Tpo $(DEPDIR)/ButtonPropertiesTestRunner-ButtonPropertiesTestRunner.Po
#	$(AM_V_CXX) \
#	source='ButtonPropertiesTestRunner.cpp' object='ButtonPropertiesTestRunner-ButtonPropertiesTestRunner.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ButtonPropertiesTestRunner_CXXFLAGS) $(CXXFLAGS) -c -o ButtonPropertiesTestRunner-ButtonPropertiesTestRunner.o `test -f 'ButtonPropertiesTestRunner.cpp' || echo '$(srcdir)/'`ButtonPropertiesTestRunner.cpp

ButtonPropertiesTestRunner-ButtonPropertiesTestRunner.obj: ButtonPropertiesTestRunner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ButtonPropertiesTestRunner_CXXFLAGS) $(CXXFLAGS) -MT ButtonPropertiesTestRunner-ButtonPropertiesTestRunner.obj -MD -MP -MF $(DEPDIR)/ButtonPropertiesTestRunner-ButtonPropertiesTestRunner.Tpo -c -o ButtonPropertiesTestRunner-ButtonPropertiesTestRunner.obj `if test -f 'ButtonPropertiesTestRunner.cpp'; then $(CYGPATH_W) 'ButtonPropertiesTestRunner.cpp'; else $(CYGPATH_W) '$(srcdir)/ButtonPropertiesTestRunner.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/ButtonPropertiesTestRunner-ButtonPropertiesTestRunner.Tpo $(DEPDIR)/ButtonPropertiesTestRunner-ButtonPropertiesTestRunner.Po
#	$(AM_V_CXX) \
#	source='ButtonPropertiesTestRunner.cpp' object='ButtonPropertiesTestRunner-ButtonPropertiesTestRunner.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ButtonPropertiesTestRunner_CXXFLAGS) $(CXXFLAGS) -c -o ButtonPropertiesTestRunner-ButtonPropertiesTestRunner.obj `if test -f 'ButtonPropertiesTestRunner.cpp'; then $(CYGPATH_W) 'ButtonPropertiesTestRunner.cpp'; else $(CYGPATH_W) '$(srcdir)/ButtonPropertiesTestRunner.cpp'; fi`

DefineEditTextTest_Runner-DefineEditTextTest-Runner.o: DefineEditTextTest-Runner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(DefineEditTextTest_Runner_CXXFLAGS) $(CXXFLAGS) -MT DefineEditTextTest_Runner-DefineEditTextTest-Runner.o -MD -MP -MF $(DEPDIR)/DefineEditTextTest_Runner-DefineEditTextTest-Runner.Tpo -c -o DefineEditTextTest_Runner-DefineEditTextTest-Runner.o `test -f 'DefineEditTextTest-Runner.cpp' || echo '$(srcdir)/'`DefineEditTextTest-Runner.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/DefineEditTextTest_Runner-DefineEditTextTest-Runner.Tpo $(DEPDIR)/DefineEditTextTest_Runner-DefineEditTextTest-Runner.Po
#	$(AM_V_CXX) \
#	source='DefineEditTextTest-Runner.cpp' object='DefineEditTextTest_Runner-DefineEditTextTest-Runner.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(DefineEditTextTest_Runner_CXXFLAGS) $(CXXFLAGS) -c -o DefineEditTextTest_Runner-DefineEditTextTest-Runner.o `test -f 'DefineEditTextTest-Runner.cpp' || echo '$(srcdir)/'`DefineEditTextTest-Runner.cpp

DefineEditTextTest_Runner-DefineEditTextTest-Runner.obj: DefineEditTextTest-Runner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(DefineEditTextTest_Runner_CXXFLAGS) $(CXXFLAGS) -MT DefineEditTextTest_Runner-DefineEditTextTest-Runner.obj -MD -MP -MF $(DEPDIR)/DefineEditTextTest_Runner-DefineEditTextTest-Runner.Tpo -c -o DefineEditTextTest_Runner-DefineEditTextTest-Runner.obj `if test -f 'DefineEditTextTest-Runner.cpp'; then $(CYGPATH_W) 'DefineEditTextTest-Runner.cpp'; else $(CYGPATH_W) '$(srcdir)/DefineEditTextTest-Runner.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/DefineEditTextTest_Runner-DefineEditTextTest-Runner.Tpo $(DEPDIR)/DefineEditTextTest_Runner-DefineEditTextTest-Runner.Po
#	$(AM_V_CXX) \
#	source='DefineEditTextTest-Runner.cpp' object='DefineEditTextTest_Runner-DefineEditTextTest-Runner.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(DefineEditTextTest_Runner_CXXFLAGS) $(CXXFLAGS) -c -o DefineEditTextTest_Runner-DefineEditTextTest-Runner.obj `if test -f 'DefineEditTextTest-Runner.cpp'; then $(CYGPATH_W) 'DefineEditTextTest-Runner.cpp'; else $(CYGPATH_W) '$(srcdir)/DefineEditTextTest-Runner.cpp'; fi`

DefineTextTest_Runner-DefineTextTest-Runner.o: DefineTextTest-Runner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(DefineTextTest_Runner_CXXFLAGS) $(CXXFLAGS) -MT DefineTextTest_Runner-DefineTextTest-Runner.o -MD -MP -MF $(DEPDIR)/DefineTextTest_Runner-DefineTextTest-Runner.Tpo -c -o DefineTextTest_Runner-DefineTextTest-Runner.o `test -f 'DefineTextTest-Runner.cpp' || echo '$(srcdir)/'`DefineTextTest-Runner.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/DefineTextTest_Runner-DefineTextTest-Runner.Tpo $(DEPDIR)/DefineTextTest_Runner-DefineTextTest-Runner.Po
#	$(AM_V_CXX) \
#	source='DefineTextTest-Runner.cpp' object='DefineTextTest_Runner-DefineTextTest-Runner.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(DefineTextTest_Runner_CXXFLAGS) $(CXXFLAGS) -c -o DefineTextTest_Runner-DefineTextTest-Runner.o `test -f 'DefineTextTest-Runner.cpp' || echo '$(srcdir)/'`DefineTextTest-Runner.cpp

DefineTextTest_Runner-DefineTextTest-Runner.obj: DefineTextTest-Runner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(DefineTextTest_Runner_CXXFLAGS) $(CXXFLAGS) -MT DefineTextTest_Runner-DefineTextTest-Runner.obj -MD -MP -MF $(DEPDIR)/DefineTextTest_Runner-DefineTextTest-Runner.Tpo -c -o DefineTextTest_Runner-DefineTextTest-Runner.obj `if test -f 'DefineTextTest-Runner.cpp'; then $(CYGPATH_W) 'DefineTextTest-Runner.cpp'; else $(CYGPATH_W) '$(srcdir)/DefineTextTest-Runner.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/DefineTextTest_Runner-DefineTextTest-Runner.Tpo $(DEPDIR)/DefineTextTest_Runner-DefineTextTest-Runner.Po
#	$(AM_V_CXX) \
#	source='DefineTextTest-Runner.cpp' object='DefineTextTest_Runner-DefineTextTest-Runner.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(DefineTextTest_Runner_CXXFLAGS) $(CXXFLAGS) -c -o DefineTextTest_Runner-DefineTextTest-Runner.obj `if test -f 'DefineTextTest-Runner.cpp'; then $(CYGPATH_W) 'DefineTextTest-Runner.cpp'; else $(CYGPATH_W) '$(srcdir)/DefineTextTest-Runner.cpp'; fi`

DragDropTestRunner-DragDropTestRunner.o: DragDropTestRunner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(DragDropTestRunner_CXXFLAGS) $(CXXFLAGS) -MT DragDropTestRunner-DragDropTestRunner.o -MD -MP -MF $(DEPDIR)/DragDropTestRunner-DragDropTestRunner.Tpo -c -o DragDropTestRunner-DragDropTestRunner.o `test -f 'DragDropTestRunner.cpp' || echo '$(srcdir)/'`DragDropTestRunner.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/DragDropTestRunner-DragDropTestRunner.Tpo $(DEPDIR)/DragDropTestRunner-DragDropTestRunner.Po
#	$(AM_V_CXX) \
#	source='DragDropTestRunner.cpp' object='DragDropTestRunner-DragDropTestRunner.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(DragDropTestRunner_CXXFLAGS) $(CXXFLAGS) -c -o DragDropTestRunner-DragDropTestRunner.o `test -f 'DragDropTestRunner.cpp' || echo '$(srcdir)/'`DragDropTestRunner.cpp

DragDropTestRunner-DragDropTestRunner.obj: DragDropTestRunner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(DragDropTestRunner_CXXFLAGS) $(CXXFLAGS) -MT DragDropTestRunner-DragDropTestRunner.obj -MD -MP -MF $(DEPDIR)/DragDropTestRunner-DragDropTestRunner.Tpo -c -o DragDropTestRunner-DragDropTestRunner.obj `if test -f 'DragDropTestRunner.cpp'; then $(CYGPATH_W) 'DragDropTestRunner.cpp'; else $(CYGPATH_W) '$(srcdir)/DragDropTestRunner.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/DragDropTestRunner-DragDropTestRunner.Tpo $(DEPDIR)/DragDropTestRunner-DragDropTestRunner.Po
#	$(AM_V_CXX) \
#	source='DragDropTestRunner.cpp' object='DragDropTestRunner-DragDropTestRunner.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(DragDropTestRunner_CXXFLAGS) $(CXXFLAGS) -c -o DragDropTestRunner-DragDropTestRunner.obj `if test -f 'DragDropTestRunner.cpp'; then $(CYGPATH_W) 'DragDropTestRunner.cpp'; else $(CYGPATH_W) '$(srcdir)/DragDropTestRunner.cpp'; fi`

DrawingApiTestRunner-DrawingApiTestRunner.o: DrawingApiTestRunner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(DrawingApiTestRunner_CXXFLAGS) $(CXXFLAGS) -MT DrawingApiTestRunner-DrawingApiTestRunner.o -MD -MP -MF $(DEPDIR)/DrawingApiTestRunner-DrawingApiTestRunner.Tpo -c -o DrawingApiTestRunner-DrawingApiTestRunner.o `test -f 'DrawingApiTestRunner.cpp' || echo '$(srcdir)/'`DrawingApiTestRunner.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/DrawingApiTestRunner-DrawingApiTestRunner.Tpo $(DEPDIR)/DrawingApiTestRunner-DrawingApiTestRunner.Po
#	$(AM_V_CXX) \
#	source='DrawingApiTestRunner.cpp' object='DrawingApiTestRunner-DrawingApiTestRunner.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(DrawingApiTestRunner_CXXFLAGS) $(CXXFLAGS) -c -o DrawingApiTestRunner-DrawingApiTestRunner.o `test -f 'DrawingApiTestRunner.cpp' || echo '$(srcdir)/'`DrawingApiTestRunner.cpp

DrawingApiTestRunner-DrawingApiTestRunner.obj: DrawingApiTestRunner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(DrawingApiTestRunner_CXXFLAGS) $(CXXFLAGS) -MT DrawingApiTestRunner-DrawingApiTestRunner.obj -MD -MP -MF $(DEPDIR)/DrawingApiTestRunner-DrawingApiTestRunner.Tpo -c -o DrawingApiTestRunner-DrawingApiTestRunner.obj `if test -f 'DrawingApiTestRunner.cpp'; then $(CYGPATH_W) 'DrawingApiTestRunner.cpp'; else $(CYGPATH_W) '$(srcdir)/DrawingApiTestRunner.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/DrawingApiTestRunner-DrawingApiTestRunner.Tpo $(DEPDIR)/DrawingApiTestRunner-DrawingApiTestRunner.Po
#	$(AM_V_CXX) \
#	source='DrawingApiTestRunner.cpp' object='DrawingApiTestRunner-DrawingApiTestRunner.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(DrawingApiTestRunner_CXXFLAGS) $(CXXFLAGS) -c -o DrawingApiTestRunner-DrawingApiTestRunner.obj `if test -f 'DrawingApiTestRunner.cpp'; then $(CYGPATH_W) 'DrawingApiTestRunner.cpp'; else $(CYGPATH_W) '$(srcdir)/DrawingApiTestRunner.cpp'; fi`

KeyEventOrderRunner-KeyEventOrderRunner.o: KeyEventOrderRunner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(KeyEventOrderRunner_CXXFLAGS) $(CXXFLAGS) -MT KeyEventOrderRunner-KeyEventOrderRunner.o -MD -MP -MF $(DEPDIR)/KeyEventOrderRunner-KeyEventOrderRunner.Tpo -c -o KeyEventOrderRunner-KeyEventOrderRunner.o `test -f 'KeyEventOrderRunner.cpp' || echo '$(srcdir)/'`KeyEventOrderRunner.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/KeyEventOrderRunner-KeyEventOrderRunner.Tpo $(DEPDIR)/KeyEventOrderRunner-KeyEventOrderRunner.Po
#	$(AM_V_CXX) \
#	source='KeyEventOrderRunner.cpp' object='KeyEventOrderRunner-KeyEventOrderRunner.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(KeyEventOrderRunner_CXXFLAGS) $(CXXFLAGS) -c -o KeyEventOrderRunner-KeyEventOrderRunner.o `test -f 'KeyEventOrderRunner.cpp' || echo '$(srcdir)/'`KeyEventOrderRunner.cpp

KeyEventOrderRunner-KeyEventOrderRunner.obj: KeyEventOrderRunner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(KeyEventOrderRunner_CXXFLAGS) $(CXXFLAGS) -MT KeyEventOrderRunner-KeyEventOrderRunner.obj -MD -MP -MF $(DEPDIR)/KeyEventOrderRunner-KeyEventOrderRunner.Tpo -c -o KeyEventOrderRunner-KeyEventOrderRunner.obj `if test -f 'KeyEventOrderRunner.cpp'; then $(CYGPATH_W) 'KeyEventOrderRunner.cpp'; else $(CYGPATH_W) '$(srcdir)/KeyEventOrderRunner.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/KeyEventOrderRunner-KeyEventOrderRunner.Tpo $(DEPDIR)/KeyEventOrderRunner-KeyEventOrderRunner.Po
#	$(AM_V_CXX) \
#	source='KeyEventOrderRunner.cpp' object='KeyEventOrderRunner-KeyEventOrderRunner.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(KeyEventOrderRunner_CXXFLAGS) $(CXXFLAGS) -c -o KeyEventOrderRunner-KeyEventOrderRunner.obj `if test -f 'KeyEventOrderRunner.cpp'; then $(CYGPATH_W) 'KeyEventOrderRunner.cpp'; else $(CYGPATH_W) '$(srcdir)/KeyEventOrderRunner.cpp'; fi`

NetStream_SquareTestRunner-NetStream-SquareTestRunner.o: NetStream-SquareTestRunner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(NetStream_SquareTestRunner_CXXFLAGS) $(CXXFLAGS) -MT NetStream_SquareTestRunner-NetStream-SquareTestRunner.o -MD -MP -MF $(DEPDIR)/NetStream_SquareTestRunner-NetStream-SquareTestRunner.Tpo -c -o NetStream_SquareTestRunner-NetStream-SquareTestRunner.o `test -f 'NetStream-SquareTestRunner.cpp' || echo '$(srcdir)/'`NetStream-SquareTestRunner.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/NetStream_SquareTestRunner-NetStream-SquareTestRunner.Tpo $(DEPDIR)/NetStream_SquareTestRunner-NetStream-SquareTestRunner.Po
#	$(AM_V_CXX) \
#	source='NetStream-SquareTestRunner.cpp' object='NetStream_SquareTestRunner-NetStream-SquareTestRunner.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(NetStream_SquareTestRunner_CXXFLAGS) $(CXXFLAGS) -c -o NetStream_SquareTestRunner-NetStream-SquareTestRunner.o `test -f 'NetStream-SquareTestRunner.cpp' || echo '$(srcdir)/'`NetStream-SquareTestRunner.cpp

NetStream_SquareTestRunner-NetStream-SquareTestRunner.obj: NetStream-SquareTestRunner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(NetStream_SquareTestRunner_CXXFLAGS) $(CXXFLAGS) -MT NetStream_SquareTestRunner-NetStream-SquareTestRunner.obj -MD -MP -MF $(DEPDIR)/NetStream_SquareTestRunner-NetStream-SquareTestRunner.Tpo -c -o NetStream_SquareTestRunner-NetStream-SquareTestRunner.obj `if test -f 'NetStream-SquareTestRunner.cpp'; then $(CYGPATH_W) 'NetStream-SquareTestRunner.cpp'; else $(CYGPATH_W) '$(srcdir)/NetStream-SquareTestRunner.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/NetStream_SquareTestRunner-NetStream-SquareTestRunner.Tpo $(DEPDIR)/NetStream_SquareTestRunner-NetStream-SquareTestRunner.Po
#	$(AM_V_CXX) \
#	source='NetStream-SquareTestRunner.cpp' object='NetStream_SquareTestRunner-NetStream-SquareTestRunner.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(NetStream_SquareTestRunner_CXXFLAGS) $(CXXFLAGS) -c -o NetStream_SquareTestRunner-NetStream-SquareTestRunner.obj `if test -f 'NetStream-SquareTestRunner.cpp'; then $(CYGPATH_W) 'NetStream-SquareTestRunner.cpp'; else $(CYGPATH_W) '$(srcdir)/NetStream-SquareTestRunner.cpp'; fi`

PrototypeEventListenersTestRunner-PrototypeEventListenersTestRunner.o: PrototypeEventListenersTestRunner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(PrototypeEventListenersTestRunner_CXXFLAGS) $(CXXFLAGS) -MT PrototypeEventListenersTestRunner-PrototypeEventListenersTestRunner.o -MD -MP -MF $(DEPDIR)/PrototypeEventListenersTestRunner-PrototypeEventListenersTestRunner.Tpo -c -o PrototypeEventListenersTestRunner-PrototypeEventListenersTestRunner.o `test -f 'PrototypeEventListenersTestRunner.cpp' || echo '$(srcdir)/'`PrototypeEventListenersTestRunner.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/PrototypeEventListenersTestRunner-PrototypeEventListenersTestRunner.Tpo $(DEPDIR)/PrototypeEventListenersTestRunner-PrototypeEventListenersTestRunner.Po
#	$(AM_V_CXX) \
#	source='PrototypeEventListenersTestRunner.cpp' object='PrototypeEventListenersTestRunner-PrototypeEventListenersTestRunner.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(PrototypeEventListenersTestRunner_CXXFLAGS) $(CXXFLAGS) -c -o PrototypeEventListenersTestRunner-PrototypeEventListenersTestRunner.o `test -f 'PrototypeEventListenersTestRunner.cpp' || echo '$(srcdir)/'`PrototypeEventListenersTestRunner.cpp

PrototypeEventListenersTestRunner-PrototypeEventListenersTestRunner.obj: PrototypeEventListenersTestRunner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(PrototypeEventListenersTestRunner_CXXFLAGS) $(CXXFLAGS) -MT PrototypeEventListenersTestRunner-PrototypeEventListenersTestRunner.obj -MD -MP -MF $(DEPDIR)/PrototypeEventListenersTestRunner-PrototypeEventListenersTestRunner.Tpo -c -o PrototypeEventListenersTestRunner-PrototypeEventListenersTestRunner.obj `if test -f 'PrototypeEventListenersTestRunner.cpp'; then $(CYGPATH_W) 'PrototypeEventListenersTestRunner.cpp'; else $(CYGPATH_W) '$(srcdir)/PrototypeEventListenersTestRunner.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/PrototypeEventListenersTestRunner-PrototypeEventListenersTestRunner.Tpo $(DEPDIR)/PrototypeEventListenersTestRunner-PrototypeEventListenersTestRunner.Po
#	$(AM_V_CXX) \
#	source='PrototypeEventListenersTestRunner.cpp' object='PrototypeEventListenersTestRunner-PrototypeEventListenersTestRunner.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(PrototypeEventListenersTestRunner_CXXFLAGS) $(CXXFLAGS) -c -o PrototypeEventListenersTestRunner-PrototypeEventListenersTestRunner.obj `if test -f 'PrototypeEventListenersTestRunner.cpp'; then $(CYGPATH_W) 'PrototypeEventListenersTestRunner.cpp'; else $(CYGPATH_W) '$(srcdir)/PrototypeEventListenersTestRunner.cpp'; fi`

ResolveEventsTest_Runner-ResolveEventsTest-Runner.o: ResolveEventsTest-Runner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ResolveEventsTest_Runner_CXXFLAGS) $(CXXFLAGS) -MT ResolveEventsTest_Runner-ResolveEventsTest-Runner.o -MD -MP -MF $(DEPDIR)/ResolveEventsTest_Runner-ResolveEventsTest-Runner.Tpo -c -o ResolveEventsTest_Runner-ResolveEventsTest-Runner.o `test -f 'ResolveEventsTest-Runner.cpp' || echo '$(srcdir)/'`ResolveEventsTest-Runner.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ResolveEventsTest_Runner-ResolveEventsTest-Runner.Tpo $(DEPDIR)/ResolveEventsTest_Runner-ResolveEventsTest-Runner.Po
#	$(AM_V_CXX) \
#	source='ResolveEventsTest-Runner.cpp' object='ResolveEventsTest_Runner-ResolveEventsTest-Runner.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ResolveEventsTest_Runner_CXXFLAGS) $(CXXFLAGS) -c -o ResolveEventsTest_Runner-ResolveEventsTest-Runner.o `test -f 'ResolveEventsTest-Runner.cpp' || echo '$(srcdir)/'`ResolveEventsTest-Runner.cpp

ResolveEventsTest_Runner-ResolveEventsTest-Runner.obj: ResolveEventsTest-Runner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ResolveEventsTest_Runner_CXXFLAGS) $(CXXFLAGS) -MT ResolveEventsTest_Runner-ResolveEventsTest-Runner.obj -MD -MP -MF $(DEPDIR)/ResolveEventsTest_Runner-ResolveEventsTest-Runner.Tpo -c -o ResolveEventsTest_Runner-ResolveEventsTest-Runner.obj `if test -f 'ResolveEventsTest-Runner.cpp'; then $(CYGPATH_W) 'ResolveEventsTest-Runner.cpp'; else $(CYGPATH_W) '$(srcdir)/ResolveEventsTest-Runner.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/ResolveEventsTest_Runner-ResolveEventsTest-Runner.Tpo $(DEPDIR)/ResolveEventsTest_Runner-ResolveEventsTest-Runner.Po
#	$(AM_V_CXX) \
#	source='ResolveEventsTest-Runner.cpp' object='ResolveEventsTest_Runner-ResolveEventsTest-Runner.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ResolveEventsTest_Runner_CXXFLAGS) $(CXXFLAGS) -c -o ResolveEventsTest_Runner-ResolveEventsTest-Runner.obj `if test -f 'ResolveEventsTest-Runner.cpp'; then $(CYGPATH_W) 'ResolveEventsTest-Runner.cpp'; else $(CYGPATH_W) '$(srcdir)/ResolveEventsTest-Runner.cpp'; fi`

RollOverOutTest_Runner-RollOverOutTest-Runner.o: RollOverOutTest-Runner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RollOverOutTest_Runner_CXXFLAGS) $(CXXFLAGS) -MT RollOverOutTest_Runner-RollOverOutTest-Runner.o -MD -MP -MF $(DEPDIR)/RollOverOutTest_Runner-RollOverOutTest-Runner.Tpo -c -o RollOverOutTest_Runner-RollOverOutTest-Runner.o `test -f 'RollOverOutTest-Runner.cpp' || echo '$(srcdir)/'`RollOverOutTest-Runner.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/RollOverOutTest_Runner-RollOverOutTest-Runner.Tpo $(DEPDIR)/RollOverOutTest_Runner-RollOverOutTest-Runner.Po
#	$(AM_V_CXX) \
#	source='RollOverOutTest-Runner.cpp' object='RollOverOutTest_Runner-RollOverOutTest-Runner.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RollOverOutTest_Runner_CXXFLAGS) $(CXXFLAGS) -c -o RollOverOutTest_Runner-RollOverOutTest-Runner.o `test -f 'RollOverOutTest-Runner.cpp' || echo '$(srcdir)/'`RollOverOutTest-Runner.cpp

RollOverOutTest_Runner-RollOverOutTest-Runner.obj: RollOverOutTest-Runner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RollOverOutTest_Runner_CXXFLAGS) $(CXXFLAGS) -MT RollOverOutTest_Runner-RollOverOutTest-Runner.obj -MD -MP -MF $(DEPDIR)/RollOverOutTest_Runner-RollOverOutTest-Runner.Tpo -c -o RollOverOutTest_Runner-RollOverOutTest-Runner.obj `if test -f 'RollOverOutTest-Runner.cpp'; then $(CYGPATH_W) 'RollOverOutTest-Runner.cpp'; else $(CYGPATH_W) '$(srcdir)/RollOverOutTest-Runner.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/RollOverOutTest_Runner-RollOverOutTest-Runner.Tpo $(DEPDIR)/RollOverOutTest_Runner-RollOverOutTest-Runner.Po
#	$(AM_V_CXX) \
#	source='RollOverOutTest-Runner.cpp' object='RollOverOutTest_Runner-RollOverOutTest-Runner.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RollOverOutTest_Runner_CXXFLAGS) $(CXXFLAGS) -c -o RollOverOutTest_Runner-RollOverOutTest-Runner.obj `if test -f 'RollOverOutTest-Runner.cpp'; then $(CYGPATH_W) 'RollOverOutTest-Runner.cpp'; else $(CYGPATH_W) '$(srcdir)/RollOverOutTest-Runner.cpp'; fi`

SpriteButtonEventsTest_Runner-SpriteButtonEventsTest-Runner.o: SpriteButtonEventsTest-Runner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(SpriteButtonEventsTest_Runner_CXXFLAGS) $(CXXFLAGS) -MT SpriteButtonEventsTest_Runner-SpriteButtonEventsTest-Runner.o -MD -MP -MF $(DEPDIR)/SpriteButtonEventsTest_Runner-SpriteButtonEventsTest-Runner.Tpo -c -o SpriteButtonEventsTest_Runner-SpriteButtonEventsTest-Runner.o `test -f 'SpriteButtonEventsTest-Runner.cpp' || echo '$(srcdir)/'`SpriteButtonEventsTest-Runner.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/SpriteButtonEventsTest_Runner-SpriteButtonEventsTest-Runner.Tpo $(DEPDIR)/SpriteButtonEventsTest_Runner-SpriteButtonEventsTest-Runner.Po
#	$(AM_V_CXX) \
#	source='SpriteButtonEventsTest-Runner.cpp' object='SpriteButtonEventsTest_Runner-SpriteButtonEventsTest-Runner.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(SpriteButtonEventsTest_Runner_CXXFLAGS) $(CXXFLAGS) -c -o SpriteButtonEventsTest_Runner-SpriteButtonEventsTest-Runner.o `test -f 'SpriteButtonEventsTest-Runner.cpp' || echo '$(srcdir)/'`SpriteButtonEventsTest-Runner.cpp

SpriteButtonEventsTest_Runner-SpriteButtonEventsTest-Runner.obj: SpriteButtonEventsTest-Runner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(SpriteButtonEventsTest_Runner_CXXFLAGS) $(CXXFLAGS) -MT SpriteButtonEventsTest_Runner-SpriteButtonEventsTest-Runner.obj -MD -MP -MF $(DEPDIR)/SpriteButtonEventsTest_Runner-SpriteButtonEventsTest-Runner.Tpo -c -o SpriteButtonEventsTest_Runner-SpriteButtonEventsTest-Runner.obj `if test -f 'SpriteButtonEventsTest-Runner.cpp'; then $(CYGPATH_W) 'SpriteButtonEventsTest-Runner.cpp'; else $(CYGPATH_W) '$(srcdir)/SpriteButtonEventsTest-Runner.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/SpriteButtonEventsTest_Runner-SpriteButtonEventsTest-Runner.Tpo $(DEPDIR)/SpriteButtonEventsTest_Runner-SpriteButtonEventsTest-Runner.Po
#	$(AM_V_CXX) \
#	source='SpriteButtonEventsTest-Runner.cpp' object='SpriteButtonEventsTest_Runner-SpriteButtonEventsTest-Runner.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(SpriteButtonEventsTest_Runner_CXXFLAGS) $(CXXFLAGS) -c -o SpriteButtonEventsTest_Runner-SpriteButtonEventsTest-Runner.obj `if test -f 'SpriteButtonEventsTest-Runner.cpp'; then $(CYGPATH_W) 'SpriteButtonEventsTest-Runner.cpp'; else $(CYGPATH_W) '$(srcdir)/SpriteButtonEventsTest-Runner.cpp'; fi`

Video_EmbedSquareTestRunner-Video-EmbedSquareTestRunner.o: Video-EmbedSquareTestRunner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Video_EmbedSquareTestRunner_CXXFLAGS) $(CXXFLAGS) -MT Video_EmbedSquareTestRunner-Video-EmbedSquareTestRunner.o -MD -MP -MF $(DEPDIR)/Video_EmbedSquareTestRunner-Video-EmbedSquareTestRunner.Tpo -c -o Video_EmbedSquareTestRunner-Video-EmbedSquareTestRunner.o `test -f 'Video-EmbedSquareTestRunner.cpp' || echo '$(srcdir)/'`Video-EmbedSquareTestRunner.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/Video_EmbedSquareTestRunner-Video-EmbedSquareTestRunner.Tpo $(DEPDIR)/Video_EmbedSquareTestRunner-Video-EmbedSquareTestRunner.Po
#	$(AM_V_CXX) \
#	source='Video-EmbedSquareTestRunner.cpp' object='Video_EmbedSquareTestRunner-Video-EmbedSquareTestRunner.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Video_EmbedSquareTestRunner_CXXFLAGS) $(CXXFLAGS) -c -o Video_EmbedSquareTestRunner-Video-EmbedSquareTestRunner.o `test -f 'Video-EmbedSquareTestRunner.cpp' || echo '$(srcdir)/'`Video-EmbedSquareTestRunner.cpp

Video_EmbedSquareTestRunner-Video-EmbedSquareTestRunner.obj: Video-EmbedSquareTestRunner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Video_EmbedSquareTestRunner_CXXFLAGS) $(CXXFLAGS) -MT Video_EmbedSquareTestRunner-Video-EmbedSquareTestRunner.obj -MD -MP -MF $(DEPDIR)/Video_EmbedSquareTestRunner-Video-EmbedSquareTestRunner.Tpo -c -o Video_EmbedSquareTestRunner-Video-EmbedSquareTestRunner.obj `if test -f 'Video-EmbedSquareTestRunner.cpp'; then $(CYGPATH_W) 'Video-EmbedSquareTestRunner.cpp'; else $(CYGPATH_W) '$(srcdir)/Video-EmbedSquareTestRunner.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/Video_EmbedSquareTestRunner-Video-EmbedSquareTestRunner.Tpo $(DEPDIR)/Video_EmbedSquareTestRunner-Video-EmbedSquareTestRunner.Po
#	$(AM_V_CXX) \
#	source='Video-EmbedSquareTestRunner.cpp' object='Video_EmbedSquareTestRunner-Video-EmbedSquareTestRunner.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Video_EmbedSquareTestRunner_CXXFLAGS) $(CXXFLAGS) -c -o Video_EmbedSquareTestRunner-Video-EmbedSquareTestRunner.obj `if test -f 'Video-EmbedSquareTestRunner.cpp'; then $(CYGPATH_W) 'Video-EmbedSquareTestRunner.cpp'; else $(CYGPATH_W) '$(srcdir)/Video-EmbedSquareTestRunner.cpp'; fi`

attachMovieLoopingTestRunner-attachMovieLoopingTestRunner.o: attachMovieLoopingTestRunner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(attachMovieLoopingTestRunner_CXXFLAGS) $(CXXFLAGS) -MT attachMovieLoopingTestRunner-attachMovieLoopingTestRunner.o -MD -MP -MF $(DEPDIR)/attachMovieLoopingTestRunner-attachMovieLoopingTestRunner.Tpo -c -o attachMovieLoopingTestRunner-attachMovieLoopingTestRunner.o `test -f 'attachMovieLoopingTestRunner.cpp' || echo '$(srcdir)/'`attachMovieLoopingTestRunner.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/attachMovieLoopingTestRunner-attachMovieLoopingTestRunner.Tpo $(DEPDIR)/attachMovieLoopingTestRunner-attachMovieLoopingTestRunner.Po
#	$(AM_V_CXX) \
#	source='attachMovieLoopingTestRunner.cpp' object='attachMovieLoopingTestRunner-attachMovieLoopingTestRunner.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(attachMovieLoopingTestRunner_CXXFLAGS) $(CXXFLAGS) -c -o attachMovieLoopingTestRunner-attachMovieLoopingTestRunner.o `test -f 'attachMovieLoopingTestRunner.cpp' || echo '$(srcdir)/'`attachMovieLoopingTestRunner.cpp

attachMovieLoopingTestRunner-attachMovieLoopingTestRunner.obj: attachMovieLoopingTestRunner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(attachMovieLoopingTestRunner_CXXFLAGS) $(CXXFLAGS) -MT attachMovieLoopingTestRunner-attachMovieLoopingTestRunner.obj -MD -MP -MF $(DEPDIR)/attachMovieLoopingTestRunner-attachMovieLoopingTestRunner.Tpo -c -o attachMovieLoopingTestRunner-attachMovieLoopingTestRunner.obj `if test -f 'attachMovieLoopingTestRunner.cpp'; then $(CYGPATH_W) 'attachMovieLoopingTestRunner.cpp'; else $(CYGPATH_W) '$(srcdir)/attachMovieLoopingTestRunner.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/attachMovieLoopingTestRunner-attachMovieLoopingTestRunner.Tpo $(DEPDIR)/attachMovieLoopingTestRunner-attachMovieLoopingTestRunner.Po
#	$(AM_V_CXX) \
#	source='attachMovieLoopingTestRunner.cpp' object='attachMovieLoopingTestRunner-attachMovieLoopingTestRunner.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(attachMovieLoopingTestRunner_CXXFLAGS) $(CXXFLAGS) -c -o attachMovieLoopingTestRunner-attachMovieLoopingTestRunner.obj `if test -f 'attachMovieLoopingTestRunner.cpp'; then $(CYGPATH_W) 'attachMovieLoopingTestRunner.cpp'; else $(CYGPATH_W) '$(srcdir)/attachMovieLoopingTestRunner.cpp'; fi`

attachMovieTestRunner-attachMovieTestRunner.o: attachMovieTestRunner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(attachMovieTestRunner_CXXFLAGS) $(CXXFLAGS) -MT attachMovieTestRunner-attachMovieTestRunner.o -MD -MP -MF $(DEPDIR)/attachMovieTestRunner-attachMovieTestRunner.Tpo -c -o attachMovieTestRunner-attachMovieTestRunner.o `test -f 'attachMovieTestRunner.cpp' || echo '$(srcdir)/'`attachMovieTestRunner.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/attachMovieTestRunner-attachMovieTestRunner.Tpo $(DEPDIR)/attachMovieTestRunner-attachMovieTestRunner.Po
#	$(AM_V_CXX) \
#	source='attachMovieTestRunner.cpp' object='attachMovieTestRunner-attachMovieTestRunner.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(attachMovieTestRunner_CXXFLAGS) $(CXXFLAGS) -c -o attachMovieTestRunner-attachMovieTestRunner.o `test -f 'attachMovieTestRunner.cpp' || echo '$(srcdir)/'`attachMovieTestRunner.cpp

attachMovieTestRunner-attachMovieTestRunner.obj: attachMovieTestRunner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(attachMovieTestRunner_CXXFLAGS) $(CXXFLAGS) -MT attachMovieTestRunner-attachMovieTestRunner.obj -MD -MP -MF $(DEPDIR)/attachMovieTestRunner-attachMovieTestRunner.Tpo -c -o attachMovieTestRunner-attachMovieTestRunner.obj `if test -f 'attachMovieTestRunner.cpp'; then $(CYGPATH_W) 'attachMovieTestRunner.cpp'; else $(CYGPATH_W) '$(srcdir)/attachMovieTestRunner.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/attachMovieTestRunner-attachMovieTestRunner.Tpo $(DEPDIR)/attachMovieTestRunner-attachMovieTestRunner.Po
#	$(AM_V_CXX) \
#	source='attachMovieTestRunner.cpp' object='attachMovieTestRunner-attachMovieTestRunner.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(attachMovieTestRunner_CXXFLAGS) $(CXXFLAGS) -c -o attachMovieTestRunner-attachMovieTestRunner.obj `if test -f 'attachMovieTestRunner.cpp'; then $(CYGPATH_W) 'attachMovieTestRunner.cpp'; else $(CYGPATH_W) '$(srcdir)/attachMovieTestRunner.cpp'; fi`

intervalTestRunner-intervalTestRunner.o: intervalTestRunner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(intervalTestRunner_CXXFLAGS) $(CXXFLAGS) -MT intervalTestRunner-intervalTestRunner.o -MD -MP -MF $(DEPDIR)/intervalTestRunner-intervalTestRunner.Tpo -c -o intervalTestRunner-intervalTestRunner.o `test -f 'intervalTestRunner.cpp' || echo '$(srcdir)/'`intervalTestRunner.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/intervalTestRunner-intervalTestRunner.Tpo $(DEPDIR)/intervalTestRunner-intervalTestRunner.Po
#	$(AM_V_CXX) \
#	source='intervalTestRunner.cpp' object='intervalTestRunner-intervalTestRunner.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(intervalTestRunner_CXXFLAGS) $(CXXFLAGS) -c -o intervalTestRunner-intervalTestRunner.o `test -f 'intervalTestRunner.cpp' || echo '$(srcdir)/'`intervalTestRunner.cpp

intervalTestRunner-intervalTestRunner.obj: intervalTestRunner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(intervalTestRunner_CXXFLAGS) $(CXXFLAGS) -MT intervalTestRunner-intervalTestRunner.obj -MD -MP -MF $(DEPDIR)/intervalTestRunner-intervalTestRunner.Tpo -c -o intervalTestRunner-intervalTestRunner.obj `if test -f 'intervalTestRunner.cpp'; then $(CYGPATH_W) 'intervalTestRunner.cpp'; else $(CYGPATH_W) '$(srcdir)/intervalTestRunner.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/intervalTestRunner-intervalTestRunner.Tpo $(DEPDIR)/intervalTestRunner-intervalTestRunner.Po
#	$(AM_V_CXX) \
#	source='intervalTestRunner.cpp' object='intervalTestRunner-intervalTestRunner.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(intervalTestRunner_CXXFLAGS) $(CXXFLAGS) -c -o intervalTestRunner-intervalTestRunner.obj `if test -f 'intervalTestRunner.cpp'; then $(CYGPATH_W) 'intervalTestRunner.cpp'; else $(CYGPATH_W) '$(srcdir)/intervalTestRunner.cpp'; fi`

key_event_testrunner-key_event_testrunner.o: key_event_testrunner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(key_event_testrunner_CXXFLAGS) $(CXXFLAGS) -MT key_event_testrunner-key_event_testrunner.o -MD -MP -MF $(DEPDIR)/key_event_testrunner-key_event_testrunner.Tpo -c -o key_event_testrunner-key_event_testrunner.o `test -f 'key_event_testrunner.cpp' || echo '$(srcdir)/'`key_event_testrunner.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/key_event_testrunner-key_event_testrunner.Tpo $(DEPDIR)/key_event_testrunner-key_event_testrunner.Po
#	$(AM_V_CXX) \
#	source='key_event_testrunner.cpp' object='key_event_testrunner-key_event_testrunner.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(key_event_testrunner_CXXFLAGS) $(CXXFLAGS) -c -o key_event_testrunner-key_event_testrunner.o `test -f 'key_event_testrunner.cpp' || echo '$(srcdir)/'`key_event_testrunner.cpp

key_event_testrunner-key_event_testrunner.obj: key_event_testrunner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(key_event_testrunner_CXXFLAGS) $(CXXFLAGS) -MT key_event_testrunner-key_event_testrunner.obj -MD -MP -MF $(DEPDIR)/key_event_testrunner-key_event_testrunner.Tpo -c -o key_event_testrunner-key_event_testrunner.obj `if test -f 'key_event_testrunner.cpp'; then $(CYGPATH_W) 'key_event_testrunner.cpp'; else $(CYGPATH_W) '$(srcdir)/key_event_testrunner.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/key_event_testrunner-key_event_testrunner.Tpo $(DEPDIR)/key_event_testrunner-key_event_testrunner.Po
#	$(AM_V_CXX) \
#	source='key_event_testrunner.cpp' object='key_event_testrunner-key_event_testrunner.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(key_event_testrunner_CXXFLAGS) $(CXXFLAGS) -c -o key_event_testrunner-key_event_testrunner.obj `if test -f 'key_event_testrunner.cpp'; then $(CYGPATH_W) 'key_event_testrunner.cpp'; else $(CYGPATH_W) '$(srcdir)/key_event_testrunner.cpp'; fi`

masks_test2runner-masks_test2runner.o: masks_test2runner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(masks_test2runner_CXXFLAGS) $(CXXFLAGS) -MT masks_test2runner-masks_test2runner.o -MD -MP -MF $(DEPDIR)/masks_test2runner-masks_test2runner.Tpo -c -o masks_test2runner-masks_test2runner.o `test -f 'masks_test2runner.cpp' || echo '$(srcdir)/'`masks_test2runner.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/masks_test2runner-masks_test2runner.Tpo $(DEPDIR)/masks_test2runner-masks_test2runner.Po
#	$(AM_V_CXX) \
#	source='masks_test2runner.cpp' object='masks_test2runner-masks_test2runner.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(masks_test2runner_CXXFLAGS) $(CXXFLAGS) -c -o masks_test2runner-masks_test2runner.o `test -f 'masks_test2runner.cpp' || echo '$(srcdir)/'`masks_test2runner.cpp

masks_test2runner-masks_test2runner.obj: masks_test2runner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(masks_test2runner_CXXFLAGS) $(CXXFLAGS) -MT masks_test2runner-masks_test2runner.obj -MD -MP -MF $(DEPDIR)/masks_test2runner-masks_test2runner.Tpo -c -o masks_test2runner-masks_test2runner.obj `if test -f 'masks_test2runner.cpp'; then $(CYGPATH_W) 'masks_test2runner.cpp'; else $(CYGPATH_W) '$(srcdir)/masks_test2runner.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/masks_test2runner-masks_test2runner.Tpo $(DEPDIR)/masks_test2runner-masks_test2runner.Po
#	$(AM_V_CXX) \
#	source='masks_test2runner.cpp' object='masks_test2runner-masks_test2runner.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(masks_test2runner_CXXFLAGS) $(CXXFLAGS) -c -o masks_test2runner-masks_test2runner.obj `if test -f 'masks_test2runner.cpp'; then $(CYGPATH_W) 'masks_test2runner.cpp'; else $(CYGPATH_W) '$(srcdir)/masks_test2runner.cpp'; fi`

masks_testrunner-masks_testrunner.o: masks_testrunner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(masks_testrunner_CXXFLAGS) $(CXXFLAGS) -MT masks_testrunner-masks_testrunner.o -MD -MP -MF $(DEPDIR)/masks_testrunner-masks_testrunner.Tpo -c -o masks_testrunner-masks_testrunner.o `test -f 'masks_testrunner.cpp' || echo '$(srcdir)/'`masks_testrunner.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/masks_testrunner-masks_testrunner.Tpo $(DEPDIR)/masks_testrunner-masks_testrunner.Po
#	$(AM_V_CXX) \
#	source='masks_testrunner.cpp' object='masks_testrunner-masks_testrunner.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(masks_testrunner_CXXFLAGS) $(CXXFLAGS) -c -o masks_testrunner-masks_testrunner.o `test -f 'masks_testrunner.cpp' || echo '$(srcdir)/'`masks_testrunner.cpp

masks_testrunner-masks_testrunner.obj: masks_testrunner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(masks_testrunner_CXXFLAGS) $(CXXFLAGS) -MT masks_testrunner-masks_testrunner.obj -MD -MP -MF $(DEPDIR)/masks_testrunner-masks_testrunner.Tpo -c -o masks_testrunner-masks_testrunner.obj `if test -f 'masks_testrunner.cpp'; then $(CYGPATH_W) 'masks_testrunner.cpp'; else $(CYGPATH_W) '$(srcdir)/masks_testrunner.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/masks_testrunner-masks_testrunner.Tpo $(DEPDIR)/masks_testrunner-masks_testrunner.Po
#	$(AM_V_CXX) \
#	source='masks_testrunner.cpp' object='masks_testrunner-masks_testrunner.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(masks_testrunner_CXXFLAGS) $(CXXFLAGS) -c -o masks_testrunner-masks_testrunner.obj `if test -f 'masks_testrunner.cpp'; then $(CYGPATH_W) 'masks_testrunner.cpp'; else $(CYGPATH_W) '$(srcdir)/masks_testrunner.cpp'; fi`

morph_test1runner-morph_test1runner.o: morph_test1runner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(morph_test1runner_CXXFLAGS) $(CXXFLAGS) -MT morph_test1runner-morph_test1runner.o -MD -MP -MF $(DEPDIR)/morph_test1runner-morph_test1runner.Tpo -c -o morph_test1runner-morph_test1runner.o `test -f 'morph_test1runner.cpp' || echo '$(srcdir)/'`morph_test1runner.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/morph_test1runner-morph_test1runner.Tpo $(DEPDIR)/morph_test1runner-morph_test1runner.Po
#	$(AM_V_CXX) \
#	source='morph_test1runner.cpp' object='morph_test1runner-morph_test1runner.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(morph_test1runner_CXXFLAGS) $(CXXFLAGS) -c -o morph_test1runner-morph_test1runner.o `test -f 'morph_test1runner.cpp' || echo '$(srcdir)/'`morph_test1runner.cpp

morph_test1runner-morph_test1runner.obj: morph_test1runner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(morph_test1runner_CXXFLAGS) $(CXXFLAGS) -MT morph_test1runner-morph_test1runner.obj -MD -MP -MF $(DEPDIR)/morph_test1runner-morph_test1runner.Tpo -c -o morph_test1runner-morph_test1runner.obj `if test -f 'morph_test1runner.cpp'; then $(CYGPATH_W) 'morph_test1runner.cpp'; else $(CYGPATH_W) '$(srcdir)/morph_test1runner.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/morph_test1runner-morph_test1runner.Tpo $(DEPDIR)/morph_test1runner-morph_test1runner.Po
#	$(AM_V_CXX) \
#	source='morph_test1runner.cpp' object='morph_test1runner-morph_test1runner.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(morph_test1runner_CXXFLAGS) $(CXXFLAGS) -c -o morph_test1runner-morph_test1runner.obj `if test -f 'morph_test1runner.cpp'; then $(CYGPATH_W) 'morph_test1runner.cpp'; else $(CYGPATH_W) '$(srcdir)/morph_test1runner.cpp'; fi`

replace_buttons1test_runner-replace_buttons1test_runner.o: replace_buttons1test_runner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(replace_buttons1test_runner_CXXFLAGS) $(CXXFLAGS) -MT replace_buttons1test_runner-replace_buttons1test_runner.o -MD -MP -MF $(DEPDIR)/replace_buttons1test_runner-replace_buttons1test_runner.Tpo -c -o replace_buttons1test_runner-replace_buttons1test_runner.o `test -f 'replace_buttons1test_runner.cpp' || echo '$(srcdir)/'`replace_buttons1test_runner.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/replace_buttons1test_runner-replace_buttons1test_runner.Tpo $(DEPDIR)/replace_buttons1test_runner-replace_buttons1test_runner.Po
#	$(AM_V_CXX) \
#	source='replace_buttons1test_runner.cpp' object='replace_buttons1test_runner-replace_buttons1test_runner.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(replace_buttons1test_runner_CXXFLAGS) $(CXXFLAGS) -c -o replace_buttons1test_runner-replace_buttons1test_runner.o `test -f 'replace_buttons1test_runner.cpp' || echo '$(srcdir)/'`replace_buttons1test_runner.cpp

replace_buttons1test_runner-replace_buttons1test_runner.obj: replace_buttons1test_runner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(replace_buttons1test_runner_CXXFLAGS) $(CXXFLAGS) -MT replace_buttons1test_runner-replace_buttons1test_runner.obj -MD -MP -MF $(DEPDIR)/replace_buttons1test_runner-replace_buttons1test_runner.Tpo -c -o replace_buttons1test_runner-replace_buttons1test_runner.obj `if test -f 'replace_buttons1test_runner.cpp'; then $(CYGPATH_W) 'replace_buttons1test_runner.cpp'; else $(CYGPATH_W) '$(srcdir)/replace_buttons1test_runner.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/replace_buttons1test_runner-replace_buttons1test_runner.Tpo $(DEPDIR)/replace_buttons1test_runner-replace_buttons1test_runner.Po
#	$(AM_V_CXX) \
#	source='replace_buttons1test_runner.cpp' object='replace_buttons1test_runner-replace_buttons1test_runner.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(replace_buttons1test_runner_CXXFLAGS) $(CXXFLAGS) -c -o replace_buttons1test_runner-replace_buttons1test_runner.obj `if test -f 'replace_buttons1test_runner.cpp'; then $(CYGPATH_W) 'replace_buttons1test_runner.cpp'; else $(CYGPATH_W) '$(srcdir)/replace_buttons1test_runner.cpp'; fi`

replace_shapes1test_runner-replace_shapes1test_runner.o: replace_shapes1test_runner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(replace_shapes1test_runner_CXXFLAGS) $(CXXFLAGS) -MT replace_shapes1test_runner-replace_shapes1test_runner.o -MD -MP -MF $(DEPDIR)/replace_shapes1test_runner-replace_shapes1test_runner.Tpo -c -o replace_shapes1test_runner-replace_shapes1test_runner.o `test -f 'replace_shapes1test_runner.cpp' || echo '$(srcdir)/'`replace_shapes1test_runner.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/replace_shapes1test_runner-replace_shapes1test_runner.Tpo $(DEPDIR)/replace_shapes1test_runner-replace_shapes1test_runner.Po
#	$(AM_V_CXX) \
#	source='replace_shapes1test_runner.cpp' object='replace_shapes1test_runner-replace_shapes1test_runner.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(replace_shapes1test_runner_CXXFLAGS) $(CXXFLAGS) -c -o replace_shapes1test_runner-replace_shapes1test_runner.o `test -f 'replace_shapes1test_runner.cpp' || echo '$(srcdir)/'`replace_shapes1test_runner.cpp

replace_shapes1test_runner-replace_shapes1test_runner.obj: replace_shapes1test_runner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(replace_shapes1test_runner_CXXFLAGS) $(CXXFLAGS) -MT replace_shapes1test_runner-replace_shapes1test_runner.obj -MD -MP -MF $(DEPDIR)/replace_shapes1test_runner-replace_shapes1test_runner.Tpo -c -o replace_shapes1test_runner-replace_shapes1test_runner.obj `if test -f 'replace_shapes1test_runner.cpp'; then $(CYGPATH_W) 'replace_shapes1test_runner.cpp'; else $(CYGPATH_W) '$(srcdir)/replace_shapes1test_runner.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/replace_shapes1test_runner-replace_shapes1test_runner.Tpo $(DEPDIR)/replace_shapes1test_runner-replace_shapes1test_runner.Po
#	$(AM_V_CXX) \
#	source='replace_shapes1test_runner.cpp' object='replace_shapes1test_runner-replace_shapes1test_runner.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(replace_shapes1test_runner_CXXFLAGS) $(CXXFLAGS) -c -o replace_shapes1test_runner-replace_shapes1test_runner.obj `if test -f 'replace_shapes1test_runner.cpp'; then $(CYGPATH_W) 'replace_shapes1test_runner.cpp'; else $(CYGPATH_W) '$(srcdir)/replace_shapes1test_runner.cpp'; fi`

replace_sprites1test_runner-replace_sprites1test_runner.o: replace_sprites1test_runner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(replace_sprites1test_runner_CXXFLAGS) $(CXXFLAGS) -MT replace_sprites1test_runner-replace_sprites1test_runner.o -MD -MP -MF $(DEPDIR)/replace_sprites1test_runner-replace_sprites1test_runner.Tpo -c -o replace_sprites1test_runner-replace_sprites1test_runner.o `test -f 'replace_sprites1test_runner.cpp' || echo '$(srcdir)/'`replace_sprites1test_runner.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/replace_sprites1test_runner-replace_sprites1test_runner.Tpo $(DEPDIR)/replace_sprites1test_runner-replace_sprites1test_runner.Po
#	$(AM_V_CXX) \
#	source='replace_sprites1test_runner.cpp' object='replace_sprites1test_runner-replace_sprites1test_runner.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(replace_sprites1test_runner_CXXFLAGS) $(CXXFLAGS) -c -o replace_sprites1test_runner-replace_sprites1test_runner.o `test -f 'replace_sprites1test_runner.cpp' || echo '$(srcdir)/'`replace_sprites1test_runner.cpp

replace_sprites1test_runner-replace_sprites1test_runner.obj: replace_sprites1test_runner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(replace_sprites1test_runner_CXXFLAGS) $(CXXFLAGS) -MT replace_sprites1test_runner-replace_sprites1test_runner.obj -MD -MP -MF $(DEPDIR)/replace_sprites1test_runner-replace_sprites1test_runner.Tpo -c -o replace_sprites1test_runner-replace_sprites1test_runner.obj `if test -f 'replace_sprites1test_runner.cpp'; then $(CYGPATH_W) 'replace_sprites1test_runner.cpp'; else $(CYGPATH_W) '$(srcdir)/replace_sprites1test_runner.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/replace_sprites1test_runner-replace_sprites1test_runner.Tpo $(DEPDIR)/replace_sprites1test_runner-replace_sprites1test_runner.Po
#	$(AM_V_CXX) \
#	source='replace_sprites1test_runner.cpp' object='replace_sprites1test_runner-replace_sprites1test_runner.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(replace_sprites1test_runner_CXXFLAGS) $(CXXFLAGS) -c -o replace_sprites1test_runner-replace_sprites1test_runner.obj `if test -f 'replace_sprites1test_runner.cpp'; then $(CYGPATH_W) 'replace_sprites1test_runner.cpp'; else $(CYGPATH_W) '$(srcdir)/replace_sprites1test_runner.cpp'; fi`

root_stop_testrunner-root_stop_testrunner.o: root_stop_testrunner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(root_stop_testrunner_CXXFLAGS) $(CXXFLAGS) -MT root_stop_testrunner-root_stop_testrunner.o -MD -MP -MF $(DEPDIR)/root_stop_testrunner-root_stop_testrunner.Tpo -c -o root_stop_testrunner-root_stop_testrunner.o `test -f 'root_stop_testrunner.cpp' || echo '$(srcdir)/'`root_stop_testrunner.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/root_stop_testrunner-root_stop_testrunner.Tpo $(DEPDIR)/root_stop_testrunner-root_stop_testrunner.Po
#	$(AM_V_CXX) \
#	source='root_stop_testrunner.cpp' object='root_stop_testrunner-root_stop_testrunner.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(root_stop_testrunner_CXXFLAGS) $(CXXFLAGS) -c -o root_stop_testrunner-root_stop_testrunner.o `test -f 'root_stop_testrunner.cpp' || echo '$(srcdir)/'`root_stop_testrunner.cpp

root_stop_testrunner-root_stop_testrunner.obj: root_stop_testrunner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(root_stop_testrunner_CXXFLAGS) $(CXXFLAGS) -MT root_stop_testrunner-root_stop_testrunner.obj -MD -MP -MF $(DEPDIR)/root_stop_testrunner-root_stop_testrunner.Tpo -c -o root_stop_testrunner-root_stop_testrunner.obj `if test -f 'root_stop_testrunner.cpp'; then $(CYGPATH_W) 'root_stop_testrunner.cpp'; else $(CYGPATH_W) '$(srcdir)/root_stop_testrunner.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/root_stop_testrunner-root_stop_testrunner.Tpo $(DEPDIR)/root_stop_testrunner-root_stop_testrunner.Po
#	$(AM_V_CXX) \
#	source='root_stop_testrunner.cpp' object='root_stop_testrunner-root_stop_testrunner.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(root_stop_testrunner_CXXFLAGS) $(CXXFLAGS) -c -o root_stop_testrunner-root_stop_testrunner.obj `if test -f 'root_stop_testrunner.cpp'; then $(CYGPATH_W) 'root_stop_testrunner.cpp'; else $(CYGPATH_W) '$(srcdir)/root_stop_testrunner.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
site.exp: Makefile
	@echo 'Making a new site.exp file...'
	@echo '## these variables are automatically generated by make ##' >site.tmp
	@echo '# Do not edit here.  If you wish to override these values' >>site.tmp
	@echo '# edit the last section' >>site.tmp
	@echo 'set srcdir $(srcdir)' >>site.tmp
	@echo "set objdir `pwd`" >>site.tmp
	@echo 'set build_alias "$(build_alias)"' >>site.tmp
	@echo 'set build_triplet $(build_triplet)' >>site.tmp
	@echo 'set host_alias "$(host_alias)"' >>site.tmp
	@echo 'set host_triplet $(host_triplet)' >>site.tmp
	@echo '## All variables above are generated by configure. Do Not Edit ##' >>site.tmp
	@test ! -f site.exp || \
	  sed '1,/^## All variables above are.*##/ d' site.exp >> site.tmp
	@-rm -f site.bak
	@test ! -f site.exp || mv site.exp site.bak
	@mv site.tmp site.exp

distclean-DEJAGNU:
	-rm -f site.exp site.bak
	-l='$(DEJATOOL)'; for tool in $$l; do \
	  rm -f $$tool.sum $$tool.log; \
	done

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_LTLIBRARIES) $(check_PROGRAMS) \
	  $(check_SCRIPTS)
	$(MAKE) $(AM_MAKEFLAGS) check-DEJAGNU
check: check-recursive
all-am: Makefile
installdirs: installdirs-recursive
installdirs-am:
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-checkLTLIBRARIES clean-checkPROGRAMS clean-generic \
	clean-libtool clean-local mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-DEJAGNU distclean-compile \
	distclean-generic distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am:

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am:

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) check-am \
	ctags-recursive install-am install-strip tags-recursive

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am check check-DEJAGNU check-am clean \
	clean-checkLTLIBRARIES clean-checkPROGRAMS clean-generic \
	clean-libtool clean-local ctags ctags-recursive distclean \
	distclean-DEJAGNU distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-recursive uninstall uninstall-am

definebitsjpeg2.swf: definebitsjpeg2
	./definebitsjpeg2 $(srcdir)/../media/red.jpg

DefineTextTest.swf: DefineTextTest
	./DefineTextTest $(abs_mediadir)

Version4Loader.swf: $(srcdir)/Version4Loader.as 
	$(MAKESWF) $(MAKESWF_FLAGS) -o $@ -v4 $(srcdir)/Version4Loader.as
Version5Loaded.swf: $(srcdir)/Version5Loaded.as Dejagnu.swf
	$(MAKESWF) $(MAKESWF_FLAGS) -o $@ Dejagnu.swf -v5 $(srcdir)/Version5Loaded.as
MixedVersion4And5Runner: Version4Loader.swf Version5Loaded.swf
	sh $(srcdir)/../generic-testrunner.sh $(top_builddir) Version5Loaded.swf > $@
	chmod 755 $@

TextSnapshotTest.swf: TextSnapshotTest
	./TextSnapshotTest $(abs_mediadir)

TextSnapshotTest-Runner: $(srcdir)/../generic-testrunner.sh TextSnapshotTest.swf
	sh $(srcdir)/../generic-testrunner.sh $(top_builddir) TextSnapshotTest.swf > $@
	chmod 755 $@

DeviceFontTestRunner: $(srcdir)/../generic-testrunner.sh DeviceFontTest.swf
	sh $(srcdir)/../generic-testrunner.sh $(top_builddir) DeviceFontTest.swf > $@
	chmod 755 $@
DeviceFontTest.swf: DeviceFontTest
	./DeviceFontTest $(abs_mediadir)

EmbeddedFontTestRunner: $(srcdir)/../generic-testrunner.sh EmbeddedFontTest.swf
	sh $(srcdir)/../generic-testrunner.sh $(top_builddir) EmbeddedFontTest.swf > $@
	chmod 755 $@
EmbeddedFontTest.swf: EmbeddedFontTest
	./EmbeddedFontTest $(abs_mediadir)

DefineEditTextTest.swf: DefineEditTextTest
	./DefineEditTextTest $(abs_mediadir)

opcode_guard_test.swf: opcode_guard_test
	./opcode_guard_test $(abs_mediadir)

opcode_guard_testrunner: $(srcdir)/../generic-testrunner.sh opcode_guard_test.swf
	sh $(srcdir)/../generic-testrunner.sh $(top_builddir) opcode_guard_test.swf > $@
	chmod 755 $@

runtime_vm_stack_test.swf: runtime_vm_stack_test
	./runtime_vm_stack_test $(abs_mediadir)

runtime_vm_stack_testrunner: $(srcdir)/../generic-testrunner.sh runtime_vm_stack_test.swf
	sh $(srcdir)/../generic-testrunner.sh $(top_builddir) runtime_vm_stack_test.swf > $@
	chmod 755 $@

new_child_in_unload_test.swf: new_child_in_unload_test
	./new_child_in_unload_test $(abs_mediadir)

new_child_in_unload_testrunner: $(srcdir)/../generic-testrunner.sh new_child_in_unload_test.swf
	sh $(srcdir)/../generic-testrunner.sh $(top_builddir) new_child_in_unload_test.swf > $@
	chmod 755 $@

PlaceObject2Test.swf: PlaceObject2Test
	./PlaceObject2Test $(abs_mediadir)

PlaceObject2TestRunner: $(srcdir)/../generic-testrunner.sh PlaceObject2Test.swf
	sh $(srcdir)/../generic-testrunner.sh -r5 $(top_builddir) PlaceObject2Test.swf > $@
	chmod 755 $@

DefineEditTextVariableNameTest.swf: DefineEditTextVariableNameTest
	./DefineEditTextVariableNameTest $(abs_mediadir)

DefineEditTextVariableNameTest2.swf: DefineEditTextVariableNameTest2
	./DefineEditTextVariableNameTest2 $(abs_mediadir)

DefineEditTextVariableNameTest2-Runner: $(srcdir)/../generic-testrunner.sh DefineEditTextVariableNameTest2.swf
	sh $(srcdir)/../generic-testrunner.sh $(top_builddir) DefineEditTextVariableNameTest2.swf > $@
	chmod 755 $@

timeline_var_test.swf: timeline_var_test
	./timeline_var_test $(abs_mediadir)

timeline_var_test-Runner: $(srcdir)/../generic-testrunner.sh timeline_var_test.swf
	sh $(srcdir)/../generic-testrunner.sh $(top_builddir) timeline_var_test.swf > $@
	chmod 755 $@

root_stop_test.swf: root_stop_test
	./root_stop_test $(abs_mediadir)

shape_test.swf: shape_test
	./shape_test $(abs_mediadir)

shape_testrunner: $(srcdir)/../generic-testrunner.sh shape_test.swf
	sh $(srcdir)/../generic-testrunner.sh -f20 $(top_builddir) shape_test.swf > $@
	chmod 755 $@

morph_test1.swf: morph_test1
	./morph_test1 $(abs_mediadir)

key_event_test.swf: key_event_test
	./key_event_test $(abs_mediadir)

KeyEventOrder.swf: KeyEventOrder
	./KeyEventOrder $(abs_mediadir)

place_object_test.swf: place_object_test
	./place_object_test $(abs_mediadir)

place_object_testrunner: $(srcdir)/../generic-testrunner.sh place_object_test.swf
	sh $(srcdir)/../generic-testrunner.sh -r5 $(top_builddir) place_object_test.swf > $@
	chmod 755 $@

place_object_test2.swf: place_object_test2
	./place_object_test2 $(abs_mediadir)

place_object_test2runner: $(srcdir)/../generic-testrunner.sh place_object_test2.swf
	sh $(srcdir)/../generic-testrunner.sh -r5 $(top_builddir) place_object_test2.swf > $@
	chmod 755 $@

move_object_test.swf: move_object_test
	./move_object_test $(abs_mediadir)

move_object_testrunner: $(srcdir)/../generic-testrunner.sh move_object_test.swf
	sh $(srcdir)/../generic-testrunner.sh -r5 $(top_builddir) move_object_test.swf > $@
	chmod 755 $@

place_and_remove_object_test.swf: place_and_remove_object_test
	./place_and_remove_object_test $(abs_mediadir)

place_and_remove_object_testrunner: $(srcdir)/../generic-testrunner.sh place_and_remove_object_test.swf
	sh $(srcdir)/../generic-testrunner.sh -r5 $(top_builddir) place_and_remove_object_test.swf > $@
	chmod 755 $@

place_and_remove_object_insane_test.swf: place_and_remove_object_insane_test
	./place_and_remove_object_insane_test $(abs_mediadir)

place_and_remove_object_insane_testrunner: $(srcdir)/../generic-testrunner.sh place_and_remove_object_insane_test.swf
	sh $(srcdir)/../generic-testrunner.sh -r5 $(top_builddir) place_and_remove_object_insane_test.swf > $@
	chmod 755 $@

unload_movieclip_test1.swf: unload_movieclip_test1
	./unload_movieclip_test1 $(abs_mediadir)

unload_movieclip_test1runner: $(srcdir)/../generic-testrunner.sh unload_movieclip_test1.swf
	sh $(srcdir)/../generic-testrunner.sh -f10 $(top_builddir) unload_movieclip_test1.swf > $@
	chmod 755 $@

DepthLimitsTest.swf: DepthLimitsTest
	./DepthLimitsTest $(abs_mediadir)

DepthLimitsTestrunner: $(srcdir)/../generic-testrunner.sh DepthLimitsTest.swf
	sh $(srcdir)/../generic-testrunner.sh -r5 $(top_builddir) DepthLimitsTest.swf > $@
	chmod 755 $@

replace_shapes1test.swf: replace_shapes1test
	./replace_shapes1test $(abs_mediadir)

replace_sprites1test.swf: replace_sprites1test
	./replace_sprites1test $(abs_mediadir)

replace_buttons1test.swf: replace_buttons1test
	./replace_buttons1test $(abs_mediadir)

masks_test.swf: masks_test
	./masks_test $(abs_mediadir)

masks_test2.swf: masks_test2
	./masks_test2 $(abs_mediadir)

matrix_test.swf: matrix_test
	./matrix_test $(abs_mediadir)

matrix_testrunner: $(srcdir)/../generic-testrunner.sh matrix_test.swf
	sh $(srcdir)/../generic-testrunner.sh -r5 $(top_builddir) matrix_test.swf > $@
	chmod 755 $@

get_frame_number_test.swf: get_frame_number_test
	./get_frame_number_test $(abs_mediadir)

get_frame_number_testrunner: $(srcdir)/../generic-testrunner.sh get_frame_number_test.swf
	sh $(srcdir)/../generic-testrunner.sh -f20 $(top_builddir) get_frame_number_test.swf > $@
	chmod 755 $@

frame_label_test.swf: frame_label_test
	./frame_label_test $(abs_mediadir)

frame_label_testrunner: $(srcdir)/../generic-testrunner.sh frame_label_test.swf
	sh $(srcdir)/../generic-testrunner.sh -r5 $(top_builddir) frame_label_test.swf > $@
	chmod 755 $@

path_format_test.swf: path_format_test
	./path_format_test $(abs_mediadir)

path_format_testrunner: $(srcdir)/../generic-testrunner.sh path_format_test.swf
	sh $(srcdir)/../generic-testrunner.sh -r5 $(top_builddir) path_format_test.swf > $@
	chmod 755 $@

callFunction_test.swf: callFunction_test
	./callFunction_test $(abs_mediadir)

callFunction_testrunner: $(srcdir)/../generic-testrunner.sh callFunction_test.swf
	sh $(srcdir)/../generic-testrunner.sh -r5 $(top_builddir) callFunction_test.swf > $@
	chmod 755 $@

duplicate_movie_clip_test.swf: duplicate_movie_clip_test
	./duplicate_movie_clip_test $(abs_mediadir)

duplicate_movie_clip_testrunner: $(srcdir)/../generic-testrunner.sh duplicate_movie_clip_test.swf
	sh $(srcdir)/../generic-testrunner.sh -r5 $(top_builddir) duplicate_movie_clip_test.swf > $@
	chmod 755 $@

duplicate_movie_clip_test2.swf: duplicate_movie_clip_test2
	./duplicate_movie_clip_test2 $(abs_mediadir)

duplicate_movie_clip_test2runner: $(srcdir)/../generic-testrunner.sh duplicate_movie_clip_test2.swf
	sh $(srcdir)/../generic-testrunner.sh -r5 $(top_builddir) duplicate_movie_clip_test2.swf > $@
	chmod 755 $@

event_handler_scope_test.swf: event_handler_scope_test
	./event_handler_scope_test $(abs_mediadir)

event_handler_scope_testrunner: $(srcdir)/../generic-testrunner.sh event_handler_scope_test.swf
	sh $(srcdir)/../generic-testrunner.sh -r5 $(top_builddir) event_handler_scope_test.swf > $@
	chmod 755 $@

attachMovieTest.swf: attachMovieTest
	./attachMovieTest $(abs_mediadir)

attachMovieLoopingTest.swf: attachMovieLoopingTest
	./attachMovieLoopingTest $(abs_mediadir)

# This will only work with Ming-0.4.0beta2
# (support for prebuilt clips inclusion)
attachImported.swf: Dejagnu.swf $(srcdir)/attachImported.as attachMovieTest.swf
	$(MAKESWF) $(MAKESWF_FLAGS) -DOUTPUT_VERSION=6 -v6 -i attachMovieTest.swf:redsquare -o $@ Dejagnu.swf $(srcdir)/attachImported.as
attachImported-Runner: $(srcdir)/../generic-testrunner.sh attachImported.swf Makefile
	sh $(srcdir)/../generic-testrunner.sh -r5 -c "END_OF_TEST" $(top_builddir) attachImported.swf > $@
	chmod 755 $@

# This will only work with Ming-0.4.0beta2
# (support for prebuilt clips inclusion)
attachExtImported.swf: Dejagnu.swf $(srcdir)/attachExtImported.as attachImported.swf attachMovieTest.swf
	$(MAKESWF) $(MAKESWF_FLAGS) -DOUTPUT_VERSION=6 -v6 -i attachImported.swf:redsquare -o $@ Dejagnu.swf $(srcdir)/attachExtImported.as
attachExtImported-Runner: $(srcdir)/../generic-testrunner.sh attachExtImported.swf Makefile
	sh $(srcdir)/../generic-testrunner.sh -r5 -c "END_OF_TEST" $(top_builddir) attachExtImported.swf > $@
	chmod 755 $@

goto_frame_test.swf: goto_frame_test
	./goto_frame_test $(abs_mediadir)

goto_frame_testrunner: $(srcdir)/../generic-testrunner.sh goto_frame_test.swf
	sh $(srcdir)/../generic-testrunner.sh $(top_builddir) goto_frame_test.swf > $@
	chmod 755 $@

consecutive_goto_frame_test.swf: consecutive_goto_frame_test
	./consecutive_goto_frame_test $(abs_mediadir)

consecutive_goto_frame_testrunner: $(srcdir)/../generic-testrunner.sh consecutive_goto_frame_test.swf
	sh $(srcdir)/../generic-testrunner.sh $(top_builddir) consecutive_goto_frame_test.swf > $@
	chmod 755 $@

multi_doactions_and_goto_frame_test.swf: multi_doactions_and_goto_frame_test
	./multi_doactions_and_goto_frame_test $(abs_mediadir)

multi_doactions_and_goto_frame_testrunner: $(srcdir)/../generic-testrunner.sh multi_doactions_and_goto_frame_test.swf
	sh $(srcdir)/../generic-testrunner.sh $(top_builddir) multi_doactions_and_goto_frame_test.swf > $@
	chmod 755 $@

reverse_execute_PlaceObject2_test1.swf: reverse_execute_PlaceObject2_test1
	./reverse_execute_PlaceObject2_test1 $(abs_mediadir)

reverse_execute_PlaceObject2_test1runner: $(srcdir)/../generic-testrunner.sh reverse_execute_PlaceObject2_test1.swf
	sh $(srcdir)/../generic-testrunner.sh $(top_builddir) reverse_execute_PlaceObject2_test1.swf > $@
	chmod 755 $@

reverse_execute_PlaceObject2_test2.swf: reverse_execute_PlaceObject2_test2
	./reverse_execute_PlaceObject2_test2 $(abs_mediadir)

reverse_execute_PlaceObject2_test2runner: $(srcdir)/../generic-testrunner.sh reverse_execute_PlaceObject2_test2.swf
	sh $(srcdir)/../generic-testrunner.sh $(top_builddir) reverse_execute_PlaceObject2_test2.swf > $@
	chmod 755 $@

BitmapDataTest.swf: BitmapDataTest
	./BitmapDataTest $(abs_mediadir)

BitmapDataDraw.swf: BitmapDataDraw
	./BitmapDataDraw $(abs_mediadir)

BitmapDataDrawRunner: $(srcdir)/../generic-testrunner.sh BitmapDataDraw.swf
	sh $(srcdir)/../generic-testrunner.sh $(top_builddir) BitmapDataDraw.swf > $@
	chmod 755 $@

BeginBitmapFill.swf: BeginBitmapFill
	./BeginBitmapFill $(abs_mediadir)

BitmapSmoothingTest-v7.swf: BitmapSmoothingTest
	./BitmapSmoothingTest 7

BitmapSmoothingTest-v8.swf: BitmapSmoothingTest
	./BitmapSmoothingTest 8

spritehier.swf: spritehier
	./spritehier

RemoveObject2Test.swf: RemoveObject2Test 
	./RemoveObject2Test
RollOverOutTest.swf: RollOverOutTest
	./RollOverOutTest $(abs_mediadir)
ButtonEventsTest.swf: ButtonEventsTest
	./ButtonEventsTest $(abs_mediadir)
SpriteButtonEventsTest.swf: SpriteButtonEventsTest
	./SpriteButtonEventsTest $(abs_mediadir)
ResolveEventsTest.swf: ResolveEventsTest
	./ResolveEventsTest $(abs_mediadir)

# This will only work with Ming-0.4.0beta2 (support for prebuilt clips inclusion)
VarAndCharClashTest.swf: $(srcdir)/../media/green.swf Dejagnu.swf $(srcdir)/VarAndCharClashTest.as 
	$(MAKESWF) $(MAKESWF_FLAGS) -o $@ Dejagnu.swf $(srcdir)/../media/green.swf $(srcdir)/VarAndCharClashTest.as
VarAndCharClashTest-Runner: $(srcdir)/../generic-testrunner.sh VarAndCharClashTest.swf
	sh $(srcdir)/../generic-testrunner.sh $(top_builddir) VarAndCharClashTest.swf > $@
	chmod 755 $@

# This will only work with Ming-0.4.0beta2 (support for prebuilt clips inclusion)
FlashVarsTest.swf: Dejagnu.swf FlashVarsTest.as 
	$(MAKESWF) $(MAKESWF_FLAGS) -DOUTPUT_VERSION=6 -v6 -o $@ Dejagnu.swf $(srcdir)/FlashVarsTest.as
FlashVarsTest-Runner: $(srcdir)/../generic-testrunner.sh FlashVarsTest.swf Makefile
	echo "$(top_builddir)/gui/gnash -1 -r0 -v -P 'FlashVars=?a=a_in_fvars&v=v_in_fvars&MixCaseFvars=mixFvars&dejagnu.nested=chFVars&_root.fqv=fqFVars&complex={a:'1',b:2}' 'FlashVarsTest.swf?a=a_in_qstring&q=q_in_qstring&MixCaseQstr=mixQstr&dejagnu.nested=chQstr&_root.fqv=fqQstr'" > $@
	chmod 755 $@

# This will only work with Ming-0.4.0beta2 (support for prebuilt clips inclusion)
SharedObjectTest.swf: Dejagnu.swf SharedObjectTest.as 
	$(MAKESWF) $(MAKESWF_FLAGS) -DOUTPUT_VERSION=6 -v6 -o $@ Dejagnu.swf $(srcdir)/SharedObjectTest.as

SharedObjectTestRunner: SharedObjectTestRunner.sh Makefile SharedObjectTest.swf
	sed -e 's#@@TOP_BUILDDIR@@#${abs_top_builddir}#' -e 's#@@BASEINPUTSOLDIR@@#${srcdir}/SharedObjectTest.sol#' $(srcdir)/SharedObjectTestRunner.sh > $@
	chmod +x $@

StageConfigTest.swf: StageConfigTest.as 
	$(MAKESWF) $(MAKESWF_FLAGS) -o $@ -s 512x512 $(srcdir)/StageConfigTest.as
ButtonPropertiesTest.swf: ButtonPropertiesTest
	./ButtonPropertiesTest $(abs_mediadir)

intervalTest.swf: $(srcdir)/../media/green.swf Dejagnu.swf intervalTest.as 
	$(MAKESWF) $(MAKESWF_FLAGS) -o $@ Dejagnu.swf $(srcdir)/intervalTest.as

gotoFrame2Test.swf: $(srcdir)/../media/green.swf Dejagnu.swf gotoFrame2Test.as 
	$(MAKESWF) $(MAKESWF_FLAGS) -o $@ -iDejagnu.swf:dejagnu $(srcdir)/../actionscript.all/dejagnu_so_init.as \
		$(srcdir)/gotoFrame2Test.as 

gotoFrame2Test-Runner: $(srcdir)/../generic-testrunner.sh gotoFrame2Test.swf
	sh $(srcdir)/../generic-testrunner.sh $(top_builddir) gotoFrame2Test.swf > $@
	chmod 755 $@

LC-Receive.swf: LC-Receive.as 
	$(MAKESWF) $(MAKESWF_FLAGS) -v 8 -r 1 -o $@  $(srcdir)/empty.as $(srcdir)/LC-Receive.as

LC-Send.swf: LC-Send.as 
	$(MAKESWF) $(MAKESWF_FLAGS) -v 8 -r 1 -o $@  $(srcdir)/empty.as $(srcdir)/LC-Send.as

LCTestRunner: $(srcdir)/../simultaneous-testrunner.sh LC-Receive.swf LC-Send.swf
	sh $(srcdir)/../simultaneous-testrunner.sh -c "ENDOFTEST" $(top_builddir) LC-Receive.swf LC-Send.swf > $@
	chmod 755 $@

XMLSocketTest.swf: XMLSocketTest.as 
	$(MAKESWF) $(MAKESWF_FLAGS) -r 1 -o $@  $(srcdir)/empty.as $(srcdir)/XMLSocketTest.as

XMLSocketTester: XMLSocketTester.sh XMLSocketTest.swf
	sh $(srcdir)/XMLSocketTester.sh -c "ENDOFTEST" $(top_builddir) $(top_srcdir) $(PERL) \
		XMLSocketTest.swf > $@
	chmod 755 $@

GradientFillTest.swf: GradientFillTest.as 
	$(MAKESWF) $(MAKESWF_FLAGS) -v 8 -r 1 -o $@  $(srcdir)/empty.as $(srcdir)/GradientFillTest.as

GradientFillTestRunner: $(srcdir)/../generic-testrunner.sh GradientFillTest.swf
	sh $(srcdir)/../generic-testrunner.sh $(top_builddir) GradientFillTest.swf > $@
	chmod 755 $@

DrawingApiTest.swf: DrawingApiTest.as 
	$(MAKESWF) $(MAKESWF_FLAGS) -r 1 -o $@  $(srcdir)/empty.as $(srcdir)/DrawingApiTest.as

PrototypeEventListeners.swf: PrototypeEventListeners.as Dejagnu.swf Makefile ../actionscript.all/check.as ../actionscript.all/utils.as
	$(MAKESWF) $(MAKESWF_FLAGS) -r12 -o $@ -v6 -DUSE_DEJAGNU_MODULE -DOUTPUT_VERSION=6 Dejagnu.swf $(srcdir)/PrototypeEventListeners.as

remoting.swf: remoting.as Dejagnu.swf Makefile ../actionscript.all/check.as ../actionscript.all/utils.as
	$(MAKESWF) $(MAKESWF_FLAGS) -n network -r12 -o $@ -v7 -DHTTP_TESTSUITE='\"$(HTTP_TESTSUITE)\"' -DUSE_DEJAGNU_MODULE -DOUTPUT_VERSION=7 Dejagnu.swf $(srcdir)/remoting.as $(srcdir)/../actionscript.all/dejagnu_so_fini.as

remotingTestRunner: $(srcdir)/../generic-testrunner.sh remoting.swf
	sh $(srcdir)/../generic-testrunner.sh $(top_builddir) remoting.swf > $@
	chmod 755 $@

red5test.swf: red5test.as Dejagnu.swf Makefile ../actionscript.all/check.as ../actionscript.all/utils.as
	$(MAKESWF) $(MAKESWF_FLAGS) -n network -r12 -o $@ -v7 -DRED5_HOST='\"$(RED5_HOST)\"' \
		-DUSE_DEJAGNU_MODULE -DOUTPUT_VERSION=7 Dejagnu.swf $(srcdir)/red5test.as \
		$(srcdir)/../actionscript.all/dejagnu_so_fini.as

red5test-runner: $(srcdir)/../generic-testrunner.sh red5test.swf
	sh $(srcdir)/../generic-testrunner.sh -c "ENDOFTEST" $(top_builddir) red5test.swf > $@
	chmod 755 $@

rtmpytest.swf: rtmpytest.as Dejagnu.swf Makefile ../actionscript.all/check.as ../actionscript.all/utils.as
	$(MAKESWF) $(MAKESWF_FLAGS) -n network -r12 -o $@ -v7 -DRTMPY_HOST='\"$(RTMPY_HOST)\"' \
		-DUSE_DEJAGNU_MODULE -DOUTPUT_VERSION=7 Dejagnu.swf $(srcdir)/rtmpytest.as \
		$(srcdir)/../actionscript.all/dejagnu_so_fini.as

rtmpytest-runner: $(srcdir)/../generic-testrunner.sh rtmpytest.swf
	sh $(srcdir)/../generic-testrunner.sh -c "ENDOFTEST" $(top_builddir) rtmpytest.swf > $@
	chmod 755 $@

case6.swf: case6.as Makefile ../actionscript.all/check.as
	$(MAKESWF) $(MAKESWF_FLAGS) -v6 -o $@ -DUSE_DEJAGNU_MODULE -DOUTPUT_VERSION=6 -I$(srcdir)/../actionscript.all $(srcdir)/case6.as 

case7.swf: case7.as Makefile ../actionscript.all/check.as
	$(MAKESWF) $(MAKESWF_FLAGS) -v7 -o $@ -DUSE_DEJAGNU_MODULE -DOUTPUT_VERSION=7 -I$(srcdir)/../actionscript.all $(srcdir)/case7.as 

caseTestRunner: $(srcdir)/../generic-testrunner.sh case6.swf case7.swf Makefile
	sh $(srcdir)/../generic-testrunner.sh -f10 -r10 -c '#total' $(top_builddir) case6.swf case7.swf > $@
	chmod 755 $@

DragDropTest.swf: DragDropTest.as Dejagnu.swf DragDropTestLoaded.swf Makefile ../actionscript.all/check.as ../actionscript.all/utils.as
	$(MAKESWF) $(MAKESWF_FLAGS) -r12 -o $@ -v6 -DUSE_DEJAGNU_MODULE -DOUTPUT_VERSION=6 Dejagnu.swf $(srcdir)/DragDropTest.as

DragDropTestLoaded.swf: DragDropTest.as Makefile ../actionscript.all/check.as ../actionscript.all/utils.as
	$(MAKESWF) $(MAKESWF_FLAGS) -r12 -o $@ -v6 -DUSE_DEJAGNU_MODULE -DOUTPUT_VERSION=6 -DLOADED_VERSION $(srcdir)/DragDropTest.as

static_vs_dynamic1.swf: static_vs_dynamic1
	./static_vs_dynamic1 $(srcdir)/../media

static_vs_dynamic1_testrunner: $(srcdir)/../generic-testrunner.sh static_vs_dynamic1.swf
	sh $(srcdir)/../generic-testrunner.sh $(top_builddir) static_vs_dynamic1.swf > $@
	chmod 755 $@

static_vs_dynamic2.swf: static_vs_dynamic2
	./static_vs_dynamic2 $(srcdir)/../media

static_vs_dynamic2_testrunner: $(srcdir)/../generic-testrunner.sh static_vs_dynamic2.swf
	sh $(srcdir)/../generic-testrunner.sh $(top_builddir) static_vs_dynamic2.swf > $@
	chmod 755 $@

getTimer_test.swf: getTimer_test
	./getTimer_test $(srcdir)/../media

getTimer_testrunner: $(srcdir)/../generic-testrunner.sh getTimer_test.swf
	sh $(srcdir)/../generic-testrunner.sh $(top_builddir) getTimer_test.swf > $@
	chmod 755 $@

NetStream-SquareTest.swf: NetStream-SquareTest
	./NetStream-SquareTest $(abs_mediadir)

Video-EmbedSquareTest.swf: Video-EmbedSquareTest $(srcdir)/../media/square.flv
	./Video-EmbedSquareTest $(srcdir)/../media

instanceNameTest.swf: instanceNameTest
	./instanceNameTest $(abs_mediadir)

instanceNameTestRunner: $(srcdir)/../generic-testrunner.sh instanceNameTest.swf
	sh $(srcdir)/../generic-testrunner.sh $(top_builddir) instanceNameTest.swf > $@
	chmod 755 $@

Dejagnu.swf: Dejagnu
	./Dejagnu $(abs_mediadir)

clean-local: 
	-rm *.swf media *.pp *unner

check-DEJAGNU: site-update $(check_PROGRAMS)
	runtest=$(RUNTEST); \
	if $(SHELL) -c "$$runtest --version" > /dev/null 2>&1; then \
	    $(TEST_ENV) $$runtest $(RUNTESTFLAGS) $(TEST_DRIVERS); true; \
	else \
	  echo "WARNING: could not find \`runtest'" 1>&2; \
          for i in "$(TEST_CASES)"; do \
	    $(TEST_ENV) $(SHELL) $$i; \
	  done; \
	fi

site-update: site.exp
	@rm -fr site.exp.bak
	@cp site.exp site.exp.bak
	@sed -e '/testcases/d' site.exp.bak > site.exp
	@echo "# This is a list of the pre-compiled testcases" >> site.exp
	@echo "set testcases \"$(TEST_CASES)\"" >> site.exp

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
