# Makefile.in generated by automake 1.11.1 from Makefile.am.
# doc/C/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# 
#   Copyright (C) 2005, 2006, 2007, 2008, 2009, 2010, 2011
#   Free Software Foundation, Inc.
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 3 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

# Building a PDF using Apache FOP only works with fop-0.20.5 for now.

pkgdatadir = $(datadir)/gnash
pkgincludedir = $(includedir)/gnash
pkglibdir = $(libdir)/gnash
pkglibexecdir = $(libexecdir)/gnash
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
am__append_1 = gtk-gnash.1 gnash-gtk-launcher.1
#am__append_2 = qt4-gnash.1 gnash-qt-launcher.1
#am__append_3 = sdl-gnash.1
#am__append_4 = fb-gnash.1
am__append_5 = dump-gnash.1
subdir = doc/C
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/macros/agg.m4 \
	$(top_srcdir)/macros/boost.m4 $(top_srcdir)/macros/curl.m4 \
	$(top_srcdir)/macros/dbus.m4 $(top_srcdir)/macros/docbook.m4 \
	$(top_srcdir)/macros/ffmpeg.m4 $(top_srcdir)/macros/firefox.m4 \
	$(top_srcdir)/macros/freetype.m4 \
	$(top_srcdir)/macros/gconf-2.m4 \
	$(top_srcdir)/macros/gettext.m4 $(top_srcdir)/macros/gles.m4 \
	$(top_srcdir)/macros/glib.m4 \
	$(top_srcdir)/macros/gnashpkgtool.m4 \
	$(top_srcdir)/macros/gtk2.m4 $(top_srcdir)/macros/gtkglext.m4 \
	$(top_srcdir)/macros/haxe.m4 $(top_srcdir)/macros/iconv.m4 \
	$(top_srcdir)/macros/kde3.m4 $(top_srcdir)/macros/kde4.m4 \
	$(top_srcdir)/macros/lib-ld.m4 \
	$(top_srcdir)/macros/lib-link.m4 \
	$(top_srcdir)/macros/lib-prefix.m4 \
	$(top_srcdir)/macros/libtool.m4 \
	$(top_srcdir)/macros/ltoptions.m4 \
	$(top_srcdir)/macros/ltsugar.m4 \
	$(top_srcdir)/macros/ltversion.m4 \
	$(top_srcdir)/macros/lt~obsolete.m4 \
	$(top_srcdir)/macros/ming.m4 $(top_srcdir)/macros/mtasc.m4 \
	$(top_srcdir)/macros/mysql.m4 $(top_srcdir)/macros/nls.m4 \
	$(top_srcdir)/macros/npapi.m4 $(top_srcdir)/macros/opengl.m4 \
	$(top_srcdir)/macros/openvg.m4 $(top_srcdir)/macros/pango.m4 \
	$(top_srcdir)/macros/pkg.m4 $(top_srcdir)/macros/po.m4 \
	$(top_srcdir)/macros/progtest.m4 \
	$(top_srcdir)/macros/pthreads.m4 \
	$(top_srcdir)/macros/python.m4 $(top_srcdir)/macros/qt3.m4 \
	$(top_srcdir)/macros/qt4.m4 $(top_srcdir)/macros/sdl.m4 \
	$(top_srcdir)/macros/swfmill.m4 $(top_srcdir)/macros/x11.m4 \
	$(top_srcdir)/cygnal/acinclude.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/gnashconfig.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
SOURCES =
DIST_SOURCES =
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/einar/Downloads/gnash/missing --run aclocal-1.11
AGG_CFLAGS = -I/usr/include/agg2  
AGG_LIBS = -lagg_pic  
AMTAR = ${SHELL} /home/einar/Downloads/gnash/missing --run tar
AM_DEFAULT_VERBOSITY = 0
ANDROID_NDK = 
AR = ar
AS = as
AS3COMPILE = /usr/local/bin/as3compile
ATK_CFLAGS = -pthread -I/usr/include/atk-1.0 -I/usr/include/glib-2.0 -I/usr/lib/i386-linux-gnu/glib-2.0/include  
ATK_CONFIG = 
ATK_LIBS = -pthread -latk-1.0 -lgobject-2.0 -lgthread-2.0 -lrt -lglib-2.0  
AUTOCONF = ${SHELL} /home/einar/Downloads/gnash/missing --run autoconf
AUTOHEADER = ${SHELL} /home/einar/Downloads/gnash/missing --run autoheader
AUTOMAKE = ${SHELL} /home/einar/Downloads/gnash/missing --run automake-1.11
AUTOTRACE = 
AWK = gawk
BOOST_CFLAGS = 
BOOST_CYGNAL_LIBS =  -lboost_serialization-mt -lboost_date_time-mt
BOOST_LIBS =  -lboost_thread-mt -lboost_program_options-mt -lboost_iostreams-mt
BUILDDATE = 20120618
BZ2_LIBS = -lbz2
CAIRO_CFLAGS = 
CAIRO_CONFIG = 
CAIRO_LIBS = 
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2          -W     -Wall     -Wcast-align     -Wcast-qual     -Wpointer-arith     -Wreturn-type     -Wmissing-declarations     -Wmissing-prototypes     -Wstrict-prototypes     
CPP = gcc -E
CPPFLAGS = 
CSOUND = /usr/bin/csound
CURL_CFLAGS =  -DCURL_STATICLIB
CURL_LIBS = -L/usr/lib/i386-linux-gnu -lcurl
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2          -W     -Wall     -Wcast-align     -Wcast-qual     -Wpointer-arith     -Wreturn-type     -Wnon-virtual-dtor     -Wunused      -fvisibility-inlines-hidden
CYGPATH_W = echo
DB2X_MAN = 
DB2X_MANXML = 
DB2X_PDF = 
DB2X_TEXI = 
DB2X_TEXIXML = 
DB2X_VERSION = 
DB2X_XSLTPROC = 
DBUS_CFLAGS = 
DBUS_LIBS = 
DEFAULT_FLASH_MAJOR_VERSION = 10
DEFAULT_FLASH_MINOR_VERSION = 1
DEFAULT_FLASH_PLATFORM_ID = LNX
DEFAULT_FLASH_REV_NUMBER = 999
DEFAULT_FLASH_SYSTEM_OS = GNU/Linux
DEFAULT_SOL_SAFEDIR = ~/.gnash/SharedObjects
DEFAULT_STREAMS_TIMEOUT = 60
DEFS = -DHAVE_CONFIG_H
DEJAGNU = /usr/bin/runtest
DEJAGNU_CFLAGS = 
DEJAGNU_CONFIG = 
DEPDIR = .deps
DIRECTFB_CFLAGS = 
DIRECTFB_CONFIG = 
DIRECTFB_LIBS = 
DLLTOOL = dlltool
DLOPEN = -dlopen
DLPREOPEN = -dlpreopen
DOXYGEN = 
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGL_CFLAGS = 
EGL_CONFIG = 
EGL_LIBS = 
EGREP = /bin/grep -E
EXEEXT = 
EXPAT_CFLAGS = 
EXPAT_CONFIG = 
EXPAT_LIBS = -L/usr/lib/i386-linux-gnu -lexpat 
EXTENSIONS_LIST = 
EXTRA_EGL_LIBS = 
FAKEFB = 
FC_MATCH = /usr/bin/fc-match
FFMPEG_CFLAGS = -D__STDC_CONSTANT_MACROS -I/usr/local/include
FFMPEG_LIBS =  -pthread -L/usr/local/lib -lavcodec -ldl -lasound -lSDL -lbz2 -lz -lrt -lavutil -lm   -lavformat -lavcodec -ldl -lasound -lSDL -lbz2 -lz -lrt -lavutil -lm   -lavutil -lm    -lswscale -lavutil -lm  
FGREP = /bin/grep -F
FIREFOX_PLUGINS = /home/einar/.mozilla/plugins
FLTK2_CFLAGS = 
FLTK2_CONFIG = 
FLTK2_LIBS = 
FONTCONFIG_CFLAGS =  
FONTCONFIG_CONFIG = 
FONTCONFIG_LIBS = -lfontconfig  
FOP = 
FREETYPE2_CFLAGS = -I/usr/include/freetype2  
FREETYPE2_LIBS = -lfreetype  
GCONFTOOL = /usr/bin/gconftool-2
GCONF_CFLAGS = -pthread -I/usr/include/dbus-1.0 -I/usr/lib/i386-linux-gnu/dbus-1.0/include -I/usr/include/glib-2.0 -I/usr/lib/i386-linux-gnu/glib-2.0/include -I/usr/include/gconf/2  
GCONF_LIBS = -lgconf-2 -lglib-2.0  
GCONF_SCHEMA_CONFIG_SOURCE = xml:merged:/etc/gconf/gconf.xml.defaults
GCONF_SCHEMA_FILE_DIR = $(sysconfdir)/gconf/schemas
GETTEXT_MACRO_VERSION = 0.18
GIF_CFLAGS = 
GIF_CONFIG = 
GIF_LIBS = -lgif 
GIT = /usr/bin/git
GLES1_CFLAGS = 
GLES1_LIBS = 
GLES2_CFLAGS = 
GLES2_LIBS = 
GLEXT_CFLAGS = 
GLEXT_LIBS = 
GLIB_CFLAGS = -I/usr/include/glib-2.0 -I/usr/lib/i386-linux-gnu/glib-2.0/include   -I/usr/include/glib-2.0 -I/usr/lib/i386-linux-gnu/glib-2.0/include   
GLIB_LIBS = -lglib-2.0  
GMSGFMT = /usr/bin/msgfmt
GMSGFMT_015 = /usr/bin/msgfmt
GREP = /bin/grep
GSTREAMER_APP_CFLAGS = -pthread -I/usr/include/glib-2.0 -I/usr/lib/i386-linux-gnu/glib-2.0/include -I/usr/include/gstreamer-0.10 -I/usr/include/libxml2  
GSTREAMER_APP_CONFIG = 
GSTREAMER_APP_LIBS = -pthread -lgstapp-0.10 -lgstbase-0.10 -lgstreamer-0.10 -lgobject-2.0 -lgmodule-2.0 -lxml2 -lgthread-2.0 -lrt -lglib-2.0  
GSTREAMER_CFLAGS = -pthread -I/usr/include/glib-2.0 -I/usr/lib/i386-linux-gnu/glib-2.0/include -I/usr/include/gstreamer-0.10 -I/usr/include/libxml2  
GSTREAMER_CONFIG = 
GSTREAMER_LIBS = -lgstinterfaces-0.10 -pthread -lgstreamer-0.10 -lgobject-2.0 -lgmodule-2.0 -lxml2 -lgthread-2.0 -lrt -lglib-2.0  
GSTREAMER_PBUTILS_CFLAGS = -pthread -I/usr/include/glib-2.0 -I/usr/lib/i386-linux-gnu/glib-2.0/include -I/usr/include/gstreamer-0.10 -I/usr/include/libxml2  
GSTREAMER_PBUTILS_CONFIG = 
GSTREAMER_PBUTILS_LIBS = -pthread -lgstpbutils-0.10 -lgstreamer-0.10 -lgobject-2.0 -lgmodule-2.0 -lxml2 -lgthread-2.0 -lrt -lglib-2.0  
GSTREAMER_PLUGINS_BASE_CFLAGS = -pthread -I/usr/include/glib-2.0 -I/usr/lib/i386-linux-gnu/glib-2.0/include -I/usr/include/gstreamer-0.10 -I/usr/include/libxml2  
GSTREAMER_PLUGINS_BASE_CONFIG = 
GSTREAMER_PLUGINS_BASE_LIBS = -pthread -lgstreamer-0.10 -lgobject-2.0 -lgmodule-2.0 -lxml2 -lgthread-2.0 -lrt -lglib-2.0  
GST_INSPECT = 
GTK2_CFLAGS = -pthread -I/usr/include/gtk-2.0 -I/usr/lib/i386-linux-gnu/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/pango-1.0 -I/usr/include/gio-unix-2.0/ -I/usr/include/glib-2.0 -I/usr/lib/i386-linux-gnu/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng12   
GTK2_LIBS = -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgio-2.0 -lpangoft2-1.0 -lpangocairo-1.0 -lgdk_pixbuf-2.0 -lcairo -lpango-1.0 -lfreetype -lfontconfig -lgobject-2.0 -lgmodule-2.0 -lgthread-2.0 -lrt -lglib-2.0  
HAIKU_LIBS = 
HAXE = /usr/bin/haxe
HAXE_CLASSPATH = /usr/share/haxe/
HTTP_TESTSUITE = 
HWACCEL_CONFIG = none
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_INFO = 
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INTLLIBS = 
INTL_MACOSX_LIBS = 
JAVA = 
JPEG_CFLAGS = 
JPEG_CONFIG = 
JPEG_LIBS = -L/usr/lib/i386-linux-gnu -ljpeg 
KDE3_APPSDATADIR = 
KDE3_CFLAGS = 
KDE3_CONFIG = 
KDE3_CONFIGDIR = 
KDE3_LIBS = 
KDE3_PLUGINDIR = 
KDE3_SERVICESDIR = 
KDE4_APPSDATADIR = 
KDE4_CFLAGS = 
KDE4_CONFIG = 
KDE4_CONFIGDIR = 
KDE4_LIBS = 
KDE4_PLUGINDIR = 
KDE4_SERVICESDIR = 
KLASH_PLUGIN = 
LC_KEY = 0xcbc384f8
LD = /usr/bin/ld
LDFLAGS =  -Wl,--as-needed
LIBAVCODEC_IDENT = 54.25.100
LIBICONV = -liconv
LIBINTL = 
LIBOBJS = 
LIBS = -lrt -lX11 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBTOOL_DEPS = ./ltmain.sh
LIBVA_CFLAGS = 
LIBVA_CONFIG = 
LIBVA_GLX_CFLAGS = 
LIBVA_GLX_CONFIG = 
LIBVA_GLX_LIBS = 
LIBVA_LIBS = 
LIBVA_X11_CFLAGS = 
LIBVA_X11_CONFIG = 
LIBVA_X11_LIBS = 
LIPO = 
LN_S = ln -s
LTDL_CFLAGS = 
LTDL_CONFIG = 
LTDL_LIBS = -lltdl 
LTLIBICONV = -liconv
LTLIBINTL = 
LTLIBOBJS = 
MAINT = #
MAKEINFO = ${SHELL} /home/einar/Downloads/gnash/missing --run makeinfo
MAKESWF = /usr/bin/makeswf
MANIFEST_TOOL = :
MEDIA_CONFIG = gst ffmpeg
MING_CFLAGS = -I/usr/include
MING_CONFIG = /usr/bin/ming-config
MING_LIBS = -L/usr/lib -lz -lm -lungif -lpng -lming
MING_VERSION = 0.4.3
MING_VERSION_CODE = 00040300
MKDIR_P = /bin/mkdir -p
MOC3 = 
MOC4 = 
MSGFMT = /usr/bin/msgfmt
MSGFMT_015 = /usr/bin/msgfmt
MSGMERGE = /usr/bin/msgmerge
MTASC = /usr/bin/mtasc
MTASC_CLASSPATH = /usr/share/mtasc/std
MYSQL_CFLAGS = 
MYSQL_LIBS = 
NETCAT = /bin/nc
NM = /usr/bin/nm -B
NMEDIT = 
NPAPI_CFLAGS = -DXP_UNIX -I/usr/include/firefox  
NSPR_CFLAGS = 
NSPR_CONFIG = 
NSPR_LIBS = 
OBJDUMP = objdump
OBJEXT = o
OPENGL_CFLAGS = 
OPENGL_LIBS = 
OPENVG_CFLAGS = 
OPENVG_LIBS = 
OTOOL = 
OTOOL64 = 
PACKAGE = gnash
PACKAGE_BUGREPORT = 
PACKAGE_NAME = gnash
PACKAGE_STRING = gnash 0.8.11dev
PACKAGE_TARNAME = gnash
PACKAGE_URL = 
PACKAGE_VERSION = 0.8.11dev
PANGO_CFLAGS = -pthread -I/usr/include/pango-1.0 -I/usr/include/glib-2.0 -I/usr/lib/i386-linux-gnu/glib-2.0/include  
PANGO_LIBS = -lpangox-1.0 -lX11 -lpango-1.0 -lgobject-2.0 -lgmodule-2.0 -lgthread-2.0 -lrt -lglib-2.0  
PATH_SEPARATOR = :
PCH_FLAGS = -include all-includes.h -Winvalid-pch
PDFXMLTEX = 
PERL = /usr/bin/perl
PKG_CONFIG = /usr/bin/pkg-config
PNG_CFLAGS = -I/usr/include/libpng12  
PNG_CONFIG = 
PNG_LIBS = -lpng12  
POSUB = po
PTHREAD_CC = gcc
PTHREAD_CFLAGS = -pthread
PTHREAD_CXX = g++
PTHREAD_LIBS = -L/usr/lib/i386-linux-gnu -lpthread
PYGOBJECT_CODEGEN = 
PYGTK_CFLAGS = 
PYGTK_CODEGEN = 
PYGTK_DEFSDIR = 
PYGTK_LIBS = 
PYTHON = 
PYTHON_CFLAGS = 
PYTHON_EXEC_PREFIX = 
PYTHON_LIBS = 
PYTHON_PLATFORM = 
PYTHON_PREFIX = 
PYTHON_VERSION = 
QT3_CFLAGS = 
QT3_LIBS = 
QT4_CFLAGS = 
QT4_LIBS = 
RANLIB = ranlib
RED5_HOST = 
RENDERER_CONFIG =  agg
RENDERER_LIBS = 
RTMPY_HOST = 
SCROLLINSTALL = 
SCROLLKEEPER = 
SCROLLUPDATE = 
SDL_CFLAGS = -I/usr/include/SDL -D_GNU_SOURCE=1 -D_REENTRANT
SDL_CONFIG = /usr/bin/sdl-config
SDL_LIBS = -L/usr/lib -lSDL
SECURITY_LIST =  localconnection
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
SOLDIR = /tmp
SPEEXDSP_CFLAGS = 
SPEEXDSP_CONFIG = 
SPEEXDSP_LIBS = 
SPEEX_CFLAGS =  
SPEEX_CONFIG = 
SPEEX_LIBS = -lspeex  
SSH_CFLAGS = 
SSH_CONFIG = 
SSH_LIBS = 
SSL_CFLAGS = 
SSL_CONFIG = 
SSL_LIBS = 
STATISTICS_LIST =  cache
STRIP = strip
SUPPORTED_GUIS = gtk,dump
SWFC = /usr/local/bin/swfc
SWFDEC_TESTSUITE = 
SWFMILL = /usr/bin/swfmill
SWFMILL_VERSION = 00030100
TS_CFLAGS = 
TS_CONFIG = 
TS_LIBS = 
UIC4 = 
UNGIF_CFLAGS = 
UNGIF_CONFIG = 
UNGIF_LIBS = 
USE_NLS = yes
VERSION = 0.8.11dev
WGET = /usr/bin/wget
WINDRES = 
X11_CFLAGS = 
X11_LIBS = -L/usr/lib/i386-linux-gnu -lX11 -lXinerama -lXext -lSM -lICE
XFT_CFLAGS = 
XFT_CONFIG = 
XFT_LIBS = 
XGETTEXT = /usr/bin/xgettext
XGETTEXT_015 = /usr/bin/xgettext
XGETTEXT_EXTRA_OPTIONS = 
XSLTPROC = 
Z_CFLAGS = 
Z_CONFIG = 
Z_LIBS = -L/usr/lib/i386-linux-gnu -lz 
abs_builddir = /home/einar/Downloads/gnash/doc/C
abs_srcdir = /home/einar/Downloads/gnash/doc/C
abs_top_builddir = /home/einar/Downloads/gnash
abs_top_srcdir = /home/einar/Downloads/gnash
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
curlconfig = /usr/bin/curl-config
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docbook_styles = 
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${prefix}/share/info
install_sh = ${SHELL} /home/einar/Downloads/gnash/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mconfig = 
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
pkgpyexecdir = 
pkgpythondir = 
prefix = /usr/local/gnash-dump
program_transform_name = s,x,x,
psdir = ${docdir}
pth_config = 
pthread_config = 
pyexecdir = 
pythonconfig = 
pythondir = 
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
man1dir = ${mandir}/man1
docname = gnash
lang = C
omffile = gnash-C.omf

# htmldir=docdir, which isn't what we want, so comment the hardcoded
# docdir value for now
# docdir is used to install scrollkeeper files, which isn't supported
# anymore, so maybe it should be removed together with its corresponding
# hooks
# docdir = $(datadir)/$(PACKAGE)/doc/$(docname)/$(lang)
omf_dest_dir = $(datadir)/omf/$(PACKAGE)
scrollkeeper_localstate_dir = $(localstatedir)/scrollkeeper

# These are the top level files for each manual.
XML_MAIN = \
	gnashuser.xml \
	gnashref.xml


# These are the files needed to build the Gnash user
# manual.
COMMON = \
	introduction.xml \
	security.xml \
	legal.xml \
	app_authors.xml \
	doc_authors.xml \
	fdl-appendix.xml \
	bugreport.xml

USERMAN = \
	usermanual/installation.xml \
	usermanual/revisions.xml \
	usermanual/usage.xml \
	usermanual/glossary.xml \
	usermanual/specification.xml \
	usermanual/gnashrc.xml \
	usermanual/acknowledgments.xml \
	usermanual/conventions.xml


# These are the files needed to build the Gnash reference
# manual.
REFMAN = \
	refmanual/amf.xml \
	refmanual/as_value.xml \
	refmanual/building.xml \
	refmanual/code_dependencies.xml \
	refmanual/codestyle.xml \
	refmanual/configuration.xml \
	refmanual/cross_compiling.xml \
	refmanual/custompath_configuration.xml \
	refmanual/documentation_dependencies.xml \
	refmanual/feature_configuration.xml \
	refmanual/install.xml \
	refmanual/internals.xml \
	refmanual/logging.xml \
	refmanual/memory.xml \
	refmanual/new_as_class.xml \
	refmanual/object.xml \
	refmanual/plugin.xml \
	refmanual/revisions.xml \
	refmanual/rtmp.xml \
	refmanual/sources.xml \
	refmanual/testing_dependencies.xml \
	refmanual/extensions/extensions.xml \
	refmanual/extensions/fileext.xml \
	refmanual/extensions/gtkext.xml \
	refmanual/extensions/mysqlext.xml

EXTRA_DIST = \
	$(USERMAN) \
	$(REFMAN) \
	$(COMMON) \
	$(XML_MAIN) \
	$(MANSRC) \
	preformatted/gnashuser.html.in \
	preformatted/gprocessor.1.in \
	preformatted/cygnal.1.in \
	preformatted/gnash.1.in \
	preformatted/gnash_ref.info.in \
	preformatted/soldumper.1.in \
	preformatted/flvdumper.1.in \
	preformatted/gnashref.html.in \
	preformatted/gnash_user.info.in \
	preformatted/rtmpget.1.in \
	preformatted/findmicrophones.1.in \
	preformatted/findwebcams.1.in \
	fb-gnash.1 \
	sdl-gnash.1 \
	dump-gnash.1 \
	gtk-gnash.1 \
	qt4-gnash.1 \
	gnash-gtk-launcher.1 \
	gnash-qt-launcher.1

#	preformatted/dumpshm.1.in

#noinst_SCRIPT = gen-doc.sh
# We list the texi and info pages twice, as differing versions of the 
# docbook-utils transform the name at different steps in the process.
# This is an easy way to handle it either way, since we only need it as
# dependency anyway.
MANPAGES = \
	gnash.1 \
	gprocessor.1 \
	soldumper.1 \
	flvdumper.1 \
	cygnal.1 \
	rtmpget.1 \
	findmicrophones.1 \
	findwebcams.1

#	dumpshm.1

# These are just aliases for the default gnash man page.
EXTRAMANPAGES = $(am__append_1) $(am__append_2) $(am__append_3) \
	$(am__append_4) $(am__append_5)
MANSRC = $(MANPAGES:.1=.man-xml)
INFOS = gnash_user.info gnash_ref.info
HTMLS = $(XML_MAIN:.xml=.html)
PDFS = $(XML_MAIN:.xml=.pdf)
TEXIS = gnash_user.texi gnashuser.texi gnash_ref.texi gnashref.texi

#
# Gnash uses suffix rules to build all the various supported
# output formats. This section contains all the code that does
# the document convesion from docbook to whatever. Note that
# all of these are conditional, as the tools may not be
# installed on all systems, and on some systems, getting a fully
# working Docbook tools system can problematic. In this case 
# preformatted versions are in the top level packaging/doc
# directory, so we just link to them so they can be installed.
# While it's a bit of a pain in the neck for developers to
# keep the preformatted versions up to date, it's much easier
# for end users because the documentation in xml, html, and info
# formats is always available.
#
SUFFIXES = .xml .html .texi .pdf .info .1 .fo .man-xml .in

# All but gnash.1 aren't generated, but are just copied from the source
# tree. If building in thew source directory, we don't want to remove
# these, but when building in a separate directory, we do want to remove them.
MAN_ALIASES = \
	`if test x"$(srcdir)" != x"."; then \
	   echo $(EXTRAMANPAGES); \
	fi`

IMAGES = \
	`if test x"$(srcdir)" != x"."; then \
	   echo "images"; \
	fi`

CLEANFILES = \
        $(PDFS) \
	$(MANPAGES) \
	$(MAN_ALIASES) \
	$(INFOS) \
        $(HTMLS) \
	$(TEXIS) \
	gnash-C.omf.out \
	manpage.links  \
	manpage.refs  \
	gnash.fo  \
	gnash.log  \
	gnashuser.txml \
	gnashuser.mxml \
	gnashref.txml \
	gnashref.mxml \
	omf_timestamp \
	$(IMAGES)

all: all-am

.SUFFIXES:
.SUFFIXES: .xml .html .texi .pdf .info .1 .fo .man-xml .in
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu doc/C/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu doc/C/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
tags: TAGS
TAGS:

ctags: CTAGS
CTAGS:


distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
check-am: all-am
check: check-am
all-am: Makefile all-local
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-generic

dvi: dvi-am

dvi-am:

html-am:

info-am:

install-data-am:
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-data-hook
install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-generic mostlyclean-libtool

pdf-am:

ps: ps-am

ps-am:

uninstall-am:
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) uninstall-hook
.MAKE: install-am install-data-am install-strip uninstall-am

.PHONY: all all-am all-local check check-am clean clean-generic \
	clean-libtool dist-hook distclean distclean-generic \
	distclean-libtool distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am \
	install-data-hook install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am uninstall uninstall-am \
	uninstall-hook


all-local: info html man

gnashuser.html gnashuser.pdf gnash_user.info: gnashuser.xml $(USERMAN) $(COMMON)
gnashref.html gnashref.pdf gnash_ref.info: gnashref.xml $(REFMAN) $(COMMON)

# Convienience rules for developers of these manuals. By default
# all output formats are built if the Docbook tools are installed
# and working correctly.
html: $(HTMLS)
pdf:  $(PDFS)
man:  $(MANPAGES) $(EXTRAMANPAGES)
info: $(INFOS)
#texi: $(TEXIS)

#.xml.pdf:
#	-$(FOP) -xsl $(docbook_styles)/fo/docbook.xsl -xml $< -pdf $@
#.xml.fo:
#	$(XSLTPROC) --output $@ --nonet $(docbook_styles)/fo/docbook.xsl $<

#.fo.pdf:
#	$(PDFXMLTEX) -interaction=nonstopmode $<
.xml.pdf:
	touch $@

.xml.html:
#	-$(XSLTPROC) --output $@ --nonet $(docbook_styles)/html/docbook.xsl $<
#	@$(RM) $*.txml
	@if test -d $(srcdir)/preformatted; then \
	  echo "WARNING: Linking to preformatted version of $@, it could be out of date."; \
	  $(LN_S) -f $(srcdir)/preformatted/$@.in ./$@; \
	else \
	  touch $@; \
	fi

# The first test seems to be the default for Fedora/Redhat/Centos based distributions,
# which use a wrapper script for jade.
# Ubuntu/Debian uses a real perl script that actually does the real work
.xml.texi:
#	-if test x$(DB2X_TEXI) != x; then \
#	  out=`echo $* | sed -e 's:gnash:gnash_:'`; \
#	  $(DB2X_TEXI) --encoding=us-ascii//TRANSLIT --string-param directory-description="Gnash" --string-param output-file=$${out} $<; \
#	  $(MAKEINFO) --force $${out}.texi; \
#	else \
#	  basefile="$*"; \
#          $(DB2X_XSLTPROC) -s texi $< --output $${basefile}.txml; \
#	  $(DB2X_TEXIXML) --info --encoding=us-ascii//TRANSLIT $${basefile}.txml ; \
#	  rm $${basefile}.txml; \
#	fi

.texi.info:
#	-$(MAKEINFO) --force $<
	touch $@;

.man-xml.1:
#	-if test x$(DB2X_MAN) != x; then \
#	  $(DB2X_MAN) $?; \
#        else \
#	  $(DB2X_XSLTPROC) -s man $? -o $*.mxml; \
#	  $(DB2X_MANXML) $*.mxml; \
#	  $(RM) $*.mxml; \
#	fi
	@if test -d $(srcdir)/preformatted; then \
	  echo "WARNING: Linking to preformatted version of $@, it could be out of date."; \
	  $(LN_S) -f $(srcdir)/preformatted/$@.in ./$@; \
	else \
	  touch $@; \
	fi

# As these man page alias files are very small, we just copy them
# into the build rather than symbolically link them like we used to.
$(EXTRAMANPAGES): gnash.1
	@if ! test -e $@; then \
	  cp $(srcdir)/$@ .; \
	fi

gprocessor.1: $(srcdir)/gprocessor.man-xml
#dumpshm.1: $(srcdir)/dumpshm.man-xml
soldumper.1: $(srcdir)/soldumper.man-xml
flvdumper.1: $(srcdir)/flvdumper.man-xml
cygnal.1: $(srcdir)/cygnal.man-xml
findmicrophones.1: $(srcdir)/findmicrophones.man-xml
findwebcams.1: $(srcdir)/findwebcams.man-xml

#gnash_user.info: gnashuser.texi
#gnash_ref.info: gnashref.texi
#gnashuser.texi gnash_user.texi: images gnashuser.xml
#gnashref.texi gnash_ref.texi: gnashref.xml
gnash_user.info: gnashuser.xml
	-@if test -d $(srcdir)/preformatted; then \
	  echo "WARNING: Linking to preformatted version of $@, it could be out of date."; \
	  $(LN_S) -f $(srcdir)/preformatted/gnash_user.info.in ./gnash_user.info; \
	fi
gnash_ref.info: gnashref.xml
	-@if test -d $(srcdir)/preformatted; then \
	  echo "WARNING: Linking to preformatted version of $@, it could be out of date."; \
	  $(LN_S) -f $(srcdir)/preformatted/gnash_ref.info.in ./gnash_ref.info; \
	fi
gnashref.html: gnashref.xml
	-@if test -d $(srcdir)/preformatted; then \
	  echo "WARNING: Linking to preformatted version of $@, it could be out of date."; \
	  $(LN_S) -f $(srcdir)/preformatted/gnashref.html.in ./gnashref.html; \
	fi
gnashuser.html: gnashref.xml
	-@if test -d $(srcdir)/preformatted; then \
	  echo "WARNING: Linking to preformatted version of $@, it could be out of date."; \
	  $(LN_S) -f $(srcdir)/preformatted/gnashuser.html.in ./gnashuser.html; \
	fi

lint-user:
	@xmllint $(srcdir)/gnashuser.xml

lint-ref:
	@xmllint $(srcdir)/gnashref.xml

# This target adds the images to the dist file, which is
# produced by the dist-bzip2, dist-gzip, or snapshot targets.
# distdir is a built in target for Automake.
dist-hook:
	test -d "$(distdir)/images" || $(mkinstalldirs) "$(distdir)/images"
	-@for file in $(srcdir)/images/*.png $(srcdir)/images/*.txt; do \
	  basefile="`basename $${file}`"; \
	  if test ! -e $(distdir)/images/$${basefile}; then \
	    $(INSTALL_DATA) $$file $(distdir)/images/; \
	  fi; \
	done

# When we build in a seperate build tree, we need links to the images
# subdirectory to have them be included in the final output.
images:
	-@if test ! -e images; then \
	  $(LN_S) -f $(srcdir)/images images; \
	fi;

#
# Installing documentation can be a complex process, as we build
# multiple output formats. This section contains all of the 
# Makefile targets that are used to install or uninstall the
# documentation.
#
install-html-hook: $(HTMLS)
	-@test -d "$(DESTDIR)$(htmldir)" || $(mkinstalldirs) "$(DESTDIR)$(htmldir)"
	-$(INSTALL_DATA) gnashuser.html $(DESTDIR)$(htmldir)
	-$(INSTALL_DATA) gnashref.html $(DESTDIR)$(htmldir)
	@test -d "$(DESTDIR)$(htmldir)/images" || $(mkinstalldirs) "$(DESTDIR)$(htmldir)/images"
	-for file in $(srcdir)/images/*.png; do \
	  basefile=`echo $$file | sed -e  's,^.*/,,'`; \
	  $(INSTALL_DATA) $$file $(DESTDIR)$(htmldir)/images/$$basefile; \
	done

# There are two versions of install-info, with unfortunately different options.
# Rather than test the version at configure time, we do it at runtime instead
# so we can switch versions at installation time.
install-info-hook: $(INFOS)
#	-@test -d "$(DESTDIR)$(infodir)" || $(mkinstalldirs) "$(DESTDIR)$(infodir)"
#	-for i in *.info; do \
#	  $(INSTALL_DATA) "$$i" $(DESTDIR)$(infodir)/"$$i"; \
#	done; \
#	type="`file $(INSTALL_INFO) | grep -ic "perl " 2>&1`"; \
#	if test $${type} -gt 0; then \
#	  $(INSTALL_INFO) --menuentry="\"Gnash User Manual\"" --quiet --description="\"Gnash User Manual\"" --info-dir=$(DESTDIR)$(infodir) $(DESTDIR)$(infodir)/gnash_user.info; \
#	  $(INSTALL_INFO) --menuentry="\"Gnash Reference Manual\"" --quiet --description="\"Gnash Reference Manual\"" --info-dir=$(DESTDIR)$(infodir) $(DESTDIR)$(infodir)/gnash_ref.info; \
#        else \
#	  $(INSTALL_INFO) --entry="\"Gnash User Manual: (gnash_user)	Gnash User Manual\"" --info-dir=$(DESTDIR)$(infodir) $(DESTDIR)$(infodir)/gnash_user.info; \
#	  $(INSTALL_INFO) --entry="\"Gnash Reference Manual (gnash_ref)	Gnash Reference Manual\"" --info-dir=$(DESTDIR)$(infodir) $(DESTDIR)$(infodir)/gnash_ref.info; \
#	fi
	echo "Using preformtted output file,"
	-$(LN_S) -f $(srcdir)/preformatted/gnash_user.info.in gnash_user.info
	-$(LN_S) -f $(srcdir)/preformatted/gnash_ref.info.in gnash_ref.info
        -$(INSTALL_INFO) --entry="\"Gnash User Manual: (gnash_user)	Gnash User Manual\"" --info-dir=$(DESTDIR)$(infodir) $(DESTDIR)$(infodir)/gnash_user.info
	-$(INSTALL_INFO) --entry="\"Gnash Reference Manual (gnash_ref)	Gnash Reference Manual\"" --info-dir=$(DESTDIR)$(infodir) $(DESTDIR)$(infodir)/gnash_ref.info

uninstall-info-hook:
#	-$(INSTALL_INFO) --dir-file=$(DESTDIR)$(infodir)/dir --remove $(DESTDIR)$(infodir)/gnash_user.info
#	-$(INSTALL_INFO)  --dir-file=$(DESTDIR)$(infodir)/dir --remove $(DESTDIR)$(infodir)/gnash_ref.info
	-$(RM) $(DESTDIR)$(infodir)/gnash_user.info
	-$(RM) $(DESTDIR)$(infodir)/gnash_ref.info

uninstall-html-hook:
	-$(RM) $(DESTDIR)$(htmldir)/gnashuser.html
	-$(RM) $(DESTDIR)$(htmldir)/gnashref.html
	-$(RM) $(DESTDIR)$(htmldir)/images/*png

# install-data-hook: install-data-hook-omf
# uninstall-local: uninstall-local-doc uninstall-local-omf

# gtk-gnash.1, qt4-gnash.1, fb-gnash.1, sdl-gnash.1,gnash-gtk-launcher.1 and gnash-qt-launcher.1 are special,
# as they  are created by the --solinks option to the docbook2 tools for creating man pages.
install-man1: $(MANPAGES) $(EXTRAMANPAGES)
	-test -d "$(DESTDIR)$(man1dir)/" || $(mkinstalldirs) "$(DESTDIR)$(man1dir)/"
	-for file in $(MANPAGES) $(EXTRAMANPAGES); do \
	   $(INSTALL_DATA) $$file $(DESTDIR)$(man1dir)/$$file; \
	done

install-data-hook: install-man1 install-info-hook install-html-hook 
uninstall-hook: uninstall-info-hook uninstall-html-hook
	-for file in $(MANPAGES) $(EXTRAMANPAGES); do \
	   $(RM) $(DESTDIR)$(man1dir)/$$file; \
	done

#
# GNOME Help support, which currently isn't supported
# by the Gnash GTK GUI.
#

# if GHELP
# all-local: omf
# INSTALL_DATA_HOOK += omf install-data-omf-hook
# UNINSTALL_HOOK += uninstall-omf-hook
# endif

omf: omf_timestamp

omf_timestamp: $(omffile)
	for file in $(omffile); do \
	    $(SCROLLINSTALL) $(docdir)/$(docname).xml $(srcdir)/$$file $$file.out; \
	done
	touch omf_timestamp

install-data-omf-hook:
	$(mkinstalldirs) $(DESTDIR)$(omf_dest_dir)
	for file in $(omffile); do \
	  $(INSTALL_DATA) $$file.out $(DESTDIR)$(omf_dest_dir)/$$file; \
	done
	-$(SCROLLUPDATE) -v -o $(DESTDIR)$(omf_dest_dir)

uninstall-omf-hook:
	-for file in $(omffile); do \
	    $(RM) $(DESTDIR)$(omf_dest_dir)/$$file; \
	done
	-rmdir $(DESTDIR)$(omf_dest_dir)
	-$(SCROLLUPDATE) -v 

# This updates the copies of the manuals that are stored preformatted
# so not everyone needs to get Docbook working well enough to produce
# the documentation. This should only be used by developers after
# making changes to a documentation source file.
#update-preformats:
#	-@for type in 1 html info; do \
#	  for i in *.$${type}; do \
#	    name=$${i/\.$${type}/.$${type}.in}; \
#	    diff=`diff --brief $$i $(srcdir)/preformatted/$${name}`; \
#	    if test ! x"$${diff}" = x; then \
#	      echo "Updating the preformatted/$${name}"; \
#	      cp $$i $(srcdir)/preformatted/$${name}; \
#	    fi; \
#	  done; \
#	done

# Always execute these targets as they have no real dependencies.
.PHONY: images install-info-hook uninstall-info-hook install-html-hook uninstall-html-hook uninstall-data-hook install-data-hook images install-man1 update-preformats $(EXTRAMANPAGES)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
